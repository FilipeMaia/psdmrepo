#--------------------------------------------------------------------------
# File and Version Information:
#  $Id$
#
# Description:
#  SConscript file for package lusi-xtc
#------------------------------------------------------------------------

# Do not delete following line, it must be present in 
# SConscript file for any SIT project
Import('*')

from os.path import join as pjoin
from SConsTools.standardExternalPackage import standardExternalPackage

#
# For the standard external packages which contain includes, libraries, 
# and applications it is usually sufficient to call standardExternalPackage()
# giving some or all parameters.
#


pdsdata_ver = '6.8.1'
PREFIX = pjoin('$SIT_EXTERNAL_SW', 'pdsdata', pdsdata_ver)

# pdsdata package will link all the stuff, but only includes one
# library into the build
BINDIR = 'bin'
LIBDIR = 'lib'
INCDIR = 'pdsdata'
PKGLIBS = 'xtcdata'
standardExternalPackage('pdsdata', **locals())

del LIBDIR
del INCDIR
del BINDIR

# map package names to libraries
packages = {
    'acqiris'       : 'acqdata',
    'andor'         : 'andordata',
    'app'           : 'appdata',
    'bld'           : 'bld',
    'camera'        : 'camdata',
    'compress'      : 'compressdata',
    'control'       : 'controldata',
    'cspad'         : 'cspaddata',
    'cspad2x2'      : 'cspad2x2data',
    'encoder'       : 'encoderdata',
    'epics'         : 'epics',
    'evr'           : 'evrdata',
    'fccd'          : 'fccddata',
    'fexamp'        : 'fexampdata',
    'fli'           : 'flidata',
    'gsc16ai'       : 'gsc16aidata',
    'index'         : 'indexdata',
    'imp'           : 'impdata',
    'ipimb'         : 'ipimbdata',
    'lusi'          : 'lusidata',
    'oceanoptics'   : 'oceanopticsdata',
    'opal1k'        : 'opal1kdata',
    'orca'          : 'orcadata',
    'phasics'       : 'phasicsdata',
    'pnCCD'         : 'pnccddata',
    'princeton'     : 'princetondata',
    'pulnix'        : 'pulnixdata',
    'quartz'        : 'quartzdata',
    'timepix'       : 'timepixdata',
    'usdusb'        : 'usdusbdata',
    'xamps'         : 'xampsdata',
}

for pkg, lib in packages.items():
    PKGLIBS = lib
    PKGINFO = None
    DEPS = 'pdsdata'
    standardExternalPackage('pdsdata_'+pkg, **locals())
