
// *** Do not edit this file, it is auto-generated ***

#include "psddl_psana/epics.ddl.h"

#include <cstddef>

namespace Psana {
namespace Epics {
std::vector<int> dbr_ctrl_short::_units_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(MAX_UNITS_SIZE);
  return shape;
}

std::vector<int> dbr_ctrl_float::_units_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(MAX_UNITS_SIZE);
  return shape;
}

std::vector<int> dbr_ctrl_enum::_strs_shape() const
{
  std::vector<int> shape;
  shape.reserve(2);
  shape.push_back(MAX_ENUM_STATES);
  shape.push_back(MAX_ENUM_STRING_SIZE);
  return shape;
}

std::vector<int> dbr_ctrl_char::_units_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(MAX_UNITS_SIZE);
  return shape;
}

std::vector<int> dbr_ctrl_long::_units_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(MAX_UNITS_SIZE);
  return shape;
}

std::vector<int> dbr_ctrl_double::_units_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(MAX_UNITS_SIZE);
  return shape;
}


EpicsPvHeader::~EpicsPvHeader() {}


EpicsPvCtrlHeader::~EpicsPvCtrlHeader() {}


EpicsPvTimeHeader::~EpicsPvTimeHeader() {}


EpicsPvCtrlString::~EpicsPvCtrlString() {}


EpicsPvCtrlShort::~EpicsPvCtrlShort() {}


EpicsPvCtrlFloat::~EpicsPvCtrlFloat() {}


EpicsPvCtrlEnum::~EpicsPvCtrlEnum() {}


EpicsPvCtrlChar::~EpicsPvCtrlChar() {}


EpicsPvCtrlLong::~EpicsPvCtrlLong() {}


EpicsPvCtrlDouble::~EpicsPvCtrlDouble() {}


EpicsPvTimeString::~EpicsPvTimeString() {}


EpicsPvTimeShort::~EpicsPvTimeShort() {}


EpicsPvTimeFloat::~EpicsPvTimeFloat() {}


EpicsPvTimeEnum::~EpicsPvTimeEnum() {}


EpicsPvTimeChar::~EpicsPvTimeChar() {}


EpicsPvTimeLong::~EpicsPvTimeLong() {}


EpicsPvTimeDouble::~EpicsPvTimeDouble() {}

} // namespace Epics
} // namespace Psana
