
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/ipimb.ddl.h"
#include <iostream>
namespace Psana {
namespace Ipimb {

ConfigV1::~ConfigV1() {}

std::ostream& operator<<(std::ostream& str, Ipimb::ConfigV1::CapacitorValue enval) {
  const char* val;
  switch (enval) {
  case Ipimb::ConfigV1::c_1pF:
    val = "c_1pF";
    break;
  case Ipimb::ConfigV1::c_100pF:
    val = "c_100pF";
    break;
  case Ipimb::ConfigV1::c_10nF:
    val = "c_10nF";
    break;
  default:
    return str << "CapacitorValue(" << int(enval) << ")";
  }
  return str << val;
}

ConfigV2::~ConfigV2() {}

std::ostream& operator<<(std::ostream& str, Ipimb::ConfigV2::CapacitorValue enval) {
  const char* val;
  switch (enval) {
  case Ipimb::ConfigV2::c_1pF:
    val = "c_1pF";
    break;
  case Ipimb::ConfigV2::c_4p7pF:
    val = "c_4p7pF";
    break;
  case Ipimb::ConfigV2::c_24pF:
    val = "c_24pF";
    break;
  case Ipimb::ConfigV2::c_120pF:
    val = "c_120pF";
    break;
  case Ipimb::ConfigV2::c_620pF:
    val = "c_620pF";
    break;
  case Ipimb::ConfigV2::c_3p3nF:
    val = "c_3p3nF";
    break;
  case Ipimb::ConfigV2::c_10nF:
    val = "c_10nF";
    break;
  case Ipimb::ConfigV2::expert:
    val = "expert";
    break;
  default:
    return str << "CapacitorValue(" << int(enval) << ")";
  }
  return str << val;
}

DataV1::~DataV1() {}


DataV2::~DataV2() {}

} // namespace Ipimb
} // namespace Psana
