
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/evr.ddl.h"
namespace Psana {
namespace EvrData {
int16_t
PulseConfig::trigger() const {
  return this->bf_trigger()-1;
}
int16_t
PulseConfig::set() const {
  return this->bf_set()-1;
}
int16_t
PulseConfig::clear() const {
  return this->bf_clear()-1;
}
std::vector<int>
EventCodeV5::desc_shape() const {
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(DescSize);
  return shape;
}
EvrData::OutputMap::Source
OutputMap::source() const {
  return Source(_v & 0xff);
}
uint8_t
OutputMap::source_id() const {
  return (_v >> 8) & 0xff;
}
EvrData::OutputMap::Conn
OutputMap::conn() const {
  return Conn((_v >> 16) & 0xff);
}
uint8_t
OutputMap::conn_id() const {
  return _v >> 24;
}

ConfigV1::~ConfigV1() {}


ConfigV2::~ConfigV2() {}


ConfigV3::~ConfigV3() {}


ConfigV4::~ConfigV4() {}


SequencerConfigV1::~SequencerConfigV1() {}


ConfigV5::~ConfigV5() {}


DataV3::~DataV3() {}

std::vector<int>
IOChannel::name_shape() const {
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(NameLength);
  return shape;
}

IOConfigV1::~IOConfigV1() {}

} // namespace EvrData
} // namespace Psana
