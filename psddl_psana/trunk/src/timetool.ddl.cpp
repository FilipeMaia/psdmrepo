
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/timetool.ddl.h"
#include <iostream>
namespace Psana {
namespace TimeTool {
std::ostream& operator<<(std::ostream& str, TimeTool::EventLogic::LogicOp enval) {
  const char* val;
  switch (enval) {
  case TimeTool::EventLogic::L_OR:
    val = "L_OR";
    break;
  case TimeTool::EventLogic::L_AND:
    val = "L_AND";
    break;
  case TimeTool::EventLogic::L_OR_NOT:
    val = "L_OR_NOT";
    break;
  case TimeTool::EventLogic::L_AND_NOT:
    val = "L_AND_NOT";
    break;
  default:
    return str << "LogicOp(" << int(enval) << ")";
  }
  return str << val;
}

ConfigV1::~ConfigV1() {}

std::ostream& operator<<(std::ostream& str, TimeTool::ConfigV1::Axis enval) {
  const char* val;
  switch (enval) {
  case TimeTool::ConfigV1::X:
    val = "X";
    break;
  case TimeTool::ConfigV1::Y:
    val = "Y";
    break;
  default:
    return str << "Axis(" << int(enval) << ")";
  }
  return str << val;
}

ConfigV2::~ConfigV2() {}

std::ostream& operator<<(std::ostream& str, TimeTool::ConfigV2::Axis enval) {
  const char* val;
  switch (enval) {
  case TimeTool::ConfigV2::X:
    val = "X";
    break;
  case TimeTool::ConfigV2::Y:
    val = "Y";
    break;
  default:
    return str << "Axis(" << int(enval) << ")";
  }
  return str << val;
}

DataV1::~DataV1() {}

std::ostream& operator<<(std::ostream& str, TimeTool::DataV1::EventType enval) {
  const char* val;
  switch (enval) {
  case TimeTool::DataV1::Dark:
    val = "Dark";
    break;
  case TimeTool::DataV1::Reference:
    val = "Reference";
    break;
  case TimeTool::DataV1::Signal:
    val = "Signal";
    break;
  default:
    return str << "EventType(" << int(enval) << ")";
  }
  return str << val;
}

DataV2::~DataV2() {}

std::ostream& operator<<(std::ostream& str, TimeTool::DataV2::EventType enval) {
  const char* val;
  switch (enval) {
  case TimeTool::DataV2::Dark:
    val = "Dark";
    break;
  case TimeTool::DataV2::Reference:
    val = "Reference";
    break;
  case TimeTool::DataV2::Signal:
    val = "Signal";
    break;
  default:
    return str << "EventType(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace TimeTool
} // namespace Psana
