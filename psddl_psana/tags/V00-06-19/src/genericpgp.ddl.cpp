
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/genericpgp.ddl.h"
#include <iostream>
namespace Psana {
namespace GenericPgp {

CDimension::~CDimension() {}

std::ostream& operator<<(std::ostream& str, GenericPgp::CRegister::Action enval) {
  const char* val;
  switch (enval) {
  case GenericPgp::CRegister::RegisterRead:
    val = "RegisterRead";
    break;
  case GenericPgp::CRegister::RegisterWrite:
    val = "RegisterWrite";
    break;
  case GenericPgp::CRegister::RegisterWriteA:
    val = "RegisterWriteA";
    break;
  case GenericPgp::CRegister::RegisterVerify:
    val = "RegisterVerify";
    break;
  case GenericPgp::CRegister::Spin:
    val = "Spin";
    break;
  case GenericPgp::CRegister::Usleep:
    val = "Usleep";
    break;
  case GenericPgp::CRegister::Flush:
    val = "Flush";
    break;
  default:
    return str << "Action(" << int(enval) << ")";
  }
  return str << val;
}

ConfigV1::~ConfigV1() {}

} // namespace GenericPgp
} // namespace Psana
