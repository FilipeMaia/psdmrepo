#ifndef PSANA_OCEANOPTICS_DDL_H
#define PSANA_OCEANOPTICS_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include "ndarray/ndarray.h"
#include "pdsdata/xtc/TypeId.hh"
namespace Psana {
namespace OceanOptics {

/** @class ConfigV1

  
*/


class ConfigV1 {
public:
  enum { TypeId = Pds::TypeId::Id_OceanOpticsConfig /**< XTC type ID value (from Pds::TypeId class) */ };
  enum { Version = 1 /**< XTC type version number */ };
  virtual ~ConfigV1();
  virtual float exposureTime() const = 0;
  virtual ndarray<double, 1> waveLenCalib() const = 0;
  virtual ndarray<double, 1> nonlinCorrect() const = 0;
  virtual double strayLightConstant() const = 0;
};

/** @class timespec64

  
*/

#pragma pack(push,4)

class timespec64 {
public:
  timespec64()
  {
  }
  timespec64(uint64_t arg__tv_sec, uint64_t arg__tv_nsec)
    : _tv_sec(arg__tv_sec), _tv_nsec(arg__tv_nsec)
  {
  }
  uint64_t tv_sec() const { return _tv_sec; }
  uint64_t tv_nsec() const { return _tv_nsec; }
  static uint32_t _sizeof()  { return 16; }
private:
  uint64_t	_tv_sec;
  uint64_t	_tv_nsec;
};
#pragma pack(pop)

/** @class DataV1

  
*/

class ConfigV1;

class DataV1 {
public:
  enum { TypeId = Pds::TypeId::Id_OceanOpticsData /**< XTC type ID value (from Pds::TypeId class) */ };
  enum { Version = 1 /**< XTC type version number */ };
  enum { iDataReadSize = 8192 };
  enum { iNumPixels = 3840 };
  enum { iActivePixelIndex = 22 };
  virtual ~DataV1();
  virtual ndarray<uint16_t, 1> data() const = 0;
  virtual uint64_t frameCounter() const = 0;
  virtual uint64_t numDelayedFrames() const = 0;
  virtual uint64_t numDiscardFrames() const = 0;
  virtual const OceanOptics::timespec64& timeFrameStart() const = 0;
  virtual const OceanOptics::timespec64& timeFrameFirstData() const = 0;
  virtual const OceanOptics::timespec64& timeFrameEnd() const = 0;
  virtual int32_t version() const = 0;
  virtual int8_t numSpectraInData() const = 0;
  virtual int8_t numSpectraInQueue() const = 0;
  virtual int8_t numSpectraUnused() const = 0;
  virtual double durationOfFrame() const = 0;
  virtual double nonlinerCorrected(uint32_t iPixel) const = 0;
};
} // namespace OceanOptics
} // namespace Psana
#endif // PSANA_OCEANOPTICS_DDL_H
