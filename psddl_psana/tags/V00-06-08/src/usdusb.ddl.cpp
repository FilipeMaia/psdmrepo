
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/usdusb.ddl.h"
#include <iostream>
namespace Psana {
namespace UsdUsb {

ConfigV1::~ConfigV1() {}

std::ostream& operator<<(std::ostream& str, UsdUsb::ConfigV1::Count_Mode enval) {
  const char* val;
  switch (enval) {
  case UsdUsb::ConfigV1::WRAP_FULL:
    val = "WRAP_FULL";
    break;
  case UsdUsb::ConfigV1::LIMIT:
    val = "LIMIT";
    break;
  case UsdUsb::ConfigV1::HALT:
    val = "HALT";
    break;
  case UsdUsb::ConfigV1::WRAP_PRESET:
    val = "WRAP_PRESET";
    break;
  default:
    return str << "Count_Mode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, UsdUsb::ConfigV1::Quad_Mode enval) {
  const char* val;
  switch (enval) {
  case UsdUsb::ConfigV1::CLOCK_DIR:
    val = "CLOCK_DIR";
    break;
  case UsdUsb::ConfigV1::X1:
    val = "X1";
    break;
  case UsdUsb::ConfigV1::X2:
    val = "X2";
    break;
  case UsdUsb::ConfigV1::X4:
    val = "X4";
    break;
  default:
    return str << "Quad_Mode(" << int(enval) << ")";
  }
  return str << val;
}

DataV1::~DataV1() {}

} // namespace UsdUsb
} // namespace Psana
