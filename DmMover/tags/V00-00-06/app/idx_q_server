#!@PYTHON@

##
# database with requests to create index files:
# xtc file | date added | status | lsfjob | 
##

import os
import sys
import time
import sqlite3 as sq

from AppUtils.AppBase import AppBase

from DmMover.xtcidxjob import JobQueue, LsfIdxJobs


class CreateIdxFilesApp(AppBase):
    
    def __init__(self):
        AppBase.__init__(self, installLogger = True, usage = "usage: %prog [options]" )

        self._parser.add_option("--maxrun", type='int', default=10,
                                help="max number of active jobs")
        self._parser.add_option("--wait", type='int', default=30,
                                help="wait time between checking for new jobs")
        
        
    def _run(self):
        
        jqueue = JobQueue("/u1/psdm/srv_idx/db")
        jexe = LsfIdxJobs(release="/reg/neh/home1/wilko/release_dev/git/data_mover", \
                          cmd="idx_create")
        
        wait_file = "/u1/psdm/srv_idx/WAIT"
        while True:
            
            if os.path.exists(wait_file):
                self.warning("Wait on stop file")
                time.sleep(self._options.wait)
                continue


            # check active jobs 
            n_allowed = self._options.maxrun
            for job in jqueue.active():
                stat = jexe.job_done(job)
                if stat:
                    jqueue.job_done(job)
                else:
                    n_allowed -= 1 
                self.debug("Job status %s  %s %s allowed: %d", stat, job.fn, job.path, n_allowed)

            # submit new ones   
            self.warning("Allowed jobs: %d", n_allowed)
            for job in jqueue.to_submit():
                if n_allowed <= 0:
                    break
                self.debug("to submit %s allowed: %d", job.fn, n_allowed)
                try:
                    jexe.run(job)
                except Exception:
                    self.error("Job submission failed %s", job.fn)
                else:
                    jqueue.job_submitted(job)
                    n_allowed -= 1
                    time.sleep(1)

            time.sleep(self._options.wait)

    
    
if __name__ == "__main__":
    
    app = CreateIdxFilesApp()
    rc = app.run()
    sys.exit(rc)
