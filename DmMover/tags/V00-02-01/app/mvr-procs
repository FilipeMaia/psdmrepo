#!/bin/bash 

##doc
#  Check the status of the datamover processes
#  
#  stat_procs.sh action
#   with the following  actions:
#      stat: print procServ and corresponding mover script. 
#            One line per found procServ. (default)        
#      procs: list daq nodes for which a datamover is running
#      procserv: list running procServ process and ports they listen on
#      logs: show latest logs in the /u1/.... log directory used by procServ
##end 


mv2offline_procs() {
    set -f
    daq=$(ps -ef | egrep 'mv2offline-(pull|ana|ffb)' | grep -v procServ | \
        sed -n -e 's/.*\ \([^\ ]\+mv2offline[^\ ]\+\).*host \([a-z0-9\-]\+\).*/\2 \1/p' \
               -e 's/.*\ \([^\ ]\+mv2offline[^\ ]\+\).*dirpath \([/\*a-z0-9\-]\+\).*/\2 \1/p' | \
        grep -v grep | sort )
    
    if [ $SNG_LINE -eq 1 ] ; then
        echo $daq
    else
        echo $daq | xargs -n 2
    fi
    set +f
}

mv2offline_procServ() {
    # print data-src and procServ-port
    set -f
    # print src-host and procServ port
    str=$(ps -ef | grep procServ | grep mv2 \
        | sed -n -e 's/.* \([0-9]\+\) .* --host \([ipd][a-z0-9\-]\+\).*/\"\2 \1\"/p' \
                 -e 's/.* \([0-9]\+\) .* --dirpath \([/*a-z0-9\-]\+\).*/\"\2 \1\"/p' | sort)
    
    eval res=($str)
    if [ $SNG_LINE -eq 1 ] ; then
        echo ${res[@]}
    else
        for e in "${res[@]}" ; do
            echo $e
        done
    fi
    set +f
}

mv2offline_status() {
    # some cmd args might contain wild characters "*", turn of globbing
    set -f
    found_pid=0
    for pid in $(ps -ef | grep procServ | awk '/mv2/ {print $2}') ; do
        found_pid=1
        proc_opts="$(ps -p $pid -o args= | \
            sed -n -e 's/.* \([0-9]\+\) .* --host \([dpi][a-z0-9\-]\+\).*/\2 \1/p' \
                   -e 's/.* \([0-9]\+\) .* --dirpath \([/*a-z0-9\-]\+\).*/\2 \1/p')"
        mvr_cmd=($(ps --ppid $pid -o etime= -o args=))
        cmd="${mvr_cmd[@]:2}"
        printf "%s %12s %s\n" "$proc_opts" "${mvr_cmd[0]}" "$cmd"
    done
    
    [ $found_pid -eq 0 ] && echo "No procs found"
    set +f
    return 0
}


latest_logs() {
    logdir=/u1/psdm/mvr/log
    find ${logdir} -maxdepth 1 -name mv2offline.\* | \
        sed  '/.*\.[0-9T]\+/d' | sort -u
}

SNG_LINE=0
while getopts :s OPT; do
    case $OPT in
        s|+s) SNG_LINE=1 ;;
        *)
            echo "usage: ${0##*/} [+-s} [--] ARGS..."
            exit 2
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1


case ${1:?} in
    procs)  mv2offline_procs ;;
    procserv) mv2offline_procServ ;;
    stat) mv2offline_status ;;
    logs) latest_logs ;;
    *)
        echo "Not implemented $1"
        exit 1
esac
