#ifndef ROOTHIST_ROOTPROFILE_H
#define ROOTHIST_ROOTPROFILE_H

//--------------------------------------------------------------------------
// File and Version Information:
// 	$Id$
//
// Description:
//	Class RootProfile.
//
//------------------------------------------------------------------------

//-----------------
// C/C++ Headers --
//-----------------

#include <iostream>
#include <string>

//----------------------
// Base Class Headers --
//----------------------

#include "PSHist/Profile.h"
#include "PSHist/Axis.h"

//-------------------------------
// Collaborating Class Headers --
//-------------------------------

#include "root/TProfile.h"

//------------------------------------
// Collaborating Class Declarations --
//------------------------------------

//		---------------------
// 		-- Class Interface --
//		---------------------

namespace RootHist {

/**
 *  This class implements 1D profile-histogram with equal or variable bin size,
 *  which are defined in ROOT as TProfile.
 *  
 *  Essentially, constructor of this class creates an type-independent pointer TProfile *m_histp;
 *  which is used for any other interactions with ROOT histograms of differnt types.
 *  
 *  
 *  This software was developed for the LCLS project.  If you use all or 
 *  part of it, please give an appropriate acknowledgment.
 *
 *  @see AdditionalClass
 *
 *  @version $Id$
 *
 *  @author Mikhail S. Dubrovin
 */

class RootProfile : public PSHist::Profile {
public:

  // Constructors
  RootProfile () {}
  RootProfile ( const std::string &name, const std::string &title, int nbins, double xlow, double xhigh, double ylow, double yhigh, const std::string &option="" );
  RootProfile ( const std::string &name, const std::string &title, int nbins, double *xbinedges, double ylow, double yhigh, const std::string &option="" );
  RootProfile ( const std::string &name, const std::string &title, PSHist::Axis &axis, double ylow, double yhigh, const std::string &option="" );

  // Destructor
  virtual ~RootProfile(){}

  // Methods
  virtual void fill(double x, double y, double weight=1.0);
  virtual void reset();
  virtual void print(std::ostream &o) const;

private:

  // Data members
  TProfile *m_histp;

  // Static members
  //static int s_number_of_booked_histograms;

  // Copy constructor and assignment are disabled by default

  RootProfile ( const RootProfile& );

  RootProfile & operator = ( const RootProfile& );

  // std::string getAutoGeneratedName();
};

} // namespace RootHist

#endif // ROOTHIST_ROOTPROFILE_H
