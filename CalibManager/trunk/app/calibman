#!@PYTHON@
#--------------------------------------------------------------------------
# File and Version Information:
#  $Id$
#
# Description:
#  Script calibman...
#
#------------------------------------------------------------------------

"""This script starts the CalibManager GUI and other threads for signal exchange

This software was developed for the LCLS project.  If you use all or 
part of it, please give an appropriate acknowledgement.

@see RelatedModule

@version $Id$ 

@author Mikhail S. Dubrovin
"""

#-------------------
#  Import modules --
#-------------------

import sys
import os

if __name__ == "__main__" :
    import matplotlib
    matplotlib.use('Qt4Agg') # forse Agg rendering to a Qt4 canvas (backend)

from PyQt4 import QtGui
from CalibManager.GUIMain import GUIMain
from CalibManager.GlobalUtils import ready_to_start
from CalibManager.ThreadWorker import ThreadWorker
from CalibManager.ThreadCheckNewXtcFiles import ThreadCheckNewXtcFiles
#---------------------------------

class StartCalibManager :

    def __init__ ( self ) :
        """Start application"""

        self.input_parameters()

        if not ready_to_start(check_bits=0777, fatal_bits=0) : 
            sys.exit('Not ready to start aplication yet...')

	print "Start Calibration Manager GUI"
        app = QtGui.QApplication(sys.argv)

	t1 = ThreadWorker(dt_sec=5, print_bits=0)
	t2 = ThreadCheckNewXtcFiles(dt_sec=60, print_bits=0)

	t1.start()
	t2.start()

        gui = GUIMain(None,app)
        gui.show()
        
        sys.exit(app.exec_())


    def input_parameters(self):	
        msg = "Input parameters:" + str(sys.argv)
	#print msg	

#---------------------------------

if __name__ == "__main__" :

    StartCalibManager()

#---------------------------------
