#ifndef PSDDL_PDS2PSANA_L3T_DDL_H
#define PSDDL_PDS2PSANA_L3T_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/l3t.ddl.h"
#include "pdsdata/psddl/l3t.ddl.h"
namespace psddl_pds2psana {
namespace L3T {

class ConfigV1 : public Psana::L3T::ConfigV1 {
public:
  typedef Pds::L3T::ConfigV1 XtcType;
  typedef Psana::L3T::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint32_t module_id_len() const;
  virtual uint32_t desc_len() const;
  virtual const char* module_id() const;
  virtual const char* desc() const;
  virtual std::vector<int> module_id_shape() const;
  virtual std::vector<int> desc_shape() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV1 : public Psana::L3T::DataV1 {
public:
  typedef Pds::L3T::DataV1 XtcType;
  typedef Psana::L3T::DataV1 PsanaType;
  DataV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV1();
  virtual uint32_t accept() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV2 : public Psana::L3T::DataV2 {
public:
  typedef Pds::L3T::DataV2 XtcType;
  typedef Psana::L3T::DataV2 PsanaType;
  DataV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV2();
  virtual uint32_t accept() const;
  virtual Psana::L3T::DataV2::Result result() const;
  virtual Psana::L3T::DataV2::Bias bias() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace L3T
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_L3T_DDL_H
