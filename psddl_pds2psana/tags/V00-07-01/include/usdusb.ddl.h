#ifndef PSDDL_PDS2PSANA_USDUSB_DDL_H
#define PSDDL_PDS2PSANA_USDUSB_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/usdusb.ddl.h"
#include "psddl_pdsdata/usdusb.ddl.h"
namespace psddl_pds2psana {
namespace UsdUsb {

class ConfigV1 : public Psana::UsdUsb::ConfigV1 {
public:
  typedef PsddlPds::UsdUsb::ConfigV1 XtcType;
  typedef Psana::UsdUsb::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual ndarray<const uint32_t, 1> counting_mode() const;
  virtual ndarray<const uint32_t, 1> quadrature_mode() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV1 : public Psana::UsdUsb::DataV1 {
public:
  typedef PsddlPds::UsdUsb::DataV1 XtcType;
  typedef Psana::UsdUsb::DataV1 PsanaType;
  DataV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV1();
  virtual uint8_t digital_in() const;
  virtual uint32_t timestamp() const;
  virtual ndarray<const uint8_t, 1> status() const;
  virtual ndarray<const uint16_t, 1> analog_in() const;
  virtual ndarray<const int32_t, 1> encoder_count() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace UsdUsb
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_USDUSB_DDL_H
