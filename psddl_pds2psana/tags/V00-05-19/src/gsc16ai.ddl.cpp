
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pds2psana/gsc16ai.ddl.h"

#include <cstddef>

#include <stdexcept>

namespace psddl_pds2psana {
namespace Gsc16ai {
Psana::Gsc16ai::ConfigV1::InputMode pds_to_psana(PsddlPds::Gsc16ai::ConfigV1::InputMode e)
{
  return Psana::Gsc16ai::ConfigV1::InputMode(e);
}

Psana::Gsc16ai::ConfigV1::VoltageRange pds_to_psana(PsddlPds::Gsc16ai::ConfigV1::VoltageRange e)
{
  return Psana::Gsc16ai::ConfigV1::VoltageRange(e);
}

Psana::Gsc16ai::ConfigV1::TriggerMode pds_to_psana(PsddlPds::Gsc16ai::ConfigV1::TriggerMode e)
{
  return Psana::Gsc16ai::ConfigV1::TriggerMode(e);
}

Psana::Gsc16ai::ConfigV1::DataFormat pds_to_psana(PsddlPds::Gsc16ai::ConfigV1::DataFormat e)
{
  return Psana::Gsc16ai::ConfigV1::DataFormat(e);
}

ConfigV1::ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Gsc16ai::ConfigV1()
  , m_xtcObj(xtcPtr)
{
}
ConfigV1::~ConfigV1()
{
}


Psana::Gsc16ai::ConfigV1::VoltageRange ConfigV1::voltageRange() const { return pds_to_psana(m_xtcObj->voltageRange()); }

uint16_t ConfigV1::firstChan() const { return m_xtcObj->firstChan(); }

uint16_t ConfigV1::lastChan() const { return m_xtcObj->lastChan(); }

Psana::Gsc16ai::ConfigV1::InputMode ConfigV1::inputMode() const { return pds_to_psana(m_xtcObj->inputMode()); }

Psana::Gsc16ai::ConfigV1::TriggerMode ConfigV1::triggerMode() const { return pds_to_psana(m_xtcObj->triggerMode()); }

Psana::Gsc16ai::ConfigV1::DataFormat ConfigV1::dataFormat() const { return pds_to_psana(m_xtcObj->dataFormat()); }

uint16_t ConfigV1::fps() const { return m_xtcObj->fps(); }

uint8_t ConfigV1::autocalibEnable() const { return m_xtcObj->autocalibEnable(); }

uint8_t ConfigV1::timeTagEnable() const { return m_xtcObj->timeTagEnable(); }

uint16_t ConfigV1::numChannels() const { return m_xtcObj->numChannels(); }
DataV1::DataV1(const boost::shared_ptr<const XtcType>& xtcPtr, const boost::shared_ptr<const PsddlPds::Gsc16ai::ConfigV1>& cfgPtr)
  : Psana::Gsc16ai::DataV1()
  , m_xtcObj(xtcPtr)
  , m_cfgPtr0(cfgPtr)
{
}
DataV1::~DataV1()
{
}


ndarray<const uint16_t, 1> DataV1::timestamp() const { return m_xtcObj->timestamp(); }

ndarray<const uint16_t, 1> DataV1::channelValue() const {
  if (m_cfgPtr0.get()) return m_xtcObj->channelValue(*m_cfgPtr0);
  throw std::runtime_error("DataV1::channelValue: config object pointer is zero");
}

} // namespace Gsc16ai
} // namespace psddl_pds2psana
