
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pds2psana/ipimb.ddl.h"

#include <cstddef>

#include <stdexcept>

namespace psddl_pds2psana {
namespace Ipimb {
ConfigV1::ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Ipimb::ConfigV1()
  , m_xtcObj(xtcPtr)
{
}
ConfigV1::~ConfigV1()
{
}


uint64_t ConfigV1::triggerCounter() const { return m_xtcObj->triggerCounter(); }

uint64_t ConfigV1::serialID() const { return m_xtcObj->serialID(); }

uint16_t ConfigV1::chargeAmpRange() const { return m_xtcObj->chargeAmpRange(); }

uint16_t ConfigV1::calibrationRange() const { return m_xtcObj->calibrationRange(); }

uint32_t ConfigV1::resetLength() const { return m_xtcObj->resetLength(); }

uint32_t ConfigV1::resetDelay() const { return m_xtcObj->resetDelay(); }

float ConfigV1::chargeAmpRefVoltage() const { return m_xtcObj->chargeAmpRefVoltage(); }

float ConfigV1::calibrationVoltage() const { return m_xtcObj->calibrationVoltage(); }

float ConfigV1::diodeBias() const { return m_xtcObj->diodeBias(); }

uint16_t ConfigV1::status() const { return m_xtcObj->status(); }

uint16_t ConfigV1::errors() const { return m_xtcObj->errors(); }

uint16_t ConfigV1::calStrobeLength() const { return m_xtcObj->calStrobeLength(); }

uint32_t ConfigV1::trigDelay() const { return m_xtcObj->trigDelay(); }
DataV1::DataV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Ipimb::DataV1()
  , m_xtcObj(xtcPtr)
{
}
DataV1::~DataV1()
{
}


uint64_t DataV1::triggerCounter() const { return m_xtcObj->triggerCounter(); }

uint16_t DataV1::config0() const { return m_xtcObj->config0(); }

uint16_t DataV1::config1() const { return m_xtcObj->config1(); }

uint16_t DataV1::config2() const { return m_xtcObj->config2(); }

uint16_t DataV1::channel0() const { return m_xtcObj->channel0(); }

uint16_t DataV1::channel1() const { return m_xtcObj->channel1(); }

uint16_t DataV1::channel2() const { return m_xtcObj->channel2(); }

uint16_t DataV1::channel3() const { return m_xtcObj->channel3(); }

uint16_t DataV1::checksum() const { return m_xtcObj->checksum(); }

float DataV1::channel0Volts() const { return m_xtcObj->channel0Volts(); }

float DataV1::channel1Volts() const { return m_xtcObj->channel1Volts(); }

float DataV1::channel2Volts() const { return m_xtcObj->channel2Volts(); }

float DataV1::channel3Volts() const { return m_xtcObj->channel3Volts(); }
} // namespace Ipimb
} // namespace psddl_pds2psana
