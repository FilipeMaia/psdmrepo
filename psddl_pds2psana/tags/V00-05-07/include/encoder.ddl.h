#ifndef PSDDL_PDS2PSANA_ENCODER_DDL_H
#define PSDDL_PDS2PSANA_ENCODER_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/encoder.ddl.h"
#include "psddl_pdsdata/encoder.ddl.h"
namespace psddl_pds2psana {
namespace Encoder {

class ConfigV1 : public Psana::Encoder::ConfigV1 {
public:
  typedef PsddlPds::Encoder::ConfigV1 XtcType;
  typedef Psana::Encoder::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint32_t chan_num() const;
  virtual uint32_t count_mode() const;
  virtual uint32_t quadrature_mode() const;
  virtual uint32_t input_num() const;
  virtual uint32_t input_rising() const;
  virtual uint32_t ticks_per_sec() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class ConfigV2 : public Psana::Encoder::ConfigV2 {
public:
  typedef PsddlPds::Encoder::ConfigV2 XtcType;
  typedef Psana::Encoder::ConfigV2 PsanaType;
  ConfigV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV2();
  virtual uint32_t chan_mask() const;
  virtual uint32_t count_mode() const;
  virtual uint32_t quadrature_mode() const;
  virtual uint32_t input_num() const;
  virtual uint32_t input_rising() const;
  virtual uint32_t ticks_per_sec() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV1 : public Psana::Encoder::DataV1 {
public:
  typedef PsddlPds::Encoder::DataV1 XtcType;
  typedef Psana::Encoder::DataV1 PsanaType;
  DataV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV1();
  virtual uint32_t timestamp() const;
  virtual uint32_t encoder_count() const;
  virtual int32_t value() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV2 : public Psana::Encoder::DataV2 {
public:
  typedef PsddlPds::Encoder::DataV2 XtcType;
  typedef Psana::Encoder::DataV2 PsanaType;
  DataV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV2();
  virtual uint32_t timestamp() const;
  virtual ndarray<const uint32_t, 1> encoder_count() const;
  virtual int32_t value(uint32_t i) const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace Encoder
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_ENCODER_DDL_H
