#ifndef PSDDL_PDS2PSANA_FCCD_DDL_H
#define PSDDL_PDS2PSANA_FCCD_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/fccd.ddl.h"
#include "pdsdata/psddl/fccd.ddl.h"
namespace psddl_pds2psana {
namespace FCCD {

class FccdConfigV1 : public Psana::FCCD::FccdConfigV1 {
public:
  typedef Pds::FCCD::FccdConfigV1 XtcType;
  typedef Psana::FCCD::FccdConfigV1 PsanaType;
  FccdConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~FccdConfigV1();
  virtual uint16_t outputMode() const;
  virtual uint32_t width() const;
  virtual uint32_t height() const;
  virtual uint32_t trimmedWidth() const;
  virtual uint32_t trimmedHeight() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class FccdConfigV2 : public Psana::FCCD::FccdConfigV2 {
public:
  typedef Pds::FCCD::FccdConfigV2 XtcType;
  typedef Psana::FCCD::FccdConfigV2 PsanaType;
  FccdConfigV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~FccdConfigV2();
  virtual uint16_t outputMode() const;
  virtual uint8_t ccdEnable() const;
  virtual uint8_t focusMode() const;
  virtual uint32_t exposureTime() const;
  virtual ndarray<const float, 1> dacVoltages() const;
  virtual ndarray<const uint16_t, 1> waveforms() const;
  virtual uint32_t width() const;
  virtual uint32_t height() const;
  virtual uint32_t trimmedWidth() const;
  virtual uint32_t trimmedHeight() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace FCCD
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_FCCD_DDL_H
