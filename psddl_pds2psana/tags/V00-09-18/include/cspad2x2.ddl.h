#ifndef PSDDL_PDS2PSANA_CSPAD2X2_DDL_H
#define PSDDL_PDS2PSANA_CSPAD2X2_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/cspad2x2.ddl.h"
#include "pdsdata/psddl/cspad2x2.ddl.h"
namespace psddl_pds2psana {
namespace CsPad2x2 {

class CsPad2x2DigitalPotsCfg : public Psana::CsPad2x2::CsPad2x2DigitalPotsCfg {
public:
  typedef Pds::CsPad2x2::CsPad2x2DigitalPotsCfg XtcType;
  typedef Psana::CsPad2x2::CsPad2x2DigitalPotsCfg PsanaType;
  CsPad2x2DigitalPotsCfg(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~CsPad2x2DigitalPotsCfg();
  virtual ndarray<const uint8_t, 1> pots() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

Psana::CsPad2x2::CsPad2x2ReadOnlyCfg pds_to_psana(Pds::CsPad2x2::CsPad2x2ReadOnlyCfg pds);

Psana::CsPad2x2::ProtectionSystemThreshold pds_to_psana(Pds::CsPad2x2::ProtectionSystemThreshold pds);


class CsPad2x2GainMapCfg : public Psana::CsPad2x2::CsPad2x2GainMapCfg {
public:
  typedef Pds::CsPad2x2::CsPad2x2GainMapCfg XtcType;
  typedef Psana::CsPad2x2::CsPad2x2GainMapCfg PsanaType;
  CsPad2x2GainMapCfg(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~CsPad2x2GainMapCfg();
  virtual ndarray<const uint16_t, 2> gainMap() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class ConfigV1QuadReg : public Psana::CsPad2x2::ConfigV1QuadReg {
public:
  typedef Pds::CsPad2x2::ConfigV1QuadReg XtcType;
  typedef Psana::CsPad2x2::ConfigV1QuadReg PsanaType;
  ConfigV1QuadReg(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1QuadReg();
  virtual uint32_t shiftSelect() const;
  virtual uint32_t edgeSelect() const;
  virtual uint32_t readClkSet() const;
  virtual uint32_t readClkHold() const;
  virtual uint32_t dataMode() const;
  virtual uint32_t prstSel() const;
  virtual uint32_t acqDelay() const;
  virtual uint32_t intTime() const;
  virtual uint32_t digDelay() const;
  virtual uint32_t ampIdle() const;
  virtual uint32_t injTotal() const;
  virtual uint32_t rowColShiftPer() const;
  virtual uint32_t ampReset() const;
  virtual uint32_t digCount() const;
  virtual uint32_t digPeriod() const;
  virtual uint32_t PeltierEnable() const;
  virtual uint32_t kpConstant() const;
  virtual uint32_t kiConstant() const;
  virtual uint32_t kdConstant() const;
  virtual uint32_t humidThold() const;
  virtual uint32_t setPoint() const;
  virtual const Psana::CsPad2x2::CsPad2x2ReadOnlyCfg& ro() const;
  virtual const Psana::CsPad2x2::CsPad2x2DigitalPotsCfg& dp() const;
  virtual const Psana::CsPad2x2::CsPad2x2GainMapCfg& gm() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  Psana::CsPad2x2::CsPad2x2ReadOnlyCfg _readOnly;
  psddl_pds2psana::CsPad2x2::CsPad2x2DigitalPotsCfg _digitalPots;
  psddl_pds2psana::CsPad2x2::CsPad2x2GainMapCfg _gainMap;
};


class ConfigV1 : public Psana::CsPad2x2::ConfigV1 {
public:
  typedef Pds::CsPad2x2::ConfigV1 XtcType;
  typedef Psana::CsPad2x2::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint32_t concentratorVersion() const;
  virtual const Psana::CsPad2x2::ProtectionSystemThreshold& protectionThreshold() const;
  virtual uint32_t protectionEnable() const;
  virtual uint32_t inactiveRunMode() const;
  virtual uint32_t activeRunMode() const;
  virtual uint32_t tdi() const;
  virtual uint32_t payloadSize() const;
  virtual uint32_t badAsicMask() const;
  virtual uint32_t asicMask() const;
  virtual uint32_t roiMask() const;
  virtual const Psana::CsPad2x2::ConfigV1QuadReg& quad() const;
  virtual uint32_t numAsicsRead() const;
  virtual uint32_t numAsicsStored() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  Psana::CsPad2x2::ProtectionSystemThreshold _protectionThreshold;
  psddl_pds2psana::CsPad2x2::ConfigV1QuadReg _quad;
};


class ConfigV2QuadReg : public Psana::CsPad2x2::ConfigV2QuadReg {
public:
  typedef Pds::CsPad2x2::ConfigV2QuadReg XtcType;
  typedef Psana::CsPad2x2::ConfigV2QuadReg PsanaType;
  ConfigV2QuadReg(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV2QuadReg();
  virtual uint32_t shiftSelect() const;
  virtual uint32_t edgeSelect() const;
  virtual uint32_t readClkSet() const;
  virtual uint32_t readClkHold() const;
  virtual uint32_t dataMode() const;
  virtual uint32_t prstSel() const;
  virtual uint32_t acqDelay() const;
  virtual uint32_t intTime() const;
  virtual uint32_t digDelay() const;
  virtual uint32_t ampIdle() const;
  virtual uint32_t injTotal() const;
  virtual uint32_t rowColShiftPer() const;
  virtual uint32_t ampReset() const;
  virtual uint32_t digCount() const;
  virtual uint32_t digPeriod() const;
  virtual uint32_t PeltierEnable() const;
  virtual uint32_t kpConstant() const;
  virtual uint32_t kiConstant() const;
  virtual uint32_t kdConstant() const;
  virtual uint32_t humidThold() const;
  virtual uint32_t setPoint() const;
  virtual uint32_t biasTuning() const;
  virtual uint32_t pdpmndnmBalance() const;
  virtual const Psana::CsPad2x2::CsPad2x2ReadOnlyCfg& ro() const;
  virtual const Psana::CsPad2x2::CsPad2x2DigitalPotsCfg& dp() const;
  virtual const Psana::CsPad2x2::CsPad2x2GainMapCfg& gm() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  Psana::CsPad2x2::CsPad2x2ReadOnlyCfg _readOnly;
  psddl_pds2psana::CsPad2x2::CsPad2x2DigitalPotsCfg _digitalPots;
  psddl_pds2psana::CsPad2x2::CsPad2x2GainMapCfg _gainMap;
};


class ConfigV2 : public Psana::CsPad2x2::ConfigV2 {
public:
  typedef Pds::CsPad2x2::ConfigV2 XtcType;
  typedef Psana::CsPad2x2::ConfigV2 PsanaType;
  ConfigV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV2();
  virtual uint32_t concentratorVersion() const;
  virtual const Psana::CsPad2x2::ProtectionSystemThreshold& protectionThreshold() const;
  virtual uint32_t protectionEnable() const;
  virtual uint32_t inactiveRunMode() const;
  virtual uint32_t activeRunMode() const;
  virtual uint32_t runTriggerDelay() const;
  virtual uint32_t tdi() const;
  virtual uint32_t payloadSize() const;
  virtual uint32_t badAsicMask() const;
  virtual uint32_t asicMask() const;
  virtual uint32_t roiMask() const;
  virtual const Psana::CsPad2x2::ConfigV2QuadReg& quad() const;
  virtual uint32_t numAsicsRead() const;
  virtual uint32_t numAsicsStored() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  Psana::CsPad2x2::ProtectionSystemThreshold _protectionThreshold;
  psddl_pds2psana::CsPad2x2::ConfigV2QuadReg _quad;
};


class ElementV1 : public Psana::CsPad2x2::ElementV1 {
public:
  typedef Pds::CsPad2x2::ElementV1 XtcType;
  typedef Psana::CsPad2x2::ElementV1 PsanaType;
  ElementV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ElementV1();
  virtual uint32_t virtual_channel() const;
  virtual uint32_t lane() const;
  virtual uint32_t tid() const;
  virtual uint32_t acq_count() const;
  virtual uint32_t op_code() const;
  virtual uint32_t quad() const;
  virtual uint32_t seq_count() const;
  virtual uint32_t ticks() const;
  virtual uint32_t fiducials() const;
  virtual ndarray<const uint16_t, 1> sb_temp() const;
  virtual uint32_t frame_type() const;
  virtual ndarray<const int16_t, 3> data() const;
  virtual float common_mode(uint32_t section) const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace CsPad2x2
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_CSPAD2X2_DDL_H
