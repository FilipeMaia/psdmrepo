
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pds2psana/timepix.ddl.h"

#include <cstddef>

#include <stdexcept>

namespace psddl_pds2psana {
namespace Timepix {
Psana::Timepix::ConfigV1::ReadoutSpeed pds_to_psana(PsddlPds::Timepix::ConfigV1::ReadoutSpeed e)
{
  return Psana::Timepix::ConfigV1::ReadoutSpeed(e);
}

Psana::Timepix::ConfigV1::TriggerMode pds_to_psana(PsddlPds::Timepix::ConfigV1::TriggerMode e)
{
  return Psana::Timepix::ConfigV1::TriggerMode(e);
}

ConfigV1::ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Timepix::ConfigV1()
  , m_xtcObj(xtcPtr)
{
}
ConfigV1::~ConfigV1()
{
}


Psana::Timepix::ConfigV1::ReadoutSpeed ConfigV1::readoutSpeed() const { return pds_to_psana(m_xtcObj->readoutSpeed()); }

Psana::Timepix::ConfigV1::TriggerMode ConfigV1::triggerMode() const { return pds_to_psana(m_xtcObj->triggerMode()); }

int32_t ConfigV1::shutterTimeout() const { return m_xtcObj->shutterTimeout(); }

int32_t ConfigV1::dac0Ikrum() const { return m_xtcObj->dac0Ikrum(); }

int32_t ConfigV1::dac0Disc() const { return m_xtcObj->dac0Disc(); }

int32_t ConfigV1::dac0Preamp() const { return m_xtcObj->dac0Preamp(); }

int32_t ConfigV1::dac0BufAnalogA() const { return m_xtcObj->dac0BufAnalogA(); }

int32_t ConfigV1::dac0BufAnalogB() const { return m_xtcObj->dac0BufAnalogB(); }

int32_t ConfigV1::dac0Hist() const { return m_xtcObj->dac0Hist(); }

int32_t ConfigV1::dac0ThlFine() const { return m_xtcObj->dac0ThlFine(); }

int32_t ConfigV1::dac0ThlCourse() const { return m_xtcObj->dac0ThlCourse(); }

int32_t ConfigV1::dac0Vcas() const { return m_xtcObj->dac0Vcas(); }

int32_t ConfigV1::dac0Fbk() const { return m_xtcObj->dac0Fbk(); }

int32_t ConfigV1::dac0Gnd() const { return m_xtcObj->dac0Gnd(); }

int32_t ConfigV1::dac0Ths() const { return m_xtcObj->dac0Ths(); }

int32_t ConfigV1::dac0BiasLvds() const { return m_xtcObj->dac0BiasLvds(); }

int32_t ConfigV1::dac0RefLvds() const { return m_xtcObj->dac0RefLvds(); }

int32_t ConfigV1::dac1Ikrum() const { return m_xtcObj->dac1Ikrum(); }

int32_t ConfigV1::dac1Disc() const { return m_xtcObj->dac1Disc(); }

int32_t ConfigV1::dac1Preamp() const { return m_xtcObj->dac1Preamp(); }

int32_t ConfigV1::dac1BufAnalogA() const { return m_xtcObj->dac1BufAnalogA(); }

int32_t ConfigV1::dac1BufAnalogB() const { return m_xtcObj->dac1BufAnalogB(); }

int32_t ConfigV1::dac1Hist() const { return m_xtcObj->dac1Hist(); }

int32_t ConfigV1::dac1ThlFine() const { return m_xtcObj->dac1ThlFine(); }

int32_t ConfigV1::dac1ThlCourse() const { return m_xtcObj->dac1ThlCourse(); }

int32_t ConfigV1::dac1Vcas() const { return m_xtcObj->dac1Vcas(); }

int32_t ConfigV1::dac1Fbk() const { return m_xtcObj->dac1Fbk(); }

int32_t ConfigV1::dac1Gnd() const { return m_xtcObj->dac1Gnd(); }

int32_t ConfigV1::dac1Ths() const { return m_xtcObj->dac1Ths(); }

int32_t ConfigV1::dac1BiasLvds() const { return m_xtcObj->dac1BiasLvds(); }

int32_t ConfigV1::dac1RefLvds() const { return m_xtcObj->dac1RefLvds(); }

int32_t ConfigV1::dac2Ikrum() const { return m_xtcObj->dac2Ikrum(); }

int32_t ConfigV1::dac2Disc() const { return m_xtcObj->dac2Disc(); }

int32_t ConfigV1::dac2Preamp() const { return m_xtcObj->dac2Preamp(); }

int32_t ConfigV1::dac2BufAnalogA() const { return m_xtcObj->dac2BufAnalogA(); }

int32_t ConfigV1::dac2BufAnalogB() const { return m_xtcObj->dac2BufAnalogB(); }

int32_t ConfigV1::dac2Hist() const { return m_xtcObj->dac2Hist(); }

int32_t ConfigV1::dac2ThlFine() const { return m_xtcObj->dac2ThlFine(); }

int32_t ConfigV1::dac2ThlCourse() const { return m_xtcObj->dac2ThlCourse(); }

int32_t ConfigV1::dac2Vcas() const { return m_xtcObj->dac2Vcas(); }

int32_t ConfigV1::dac2Fbk() const { return m_xtcObj->dac2Fbk(); }

int32_t ConfigV1::dac2Gnd() const { return m_xtcObj->dac2Gnd(); }

int32_t ConfigV1::dac2Ths() const { return m_xtcObj->dac2Ths(); }

int32_t ConfigV1::dac2BiasLvds() const { return m_xtcObj->dac2BiasLvds(); }

int32_t ConfigV1::dac2RefLvds() const { return m_xtcObj->dac2RefLvds(); }

int32_t ConfigV1::dac3Ikrum() const { return m_xtcObj->dac3Ikrum(); }

int32_t ConfigV1::dac3Disc() const { return m_xtcObj->dac3Disc(); }

int32_t ConfigV1::dac3Preamp() const { return m_xtcObj->dac3Preamp(); }

int32_t ConfigV1::dac3BufAnalogA() const { return m_xtcObj->dac3BufAnalogA(); }

int32_t ConfigV1::dac3BufAnalogB() const { return m_xtcObj->dac3BufAnalogB(); }

int32_t ConfigV1::dac3Hist() const { return m_xtcObj->dac3Hist(); }

int32_t ConfigV1::dac3ThlFine() const { return m_xtcObj->dac3ThlFine(); }

int32_t ConfigV1::dac3ThlCourse() const { return m_xtcObj->dac3ThlCourse(); }

int32_t ConfigV1::dac3Vcas() const { return m_xtcObj->dac3Vcas(); }

int32_t ConfigV1::dac3Fbk() const { return m_xtcObj->dac3Fbk(); }

int32_t ConfigV1::dac3Gnd() const { return m_xtcObj->dac3Gnd(); }

int32_t ConfigV1::dac3Ths() const { return m_xtcObj->dac3Ths(); }

int32_t ConfigV1::dac3BiasLvds() const { return m_xtcObj->dac3BiasLvds(); }

int32_t ConfigV1::dac3RefLvds() const { return m_xtcObj->dac3RefLvds(); }
DataV1::DataV1(const boost::shared_ptr<const XtcType>& xtcPtr)
  : Psana::Timepix::DataV1()
  , m_xtcObj(xtcPtr)
{
}
DataV1::~DataV1()
{
}


uint32_t DataV1::timestamp() const { return m_xtcObj->timestamp(); }

uint16_t DataV1::frameCounter() const { return m_xtcObj->frameCounter(); }

uint16_t DataV1::lostRows() const { return m_xtcObj->lostRows(); }

ndarray<uint16_t, 2> DataV1::data() const { return m_xtcObj->data(); }
} // namespace Timepix
} // namespace psddl_pds2psana
