#ifndef PSDDL_PDS2PSANA_QUARTZ_DDL_H
#define PSDDL_PDS2PSANA_QUARTZ_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/quartz.ddl.h"
#include "pdsdata/psddl/quartz.ddl.h"
#include "psddl_pds2psana/camera.ddl.h"
namespace psddl_pds2psana {
namespace Quartz {

class ConfigV1 : public Psana::Quartz::ConfigV1 {
public:
  typedef Pds::Quartz::ConfigV1 XtcType;
  typedef Psana::Quartz::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint16_t black_level() const;
  virtual uint16_t gain_percent() const;
  virtual Psana::Quartz::ConfigV1::Depth output_resolution() const;
  virtual Psana::Quartz::ConfigV1::Binning horizontal_binning() const;
  virtual Psana::Quartz::ConfigV1::Binning vertical_binning() const;
  virtual Psana::Quartz::ConfigV1::Mirroring output_mirroring() const;
  virtual uint8_t output_lookup_table_enabled() const;
  virtual uint8_t defect_pixel_correction_enabled() const;
  virtual uint32_t number_of_defect_pixels() const;
  virtual ndarray<const uint16_t, 1> output_lookup_table() const;
  virtual ndarray<const Psana::Camera::FrameCoord, 1> defect_pixel_coordinates() const;
  virtual uint16_t output_offset() const;
  virtual uint32_t output_resolution_bits() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  ndarray<Psana::Camera::FrameCoord, 1> _defectPixels_ndarray_storage_;
};


class ConfigV2 : public Psana::Quartz::ConfigV2 {
public:
  typedef Pds::Quartz::ConfigV2 XtcType;
  typedef Psana::Quartz::ConfigV2 PsanaType;
  ConfigV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV2();
  virtual uint16_t black_level() const;
  virtual uint16_t gain_percent() const;
  virtual Psana::Quartz::ConfigV2::Depth output_resolution() const;
  virtual Psana::Quartz::ConfigV2::Binning horizontal_binning() const;
  virtual Psana::Quartz::ConfigV2::Binning vertical_binning() const;
  virtual Psana::Quartz::ConfigV2::Mirroring output_mirroring() const;
  virtual uint8_t output_lookup_table_enabled() const;
  virtual uint8_t defect_pixel_correction_enabled() const;
  virtual uint8_t use_hardware_roi() const;
  virtual uint8_t use_test_pattern() const;
  virtual uint8_t max_taps() const;
  virtual const Psana::Camera::FrameCoord& roi_lo() const;
  virtual const Psana::Camera::FrameCoord& roi_hi() const;
  virtual uint32_t number_of_defect_pixels() const;
  virtual ndarray<const uint16_t, 1> output_lookup_table() const;
  virtual ndarray<const Psana::Camera::FrameCoord, 1> defect_pixel_coordinates() const;
  virtual uint16_t output_offset() const;
  virtual uint32_t output_resolution_bits() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  Psana::Camera::FrameCoord _roi_lo;
  Psana::Camera::FrameCoord _roi_hi;
  ndarray<Psana::Camera::FrameCoord, 1> _defectPixels_ndarray_storage_;
};

} // namespace Quartz
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_QUARTZ_DDL_H
