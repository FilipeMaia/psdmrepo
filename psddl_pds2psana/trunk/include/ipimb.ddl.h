#ifndef PSDDL_PDS2PSANA_IPIMB_DDL_H
#define PSDDL_PDS2PSANA_IPIMB_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/ipimb.ddl.h"
#include "pdsdata/psddl/ipimb.ddl.h"
namespace psddl_pds2psana {
namespace Ipimb {

class ConfigV1 : public Psana::Ipimb::ConfigV1 {
public:
  typedef Pds::Ipimb::ConfigV1 XtcType;
  typedef Psana::Ipimb::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint64_t triggerCounter() const;
  virtual uint64_t serialID() const;
  virtual uint16_t chargeAmpRange() const;
  virtual uint16_t calibrationRange() const;
  virtual uint32_t resetLength() const;
  virtual uint32_t resetDelay() const;
  virtual float chargeAmpRefVoltage() const;
  virtual float calibrationVoltage() const;
  virtual float diodeBias() const;
  virtual uint16_t status() const;
  virtual uint16_t errors() const;
  virtual uint16_t calStrobeLength() const;
  virtual uint32_t trigDelay() const;
  virtual Psana::Ipimb::ConfigV1::CapacitorValue capacitorValue(uint32_t ch) const;
  virtual ndarray<const uint8_t, 1> capacitorValues() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class ConfigV2 : public Psana::Ipimb::ConfigV2 {
public:
  typedef Pds::Ipimb::ConfigV2 XtcType;
  typedef Psana::Ipimb::ConfigV2 PsanaType;
  ConfigV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV2();
  virtual uint64_t triggerCounter() const;
  virtual uint64_t serialID() const;
  virtual uint16_t chargeAmpRange() const;
  virtual uint16_t calibrationRange() const;
  virtual uint32_t resetLength() const;
  virtual uint32_t resetDelay() const;
  virtual float chargeAmpRefVoltage() const;
  virtual float calibrationVoltage() const;
  virtual float diodeBias() const;
  virtual uint16_t status() const;
  virtual uint16_t errors() const;
  virtual uint16_t calStrobeLength() const;
  virtual uint32_t trigDelay() const;
  virtual uint32_t trigPsDelay() const;
  virtual uint32_t adcDelay() const;
  virtual Psana::Ipimb::ConfigV2::CapacitorValue capacitorValue(uint32_t ch) const;
  virtual ndarray<const uint8_t, 1> capacitorValues() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV1 : public Psana::Ipimb::DataV1 {
public:
  typedef Pds::Ipimb::DataV1 XtcType;
  typedef Psana::Ipimb::DataV1 PsanaType;
  DataV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV1();
  virtual uint64_t triggerCounter() const;
  virtual uint16_t config0() const;
  virtual uint16_t config1() const;
  virtual uint16_t config2() const;
  virtual uint16_t channel0() const;
  virtual uint16_t channel1() const;
  virtual uint16_t channel2() const;
  virtual uint16_t channel3() const;
  virtual uint16_t checksum() const;
  virtual float channel0Volts() const;
  virtual float channel1Volts() const;
  virtual float channel2Volts() const;
  virtual float channel3Volts() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV2 : public Psana::Ipimb::DataV2 {
public:
  typedef Pds::Ipimb::DataV2 XtcType;
  typedef Psana::Ipimb::DataV2 PsanaType;
  DataV2(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~DataV2();
  virtual uint16_t config0() const;
  virtual uint16_t config1() const;
  virtual uint16_t config2() const;
  virtual uint16_t channel0() const;
  virtual uint16_t channel1() const;
  virtual uint16_t channel2() const;
  virtual uint16_t channel3() const;
  virtual uint16_t channel0ps() const;
  virtual uint16_t channel1ps() const;
  virtual uint16_t channel2ps() const;
  virtual uint16_t channel3ps() const;
  virtual uint16_t checksum() const;
  virtual float channel0Volts() const;
  virtual float channel1Volts() const;
  virtual float channel2Volts() const;
  virtual float channel3Volts() const;
  virtual float channel0psVolts() const;
  virtual float channel1psVolts() const;
  virtual float channel2psVolts() const;
  virtual float channel3psVolts() const;
  virtual uint64_t triggerCounter() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};

} // namespace Ipimb
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_IPIMB_DDL_H
