#ifndef PSDDL_PDS2PSANA_GSC16AI_DDL_H
#define PSDDL_PDS2PSANA_GSC16AI_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include <vector>
#include <boost/shared_ptr.hpp>
#include "psddl_psana/gsc16ai.ddl.h"
#include "psddl_pdsdata/gsc16ai.ddl.h"
namespace psddl_pds2psana {
namespace Gsc16ai {

class ConfigV1 : public Psana::Gsc16ai::ConfigV1 {
public:
  typedef PsddlPds::Gsc16ai::ConfigV1 XtcType;
  typedef Psana::Gsc16ai::ConfigV1 PsanaType;
  ConfigV1(const boost::shared_ptr<const XtcType>& xtcPtr);
  virtual ~ConfigV1();
  virtual uint16_t voltageRange() const;
  virtual uint16_t firstChan() const;
  virtual uint16_t lastChan() const;
  virtual uint16_t inputMode() const;
  virtual uint16_t triggerMode() const;
  virtual uint16_t dataFormat() const;
  virtual uint16_t fps() const;
  virtual uint8_t autocalibEnable() const;
  virtual uint8_t timeTagEnable() const;
  virtual uint16_t numChannels() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
};


class DataV1 : public Psana::Gsc16ai::DataV1 {
public:
  typedef PsddlPds::Gsc16ai::DataV1 XtcType;
  typedef Psana::Gsc16ai::DataV1 PsanaType;
  DataV1(const boost::shared_ptr<const XtcType>& xtcPtr, const boost::shared_ptr<const PsddlPds::Gsc16ai::ConfigV1>& cfgPtr);
  virtual ~DataV1();
  virtual ndarray<const uint16_t, 1> timestamp() const;
  virtual ndarray<const uint16_t, 1> channelValue() const;
  const XtcType& _xtcObj() const { return *m_xtcObj; }
private:
  boost::shared_ptr<const XtcType> m_xtcObj;
  boost::shared_ptr<const PsddlPds::Gsc16ai::ConfigV1> m_cfgPtr0;
};

} // namespace Gsc16ai
} // namespace psddl_pds2psana
#endif // PSDDL_PDS2PSANA_GSC16AI_DDL_H
