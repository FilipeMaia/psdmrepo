
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pdsdata/imp.ddl.h"

#include <iostream>
namespace PsddlPds {
namespace Imp {
std::ostream& operator<<(std::ostream& str, Imp::ConfigV1::Registers enval) {
  const char* val;
  switch (enval) {
  case Imp::ConfigV1::Range:
    val = "Range";
    break;
  case Imp::ConfigV1::Cal_range:
    val = "Cal_range";
    break;
  case Imp::ConfigV1::Reset:
    val = "Reset";
    break;
  case Imp::ConfigV1::Bias_data:
    val = "Bias_data";
    break;
  case Imp::ConfigV1::Cal_data:
    val = "Cal_data";
    break;
  case Imp::ConfigV1::BiasDac_data:
    val = "BiasDac_data";
    break;
  case Imp::ConfigV1::Cal_strobe:
    val = "Cal_strobe";
    break;
  case Imp::ConfigV1::NumberOfSamples:
    val = "NumberOfSamples";
    break;
  case Imp::ConfigV1::TrigDelay:
    val = "TrigDelay";
    break;
  case Imp::ConfigV1::Adc_delay:
    val = "Adc_delay";
    break;
  case Imp::ConfigV1::NumberOfRegisters:
    val = "NumberOfRegisters";
    break;
  default:
    return str << "Registers(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace Imp
} // namespace PsddlPds
