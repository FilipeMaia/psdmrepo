
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pdsdata/andor.ddl.h"

#include <iostream>
namespace PsddlPds {
namespace Andor {
uint32_t
ConfigV1::frameSize() const {
  return sizeof(FrameV1) + this->numPixels()*2;
}
std::ostream& operator<<(std::ostream& str, Andor::ConfigV1::EnumFanMode enval) {
  const char* val;
  switch (enval) {
  case Andor::ConfigV1::ENUM_FAN_FULL:
    val = "ENUM_FAN_FULL";
    break;
  case Andor::ConfigV1::ENUM_FAN_LOW:
    val = "ENUM_FAN_LOW";
    break;
  case Andor::ConfigV1::ENUM_FAN_OFF:
    val = "ENUM_FAN_OFF";
    break;
  case Andor::ConfigV1::ENUM_FAN_ACQOFF:
    val = "ENUM_FAN_ACQOFF";
    break;
  case Andor::ConfigV1::ENUM_FAN_NUM:
    val = "ENUM_FAN_NUM";
    break;
  default:
    return str << "EnumFanMode(" << int(enval) << ")";
  }
  return str << val;
}
} // namespace Andor
} // namespace PsddlPds
