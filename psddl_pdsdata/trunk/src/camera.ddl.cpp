
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pdsdata/camera.ddl.h"

namespace PsddlPds {
namespace Camera {
ndarray<uint8_t, 2>
FrameV1::data8() const {
  if (this->_depth > 8) return ndarray<uint8_t, 2>(); return make_ndarray(_int_pixel_data().data(), _height, _width);
}
ndarray<uint16_t, 2>
FrameV1::data16() const {
  if (this->_depth <= 8) return ndarray<uint16_t, 2>(); return make_ndarray((uint16_t*)_int_pixel_data().data(), _height, _width);
}
TwoDGaussianV1::TwoDGaussianV1()
{
}
TwoDGaussianV1::TwoDGaussianV1(uint64_t arg__integral, double arg__xmean, double arg__ymean, double arg__major_axis_width, double arg__minor_axis_width, double arg__major_axis_tilt)
    : _integral(arg__integral), _xmean(arg__xmean), _ymean(arg__ymean), _major_axis_width(arg__major_axis_width), _minor_axis_width(arg__minor_axis_width), _major_axis_tilt(arg__major_axis_tilt)
{
}
} // namespace Camera
} // namespace PsddlPds
