
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pdsdata/camera.ddl.h"

namespace PsddlPds {
namespace Camera {
Camera::FrameFexConfigV1::Forwarding
FrameFexConfigV1::forwarding() const {
  return Forwarding(this->_forwarding);
}
Camera::FrameFexConfigV1::Processing
FrameFexConfigV1::processing() const {
  return Processing(this->_processing);
}
std::vector<int> FrameFexConfigV1::masked_pixel_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(this->_masked_pixel_count);
  return shape;
}

std::vector<int> FrameV1::data_shape() const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(this->_width*this->_height*((this->_depth+7)/8));
  return shape;
}

TwoDGaussianV1::TwoDGaussianV1()
{
}
TwoDGaussianV1::TwoDGaussianV1(uint64_t arg__integral, double arg__xmean, double arg__ymean, double arg__major_axis_width, double arg__minor_axis_width, double arg__major_axis_tilt)
    : _integral(arg__integral), _xmean(arg__xmean), _ymean(arg__ymean), _major_axis_width(arg__major_axis_width), _minor_axis_width(arg__minor_axis_width), _major_axis_tilt(arg__major_axis_tilt)
{
}
} // namespace Camera
} // namespace PsddlPds
