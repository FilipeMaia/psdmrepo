
// *** Do not edit this file, it is auto-generated ***

#include "psddl_pdsdata/princeton.ddl.h"

namespace PsddlPds {
namespace Princeton {
uint32_t
ConfigV1::frameSize() const {
  return sizeof(FrameV1) + this->numPixels()*2;
}
uint32_t
ConfigV1::numPixels() const {
  return ((_uWidth + _uBinX-1)/ _uBinX )*((_uHeight+ _uBinY-1)/ _uBinY );
}
uint32_t
ConfigV2::frameSize() const {
  return sizeof(FrameV1) + this->numPixels()*2;
}
uint32_t
ConfigV2::numPixels() const {
  return ((_uWidth + _uBinX-1)/ _uBinX )*((_uHeight+ _uBinY-1)/ _uBinY );
}
std::vector<int> FrameV1::data_shape(const Princeton::ConfigV1& cfg) const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(cfg.numPixels());
  return shape;
}

std::vector<int> FrameV1::data_shape(const Princeton::ConfigV2& cfg) const
{
  std::vector<int> shape;
  shape.reserve(1);
  shape.push_back(cfg.numPixels());
  return shape;
}

} // namespace Princeton
} // namespace PsddlPds
