// *** Do not edit this file, it is auto-generated ***

#include "MsgLogger/MsgLogger.h"
#include "PSEvt/Exceptions.h"

#include "psddl_hdf2psana/dispatch.h"
#include "psddl_hdf2psana/cspad.ddl.h"
#include "psddl_hdf2psana/evr.ddl.h"
#include "psddl_hdf2psana/princeton.ddl.h"
#include "psddl_hdf2psana/usdusb.ddl.h"
#include "psddl_hdf2psana/timepix.ddl.h"
#include "psddl_hdf2psana/camera.ddl.h"
#include "psddl_hdf2psana/orca.ddl.h"
#include "psddl_hdf2psana/quartz.ddl.h"
#include "psddl_hdf2psana/gsc16ai.ddl.h"
#include "psddl_hdf2psana/bld.ddl.h"
#include "psddl_hdf2psana/pulnix.ddl.h"
#include "psddl_hdf2psana/fccd.ddl.h"
#include "psddl_hdf2psana/pnccd.ddl.h"
#include "psddl_hdf2psana/epics.ddl.h"
#include "psddl_hdf2psana/ipimb.ddl.h"
#include "psddl_hdf2psana/control.ddl.h"
#include "psddl_hdf2psana/cspad2x2.ddl.h"
#include "psddl_hdf2psana/opal1k.ddl.h"
#include "psddl_hdf2psana/andor.ddl.h"
#include "psddl_hdf2psana/fli.ddl.h"
#include "psddl_hdf2psana/oceanoptics.ddl.h"
#include "psddl_hdf2psana/encoder.ddl.h"
#include "psddl_hdf2psana/lusi.ddl.h"
#include "psddl_hdf2psana/acqiris.ddl.h"


namespace {
    uint32_t str_hash(const std::string& str)
    {
        uint32_t hash = 5381;
        for (std::string::const_iterator it = str.begin(); it != str.end(); ++it) {
            hash = ((hash << 5) + hash) ^ uint32_t(*it); /* hash * 33 + c */
        }
        return hash;
    }
}

namespace psddl_hdf2psana {
void hdfConvert(const hdf5pp::Group& group, int64_t idx, const std::string& typeName, int schema_version, 
                const Pds::Src& src, PSEvt::Event& evt, PSEnv::EnvObjectStore& cfgStore)
try {

  uint32_t hash = str_hash(typeName);
  switch(hash) {
  case 77859337:
    if (boost::shared_ptr<Psana::Princeton::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV3> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV4> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV5> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 77859338:
    if (boost::shared_ptr<Psana::Princeton::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV3> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV4> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::Princeton::ConfigV5> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Princeton::make_FrameV2(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 115545194:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataPhaseCavity(schema_version, group, idx), src);
    break;
  case 150950753:
    evt.putProxy(psddl_hdf2psana::CsPad2x2::make_CsPad2x2ReadOnlyCfg(schema_version, group, idx), src);
    break;
  case 169144489:
    cfgStore.putProxy(psddl_hdf2psana::Acqiris::make_TdcConfigV1(schema_version, group, idx), src);
    break;
  case 245364150:
    if (boost::shared_ptr<Psana::PNCCD::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::PNCCD::make_FullFrameV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::PNCCD::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::PNCCD::make_FullFrameV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 477483284:
    evt.putProxy(psddl_hdf2psana::UsdUsb::make_DataV1(schema_version, group, idx), src);
    break;
  case 512147952:
    cfgStore.putProxy(psddl_hdf2psana::Lusi::make_DiodeFexConfigV2(schema_version, group, idx), src);
    break;
  case 512147955:
    cfgStore.putProxy(psddl_hdf2psana::Lusi::make_DiodeFexConfigV1(schema_version, group, idx), src);
    break;
  case 670963505:
    cfgStore.putProxy(psddl_hdf2psana::Quartz::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 705383241:
    evt.putProxy(psddl_hdf2psana::CsPad2x2::make_ProtectionSystemThreshold(schema_version, group, idx), src);
    break;
  case 756401870:
    evt.putProxy(psddl_hdf2psana::Lusi::make_IpmFexV1(schema_version, group, idx), src);
    break;
  case 912501018:
    evt.putProxy(psddl_hdf2psana::Princeton::make_InfoV1(schema_version, group, idx), src);
    break;
  case 913738682:
    cfgStore.putProxy(psddl_hdf2psana::Princeton::make_ConfigV5(schema_version, group, idx), src);
    break;
  case 913738683:
    cfgStore.putProxy(psddl_hdf2psana::Princeton::make_ConfigV4(schema_version, group, idx), src);
    break;
  case 913738684:
    cfgStore.putProxy(psddl_hdf2psana::Princeton::make_ConfigV3(schema_version, group, idx), src);
    break;
  case 913738685:
    cfgStore.putProxy(psddl_hdf2psana::Princeton::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 913738686:
    cfgStore.putProxy(psddl_hdf2psana::Princeton::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1005088878:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TdcAuxIO(schema_version, group, idx), src);
    break;
  case 1022640350:
    cfgStore.putProxy(psddl_hdf2psana::Andor::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1048460753:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataFEEGasDetEnergy(schema_version, group, idx), src);
    break;
  case 1078464764:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataEBeamV1(schema_version, group, idx), src);
    break;
  case 1078464765:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataEBeamV0(schema_version, group, idx), src);
    break;
  case 1078464766:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataEBeamV3(schema_version, group, idx), src);
    break;
  case 1078464767:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataEBeamV2(schema_version, group, idx), src);
    break;
  case 1083296677:
    evt.putProxy(psddl_hdf2psana::Encoder::make_DataV2(schema_version, group, idx), src);
    break;
  case 1083296678:
    evt.putProxy(psddl_hdf2psana::Encoder::make_DataV1(schema_version, group, idx), src);
    break;
  case 1103255571:
    evt.putProxy(psddl_hdf2psana::EvrData::make_OutputMapV2(schema_version, group, idx), src);
    break;
  case 1133035550:
    evt.putProxy(psddl_hdf2psana::EvrData::make_FIFOEvent(schema_version, group, idx), src);
    break;
  case 1151720060:
    if (boost::shared_ptr<Psana::Fli::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Fli::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 1170742428:
    cfgStore.putProxy(psddl_hdf2psana::Timepix::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1170742430:
    cfgStore.putProxy(psddl_hdf2psana::Timepix::make_ConfigV3(schema_version, group, idx), src);
    break;
  case 1170742431:
    cfgStore.putProxy(psddl_hdf2psana::Timepix::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 1242681297:
    cfgStore.putProxy(psddl_hdf2psana::PNCCD::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 1242681298:
    cfgStore.putProxy(psddl_hdf2psana::PNCCD::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1254115734:
    if (boost::shared_ptr<Psana::PNCCD::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::PNCCD::make_FramesV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::PNCCD::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::PNCCD::make_FramesV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 1361748889:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1361748890:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 1361748891:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV3(schema_version, group, idx), src);
    break;
  case 1361748892:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV4(schema_version, group, idx), src);
    break;
  case 1361748893:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV5(schema_version, group, idx), src);
    break;
  case 1361748894:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV6(schema_version, group, idx), src);
    break;
  case 1361748895:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_ConfigV7(schema_version, group, idx), src);
    break;
  case 1387299804:
    cfgStore.putProxy(psddl_hdf2psana::OceanOptics::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1422110804:
    evt.putProxy(psddl_hdf2psana::Camera::make_FrameCoord(schema_version, group, idx), src);
    break;
  case 1543725316:
    evt.putProxy(psddl_hdf2psana::EvrData::make_PulseConfigV3(schema_version, group, idx), src);
    break;
  case 1551708791:
    cfgStore.putProxy(psddl_hdf2psana::Orca::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1575949158:
    evt.putProxy(psddl_hdf2psana::Camera::make_FrameV1(schema_version, group, idx), src);
    break;
  case 1614614470:
    evt.putProxy(psddl_hdf2psana::Camera::make_TwoDGaussianV1(schema_version, group, idx), src);
    break;
  case 1624433404:
    cfgStore.putProxy(psddl_hdf2psana::Encoder::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1624433407:
    cfgStore.putProxy(psddl_hdf2psana::Encoder::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 1656086870:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_HorizV1(schema_version, group, idx), src);
    break;
  case 1705456020:
    cfgStore.putProxy(psddl_hdf2psana::Ipimb::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 1705456023:
    cfgStore.putProxy(psddl_hdf2psana::Ipimb::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1777917796:
    cfgStore.putProxy(psddl_hdf2psana::Lusi::make_IpmFexConfigV1(schema_version, group, idx), src);
    break;
  case 1777917799:
    cfgStore.putProxy(psddl_hdf2psana::Lusi::make_IpmFexConfigV2(schema_version, group, idx), src);
    break;
  case 1852352324:
    cfgStore.putProxy(psddl_hdf2psana::Epics::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 1869558591:
    cfgStore.putProxy(psddl_hdf2psana::EvrData::make_IOConfigV1(schema_version, group, idx), src);
    break;
  case 2103238272:
    cfgStore.putProxy(psddl_hdf2psana::Opal1k::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 2115881232:
    cfgStore.putProxy(psddl_hdf2psana::Gsc16ai::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 2160030172:
    cfgStore.putProxy(psddl_hdf2psana::ControlData::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 2160030175:
    cfgStore.putProxy(psddl_hdf2psana::ControlData::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 2275609067:
    cfgStore.putProxy(psddl_hdf2psana::Fli::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 2301568325:
    evt.putProxy(psddl_hdf2psana::Timepix::make_DataV2(schema_version, group, idx), src);
    break;
  case 2301568326:
    evt.putProxy(psddl_hdf2psana::Timepix::make_DataV1(schema_version, group, idx), src);
    break;
  case 2393145943:
    cfgStore.putProxy(psddl_hdf2psana::Camera::make_FrameFexConfigV1(schema_version, group, idx), src);
    break;
  case 2436058311:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TdcChannel(schema_version, group, idx), src);
    break;
  case 2478618317:
    evt.putProxy(psddl_hdf2psana::EvrData::make_SequencerEntry(schema_version, group, idx), src);
    break;
  case 2533780153:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TdcDataV1_Item(schema_version, group, idx), src);
    break;
  case 2708910361:
    evt.putProxy(psddl_hdf2psana::Lusi::make_DiodeFexV1(schema_version, group, idx), src);
    break;
  case 2780844529:
    evt.putProxy(psddl_hdf2psana::CsPad::make_ProtectionSystemThreshold(schema_version, group, idx), src);
    break;
  case 2869143498:
    if (boost::shared_ptr<Psana::Gsc16ai::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Gsc16ai::make_DataV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 2899606017:
    evt.putProxy(psddl_hdf2psana::CsPad::make_CsPadReadOnlyCfg(schema_version, group, idx), src);
    break;
  case 2901814733:
    evt.putProxy(psddl_hdf2psana::Ipimb::make_DataV1(schema_version, group, idx), src);
    break;
  case 2901814734:
    evt.putProxy(psddl_hdf2psana::Ipimb::make_DataV2(schema_version, group, idx), src);
    break;
  case 2929134982:
    if (boost::shared_ptr<Psana::OceanOptics::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::OceanOptics::make_DataV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 2931478704:
    evt.putProxy(psddl_hdf2psana::EvrData::make_EventCodeV3(schema_version, group, idx), src);
    break;
  case 2931478709:
    evt.putProxy(psddl_hdf2psana::EvrData::make_EventCodeV6(schema_version, group, idx), src);
    break;
  case 2931478710:
    evt.putProxy(psddl_hdf2psana::EvrData::make_EventCodeV5(schema_version, group, idx), src);
    break;
  case 2931478711:
    evt.putProxy(psddl_hdf2psana::EvrData::make_EventCodeV4(schema_version, group, idx), src);
    break;
  case 2940448584:
    cfgStore.putProxy(psddl_hdf2psana::CsPad::make_ConfigV4(schema_version, group, idx), src);
    break;
  case 2940448589:
    cfgStore.putProxy(psddl_hdf2psana::CsPad::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 2940448590:
    cfgStore.putProxy(psddl_hdf2psana::CsPad::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 2940448591:
    cfgStore.putProxy(psddl_hdf2psana::CsPad::make_ConfigV3(schema_version, group, idx), src);
    break;
  case 2947916881:
    if (boost::shared_ptr<Psana::Acqiris::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Acqiris::make_DataDescV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 2968036851:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TdcDataV1(schema_version, group, idx), src);
    break;
  case 3110430406:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataPimV1(schema_version, group, idx), src);
    break;
  case 3122588892:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataGMDV1(schema_version, group, idx), src);
    break;
  case 3122588893:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataGMDV0(schema_version, group, idx), src);
    break;
  case 3124602907:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataEBeamV1(schema_version, group, idx), src);
    break;
  case 3139117226:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataIpimbV0(schema_version, group, idx), src);
    break;
  case 3151987128:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TrigV1(schema_version, group, idx), src);
    break;
  case 3210462341:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_VertV1(schema_version, group, idx), src);
    break;
  case 3467424660:
    if (boost::shared_ptr<Psana::CsPad::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::CsPad::ConfigV3> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV2(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::CsPad::ConfigV4> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV2(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 3467424663:
    if (boost::shared_ptr<Psana::CsPad::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::CsPad::ConfigV2> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::CsPad::ConfigV3> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV1(schema_version, group, idx, cfgPtr), src);
    } else if (boost::shared_ptr<Psana::CsPad::ConfigV4> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::CsPad::make_DataV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 3486939573:
    cfgStore.putProxy(psddl_hdf2psana::CsPad2x2::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 3486939574:
    cfgStore.putProxy(psddl_hdf2psana::CsPad2x2::make_ConfigV2(schema_version, group, idx), src);
    break;
  case 3523858218:
    evt.putProxy(psddl_hdf2psana::Acqiris::make_TdcVetoIO(schema_version, group, idx), src);
    break;
  case 3565044250:
    cfgStore.putProxy(psddl_hdf2psana::Acqiris::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 3566348663:
    evt.putProxy(psddl_hdf2psana::EvrData::make_OutputMap(schema_version, group, idx), src);
    break;
  case 3580200696:
    cfgStore.putProxy(psddl_hdf2psana::Lusi::make_PimImageConfigV1(schema_version, group, idx), src);
    break;
  case 3654144449:
    evt.putProxy(psddl_hdf2psana::EvrData::make_DataV3(schema_version, group, idx), src);
    break;
  case 3781484641:
    evt.putProxy(psddl_hdf2psana::CsPad2x2::make_ElementV1(schema_version, group, idx), src);
    break;
  case 3801204302:
    cfgStore.putProxy(psddl_hdf2psana::UsdUsb::make_ConfigV1(schema_version, group, idx), src);
    break;
  case 3985960297:
    if (boost::shared_ptr<Psana::Andor::ConfigV1> cfgPtr = cfgStore.get(src)) {
      evt.putProxy(psddl_hdf2psana::Andor::make_FrameV1(schema_version, group, idx, cfgPtr), src);
    }
    break;
  case 3999657228:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataIpimbV0(schema_version, group, idx), src);
    break;
  case 3999657229:
    evt.putProxy(psddl_hdf2psana::Bld::make_BldDataIpimbV1(schema_version, group, idx), src);
    break;
  case 4103916008:
    cfgStore.putProxy(psddl_hdf2psana::FCCD::make_FccdConfigV1(schema_version, group, idx), src);
    break;
  case 4103916011:
    cfgStore.putProxy(psddl_hdf2psana::FCCD::make_FccdConfigV2(schema_version, group, idx), src);
    break;
  case 4114962913:
    evt.putProxy(psddl_hdf2psana::EvrData::make_PulseConfig(schema_version, group, idx), src);
    break;
  case 4207593793:
    cfgStore.putProxy(psddl_hdf2psana::Pulnix::make_TM6740ConfigV2(schema_version, group, idx), src);
    break;
  case 4207593794:
    cfgStore.putProxy(psddl_hdf2psana::Pulnix::make_TM6740ConfigV1(schema_version, group, idx), src);
    break;
  case 4219576590:
    cfgStore.putProxy(psddl_hdf2psana::Camera::make_FrameFccdConfigV1(schema_version, group, idx), src);
    break;
  } // end switch

} catch (const PSEvt::ExceptionDuplicateKey& ex) {
  // catch exception for duplicated objects, issue warning
  MsgLog("hdfConvert", warning, ex.what());
} // end hdfConvert(...)

} // namespace psddl_hdf2psana

