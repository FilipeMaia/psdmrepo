#ifndef PSDDL_HDF2PSANA_GSC16AI_DDL_H
#define PSDDL_HDF2PSANA_GSC16AI_DDL_H 1

// *** Do not edit this file, it is auto-generated ***

#include "psddl_psana/gsc16ai.ddl.h"
#include "hdf5pp/Group.h"
#include "hdf5pp/Type.h"
#include "PSEvt/Proxy.h"
namespace psddl_hdf2psana {
namespace Gsc16ai {

namespace ns_ConfigV1_v0 {
struct dataset_config {
  static hdf5pp::Type native_type();
  static hdf5pp::Type stored_type();

  dataset_config();
  ~dataset_config();

  uint16_t voltageRange; 
  uint16_t firstChan; 
  uint16_t lastChan; 
  uint16_t inputMode; 
  uint16_t triggerMode; 
  uint16_t dataFormat; 
  uint16_t fps; 
  uint8_t autocalibEnable; 
  uint8_t timeTagEnable; 
  uint16_t numChannels; 

};
}


class ConfigV1_v0 : public Psana::Gsc16ai::ConfigV1 {
public:
  typedef Psana::Gsc16ai::ConfigV1 PsanaType;
  ConfigV1_v0() {}
  ConfigV1_v0(hdf5pp::Group group, hsize_t idx)
    : m_group(group), m_idx(idx) {}
  ConfigV1_v0(const boost::shared_ptr<Gsc16ai::ns_ConfigV1_v0::dataset_config>& ds) : m_ds_config(ds) {}
  virtual ~ConfigV1_v0() {}
  virtual uint16_t voltageRange() const;
  virtual uint16_t firstChan() const;
  virtual uint16_t lastChan() const;
  virtual uint16_t inputMode() const;
  virtual uint16_t triggerMode() const;
  virtual uint16_t dataFormat() const;
  virtual uint16_t fps() const;
  virtual uint8_t autocalibEnable() const;
  virtual uint8_t timeTagEnable() const;
  virtual uint16_t numChannels() const;
private:
  mutable hdf5pp::Group m_group;
  hsize_t m_idx;
  mutable boost::shared_ptr<Gsc16ai::ns_ConfigV1_v0::dataset_config> m_ds_config;
  void read_ds_config() const;
};

boost::shared_ptr<PSEvt::Proxy<Psana::Gsc16ai::ConfigV1> > make_ConfigV1(int version, hdf5pp::Group group, hsize_t idx);

namespace ns_DataV1_v0 {
struct dataset_timestamp {
  static hdf5pp::Type native_type();
  static hdf5pp::Type stored_type();

  dataset_timestamp();
  ~dataset_timestamp();

  uint16_t timestamp[3]; 

};
}


template <typename Config>
class DataV1_v0 : public Psana::Gsc16ai::DataV1 {
public:
  typedef Psana::Gsc16ai::DataV1 PsanaType;
  DataV1_v0() {}
  DataV1_v0(hdf5pp::Group group, hsize_t idx, const boost::shared_ptr<Config>& cfg)
    : m_group(group), m_idx(idx), m_cfg(cfg) {}
  virtual ~DataV1_v0() {}
  virtual ndarray<const uint16_t, 1> timestamp() const;
  virtual ndarray<const uint16_t, 1> channelValue() const;
private:
  mutable hdf5pp::Group m_group;
  hsize_t m_idx;
  boost::shared_ptr<Config> m_cfg;
  mutable boost::shared_ptr<Gsc16ai::ns_DataV1_v0::dataset_timestamp> m_ds_timestamp;
  void read_ds_timestamp() const;
  mutable ndarray<const uint16_t, 1> m_ds_channelValue;
  void read_ds_channelValue() const;
};

boost::shared_ptr<PSEvt::Proxy<Psana::Gsc16ai::DataV1> > make_DataV1(int version, hdf5pp::Group group, hsize_t idx, const boost::shared_ptr<Psana::Gsc16ai::ConfigV1>& cfg);
} // namespace Gsc16ai
} // namespace psddl_hdf2psana
#endif // PSDDL_HDF2PSANA_GSC16AI_DDL_H
