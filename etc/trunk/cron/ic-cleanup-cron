#!/bin/sh
#
# Shell script which runs ic-cleanup script
#
# $Id$
#

# release directory
release=/reg/g/psdm/sw/releases/dm-current
#release=/reg/neh/home/salnikov/ws/0.2.2

# database options
icdb_files="/reg/g/psdm/psdatmgr/ic/.icdb-conn /reg/g/psdm/psdatmgr/ic/.icdb-ffb-conn"

# log directory
logdir=/reg/g/psdm/psdatmgr/ic/log

# ===================================================================

usage () {
  echo "Usage: $(basename $0) [options]"
  echo "  Options:"
  echo "    -h        - print this message"
  echo "    -r path   - release directory, def: $release"
  echo "    -p path   - PID file path, def: none"
}

while getopts hr:p: c ; do
  case $c in
    h) usage ; exit 0 ;;
    r) release="$OPTARG" ;;
    p) pidfile="$OPTARG" ;;
    \?) usage ; exit 2 ;;
  esac
done
shift `expr $OPTIND - 1`

# do not allow world access
#umask 027

# create log dir
test -d "$logdir" || mkdir -p "$logdir" || exit 2

# redirect output
log="$logdir/ic-cleanup-`hostname`.log"
exec >> "$log" 2>&1

time=`date +'%Y-%m-%d %H:%M:%S'`
echo "+++ Time: $time Release: $release"

# see if there is a "lock" left 
oldpid=''
test -n "$pidfile" -a -f "$pidfile" && oldpid=`cat "$pidfile"`
test -n "$oldpid" -a ! -d /proc/$oldpid || oldpid=''

if [ -z "$oldpid" ] ; then 

    test -n "$pidfile" && echo $$ > "$pidfile"

    # have to be in release directory
    cd "$release"
	
    # run setup script, it should guess everything based on the current directory
    . /reg/g/psdm/bin/sit_setup.sh
	
    # run it
    for icdb_file in ${icdb_files}; do
        ic-cleanup -d "file:${icdb_file}" -v
        status=$?
    done

fi

time=`date +'%Y-%m-%d %H:%M:%S'`
echo "--- Time: $time"

exit $status
