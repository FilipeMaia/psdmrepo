psana core framework and data types:
- psana: before C++ psana modules could use the configList function
  to get a std::list or std::vector of parameters. However when
  specifying a default list (if the configuration key was not present)
  they could only work with a std::list. Extend this to work with
  std::vector for default arguments.
- pdscalibdata: PrincetonBaseV1.h - set Rows=0, Cols=0 in order
  to support variable shape data for Princeton.

Detector classes in Python psana (pytopsana):
- Add factory classes to access detectors' data with implementation
  for CSPAD in NDArrProducerCSPAD (PSAS-139)
- Add implementation of factory classes with examples for all known
  detectors: CSPAD2X2, pnCCD, Princeton, Andor, Epix, all Cameras.
- Add interface for geometry methods. See for detail PSAS-139.
- In app/ add applications merge_max_ndarrays, merge_mask_ndarrays,
  convert_npy_to_txt, convert_txt_to_npy.

Calibration algorithms and tools:
- CalibManager: add parameter cp.mask_rms_thr_min and propagate it
  in calibman/calibrun code along with cp.mask_rms_thr (PSAS-6),
  Save Princeton calib files WITH metadata, modified: ConfigFileGenerator.py and
  psana-module-peds-aver-princeton.cfg (PSAS-6)
- PSCalib: In SegGeometryStore use SegGeometryCspad2x1V1 and
  SegGeometryEpix100V1 as singletons to reduce memory consumption (PSAS-147),
  GeometryObject - delete allocated memory for all non-top objects (PSAS-147)

Imaging algorithms and tools:
- ImgAlgos: GlobalMethods - add method stringForDetType, add const
  to parameters in detectorTypeForSource
- NDArrAverage - add parameter thr_rms_min (PSAS-6)

TimeTool:
- add unit test
- remove old, deprecated methods of reporting results. Only add
  the TimeToolDataV2 object. Do not add floats or ndarrays. *Note* this is
  an incompatible change for old style code.
- A number of changes related to (PSAS-145): optionally collect intermediate
  calculations from TimeTool. Analyze and put it in the Event store; introduce
  PlotAnalyze python psana module to collect these intermediate calculations
  and interactively plot them; check for mispelled/unknown configuration keys,
  report as errors; Add examples/plot_analyze.py to demonstrate PlotAnalyze
  module

psmon:
- Add a console app (psconsole) for talking to psmon servers.
- Add legends for xyplot and 1d histograms.
- Client options for forcing log scale added to psplot.
- Fill coloring is now configurable for 1d histograms.
- Several bug fixes related to value-display mouse over tooltips.
- support for plotting within 1 script (no separate client script necessary)

Extendla packages:
- pyqtgraph: updated to 0.9.10 (PSRT-51)

