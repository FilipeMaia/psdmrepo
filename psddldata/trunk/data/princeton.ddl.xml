<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>
    <package name="Princeton">

    Package containing definitions for Princeton Camera data types.

        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV1" version="1" type_id="Id_PrincetonConfig" pack="4">
        
            <tag name="config-type"/>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u32ReadoutSpeedIndex" type="uint32_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u16ReadoutEventCode" type="uint16_t" accessor="readoutEventCode">
            </attribute>

            <attribute name="_u16DelayMode" type="uint16_t" accessor="delayMode">
            </attribute>
            
            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object including header and pixel data, 
            this returns the size of FrameV1 object, do not use this config type with FrameV2
                <expr lang="C++" value="8 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.width() + {self}.binX() - 1) / {self}.binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.height()+ {self}.binY() - 1) / {self}.binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(({self}.width() + {self}.binX()-1)/ {self}.binX() )*(({self}.height()+ {self}.binY()-1)/ {self}.binY() )"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV2" version="2" type_id="Id_PrincetonConfig" pack="4">
        
            <tag name="config-type"/>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u16GainIndex" type="uint16_t" accessor="gainIndex">
            </attribute>

            <attribute name="_u16ReadoutSpeedIndex" type="uint16_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u16ReadoutEventCode" type="uint16_t" accessor="readoutEventCode">
            </attribute>

            <attribute name="_u16DelayMode" type="uint16_t" accessor="delayMode">
            </attribute>
            
            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object including header and pixel data, 
            this returns the size of FrameV1 object, do not use this config type with FrameV2
                <expr lang="C++" value="8 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.width() + {self}.binX() - 1) / {self}.binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.height()+ {self}.binY() - 1) / {self}.binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(({self}.width() + {self}.binX()-1)/ {self}.binX() )*(({self}.height()+ {self}.binY()-1)/ {self}.binY() )"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV3" version="3" type_id="Id_PrincetonConfig" pack="4">
        
            <tag name="config-type"/>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u8GainIndex" type="uint8_t" accessor="gainIndex">
            </attribute>

            <attribute name="_u8ReadoutSpeedIndex" type="uint8_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u16ExposureEventCode" type="uint16_t" accessor="exposureEventCode">
            </attribute>

            <attribute name="_u32NumDelayShots" type="uint32_t" accessor="numDelayShots">
            </attribute>
            
            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object including header and pixel data, 
            this returns the size of FrameV1 object, do not use this config type with FrameV2
                <expr lang="C++" value="8 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.width() + {self}.binX() - 1) / {self}.binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.height()+ {self}.binY() - 1) / {self}.binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(({self}.width() + {self}.binX()-1)/ {self}.binX() )*(({self}.height()+ {self}.binY()-1)/ {self}.binY() )"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV4" version="4" type_id="Id_PrincetonConfig" pack="4">
        
            <tag name="config-type"/>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_u32MaskedHeight" type="uint32_t" accessor="maskedHeight">
            </attribute>

            <attribute name="_u32KineticHeight" type="uint32_t" accessor="kineticHeight">
            </attribute>

            <attribute name="_f32VsSpeed" type="float" accessor="vsSpeed">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u8GainIndex" type="uint8_t" accessor="gainIndex">
            </attribute>

            <attribute name="_u8ReadoutSpeedIndex" type="uint8_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u16ExposureEventCode" type="uint16_t" accessor="exposureEventCode">
            </attribute>

            <attribute name="_u32NumDelayShots" type="uint32_t" accessor="numDelayShots">
            </attribute>
            
            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object including header and pixel data, 
            this returns the size of FrameV1 object, do not use this config type with FrameV2
                <expr lang="C++" value="8 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.width() + {self}.binX() - 1) / {self}.binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.height()+ {self}.binY() - 1) / {self}.binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(({self}.width() + {self}.binX()-1)/ {self}.binX() )*(({self}.height()+ {self}.binY()-1)/ {self}.binY() )"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV5" version="5" type_id="Id_PrincetonConfig" pack="4">
        
            <tag name="config-type"/>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u16GainIndex" type="uint16_t" accessor="gainIndex">
            </attribute>

            <attribute name="_u16ReadoutSpeedIndex" type="uint16_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u32MaskedHeight" type="uint32_t" accessor="maskedHeight">
            </attribute>

            <attribute name="_u32KineticHeight" type="uint32_t" accessor="kineticHeight">
            </attribute>

            <attribute name="_f32VsSpeed" type="float" accessor="vsSpeed">
            </attribute>

            <attribute name="_i16InfoReportInterval" type="int16_t" accessor="infoReportInterval">
            </attribute>

            <attribute name="_u16ExposureEventCode" type="uint16_t" accessor="exposureEventCode">
            </attribute>

            <attribute name="_u32NumDelayShots" type="uint32_t" accessor="numDelayShots">
            </attribute>
            
            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>

            <ctor>
                Constructor which takes values for each attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

            <ctor>
                Constructor which takes values for each attribute
                <tag name="inline"/>
                <arg name="width"  dest="_uWidth"/>
                <arg name="height" dest="_uHeight"/>
            </ctor>

            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object including header and pixel data, 
            this returns the size of FrameV2 object, do not use this config type with FrameV1
                <expr lang="C++" value="12 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.width() + {self}.binX() - 1) / {self}.binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="({self}.height()+ {self}.binY() - 1) / {self}.binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(({self}.width() + {self}.binX()-1)/ {self}.binX() )*(({self}.height()+ {self}.binY()-1)/ {self}.binY() )"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
        
        
        <pstype name="FrameV1" version="1" type_id="Id_PrincetonFrame" pack="4">
        
            <xtc-config name="ConfigV1" />
            <xtc-config name="ConfigV2" />
            <xtc-config name="ConfigV3" />
            <xtc-config name="ConfigV4" />
            <xtc-config name="ConfigV5" />

            <attribute name="_iShotIdStart" type="uint32_t" accessor="shotIdStart">
            </attribute>

            <attribute name="_fReadoutTime" type="float" accessor="readoutTime">
            </attribute>

            <attribute name="_data" type="uint16_t" shape="{xtc-config}.numPixelsY(),{xtc-config}.numPixelsX()" accessor="data">
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        
        
        <pstype name="FrameV2" version="2" type_id="Id_PrincetonFrame" pack="4">
        
            <xtc-config name="ConfigV1" />
            <xtc-config name="ConfigV2" />
            <xtc-config name="ConfigV3" />
            <xtc-config name="ConfigV4" />
            <xtc-config name="ConfigV5" />

            <attribute name="_iShotIdStart" type="uint32_t" accessor="shotIdStart">
            </attribute>

            <attribute name="_fReadoutTime" type="float" accessor="readoutTime">
            </attribute>

            <attribute name="_fTemperature" type="float" accessor="temperature">
            </attribute>

            <attribute name="_data" type="uint16_t" shape="{xtc-config}.numPixelsY(),{xtc-config}.numPixelsX()" accessor="data">
            </attribute>

            <ctor>
                Constructor which takes values for each attribute
                <tag name="inline"/>
                <arg name="shotIdStart"  dest="_iShotIdStart"/>
                <arg name="fReadoutTime" dest="_fReadoutTime"/>
                <arg name="fTemperature" dest="_fTemperature"/>
            </ctor>
              
        </pstype>
        
        <!-- ========================================================================= -->
        
        
        <pstype name="InfoV1" version="1" type_id="Id_PrincetonInfo">

            <tag name="value-type"/>
        
            <attribute name="_fTemperature" type="float" accessor="temperature">
            </attribute>

            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

        </pstype>
        
        
    </package>
</psddl>
