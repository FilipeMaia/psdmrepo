<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>
    <package name="Andor">

    Package containing definitions for Andor data types.

        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV1" version="1" type_id="Id_AndorConfig" pack="4">
        
            <tag name="config-type"/>
        
            <enum name="EnumFanMode" base="uint8_t">
                <enum-const name="ENUM_FAN_FULL" value="0"/>
                <enum-const name="ENUM_FAN_LOW" value="1"/>
                <enum-const name="ENUM_FAN_OFF" value="2"/>
                <enum-const name="ENUM_FAN_ACQOFF" value="3"/>
                <enum-const name="ENUM_FAN_NUM" value="4"/>
            </enum>
        
            <attribute name="_uWidth" type="uint32_t" accessor="width">
            </attribute>

            <attribute name="_uHeight" type="uint32_t" accessor="height">
            </attribute>

            <attribute name="_uOrgX" type="uint32_t" accessor="orgX">
            </attribute>

            <attribute name="_uOrgY" type="uint32_t" accessor="orgY">
            </attribute>

            <attribute name="_uBinX" type="uint32_t" accessor="binX">
            </attribute>

            <attribute name="_uBinY" type="uint32_t" accessor="binY">
            </attribute>

            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_f32CoolingTemp" type="float" accessor="coolingTemp">
            </attribute>

            <attribute name="_u8FanMode" type="EnumFanMode" accessor="fanMode">
            </attribute>

            <attribute name="_u8BaselineClamp" type="uint8_t" accessor="baselineClamp">
            </attribute>

            <attribute name="_u8HighCapacity" type="uint8_t" accessor="highCapacity">
            </attribute>

            <attribute name="_u8GainIndex" type="uint8_t" accessor="gainIndex">
            </attribute>

            <attribute name="_u16ReadoutSpeedIndex" type="uint16_t" accessor="readoutSpeedIndex">
            </attribute>

            <attribute name="_u16ExposureEventCode" type="uint16_t" accessor="exposureEventCode">
            </attribute>

            <attribute name="_u32NumDelayShots" type="uint32_t" accessor="numDelayShots">
            </attribute>
            
            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
 
             <ctor>
                Constructor with values for each attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

            <method name="frameSize" type="uint32_t">
            Total size in bytes of the Frame object
            <!-- The code here cannot reference pdsdata directly so we cannot write sizeof(Pds::Andor::FrameV1),
            instead we use hardcoded number for it.  -->
                <expr lang="C++" value="12 + {self}.numPixels()*2"/>
            </method>

            <method name="numPixelsX" type="uint32_t">
            calculate frame X size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(width() + binX() - 1) / binX()"/>
            </method>

            <method name="numPixelsY" type="uint32_t">
            calculate frame Y size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="(height() + binY() - 1) / binY()"/>
            </method>

            <method name="numPixels" type="uint32_t">
            calculate total frame size in pixels based on the current ROI and binning settings
                <tag name="inline"/>
                <expr lang="C++" value="numPixelsX()*numPixelsY()"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
        
        
        <pstype name="FrameV1" version="1" type_id="Id_AndorFrame" pack="4">
        
            <xtc-config name="ConfigV1" />

            <attribute name="_iShotIdStart" type="uint32_t" accessor="shotIdStart">
            </attribute>

            <attribute name="_fReadoutTime" type="float" accessor="readoutTime">
            </attribute>

            <attribute name="_fTemperature" type="float" accessor="temperature">
            </attribute>

            <attribute name="_data" type="uint16_t" shape="{xtc-config}.numPixelsY(),{xtc-config}.numPixelsX()" accessor="data">
            </attribute>

            <ctor>
                Constructor with values for scalar attributes
                <tag name="inline"/>
                <arg name="iShotIdStart"  dest="_iShotIdStart"/>
                <arg name="fReadoutTime"  dest="_fReadoutTime"/>
                <arg name="fTemperature"  dest="_fTemperature"/>
            </ctor>

        </pstype>
        
        
    </package>
</psddl>
