<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>

    <use file="psddldata/xtc.ddl.xml" 
        cpp_headers="pdsdata/xtc/DetInfo.hh"/>

	<package name="EvrData">

        <!-- ========================================================================= -->
	
		<pstype name="PulseConfig">
		
		    <tag name="value-type"/>

		    <const name="Trigger_Shift" value="0" />
		    <const name="Set_Shift" value="8" />
		    <const name="Clear_Shift" value="16" />
		    
		    <const name="Polarity_Shift" value="0" />
		    <const name="Map_Set_Ena_Shift" value="1" />
		    <const name="Map_Reset_Ena_Shift" value="2" />
		    <const name="Map_Trigger_Ena_Shift" value="3" />
		
		
            <attribute name="_pulse" type="uint32_t" accessor="pulse">
            internal pulse generation channel
            </attribute>

            <attribute name="_input_control" type="uint32_t" accessor="_input_control_value">
            Pulse input control

                <bitfield name="_bf_trigger" size="8" type="int16_t" accessor="bf_trigger" access="private"/>
                <bitfield name="_bf_set" size="8" type="int16_t" accessor="bf_set" access="private"/>
                <bitfield name="_bf_clear" size="8" type="int16_t" accessor="bf_clear" access="private"/>

            </attribute>

            <attribute name="_output_control" type="uint32_t" accessor="_output_control_value">
            Pulse output control
                <bitfield name="_bf_polarity" size="1" type="uint8_t" accessor="polarity"/>
                <bitfield name="_bf_map_set_enable" size="1" type="uint8_t" accessor="map_set_enable"/>
                <bitfield name="_bf_map_reset_enable" size="1" type="uint8_t" accessor="map_reset_enable"/>
                <bitfield name="_bf_map_trigger_enable" size="1" type="uint8_t" accessor="map_trigger_enable"/>
            </attribute>

            <attribute name="_prescale" type="uint32_t" accessor="prescale">
            pulse event prescale
            </attribute>

            <attribute name="_delay" type="uint32_t" accessor="delay">
            delay in 119MHz clks
            </attribute>

            <attribute name="_width" type="uint32_t" accessor="width">
            width in 119MHz clks
            </attribute>

            <method name="trigger" type="int16_t">
                <expr lang="C++" value="{self}.bf_trigger()-1"/>
            </method>
            <method name="set" type="int16_t">
                <expr lang="C++" value="{self}.bf_set()-1"/>
            </method>
            <method name="clear" type="int16_t">
                <expr lang="C++" value="{self}.bf_clear()-1"/>
            </method>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>
		
		
        <!-- ========================================================================= -->
	
		<pstype name="PulseConfigV3" pack="4">
		
		    <tag name="value-type"/>

            <attribute name="_u16PulseId" type="uint16_t" accessor="pulseId">
            </attribute>

            <attribute name="_u16Polarity" type="uint16_t" accessor="polarity">
            0 -> positive polarity , 1 -> negative polarity
            </attribute>

            <attribute name="_u32Prescale" type="uint32_t" accessor="prescale">
            Clock divider
            </attribute>

            <attribute name="_u32Delay" type="uint32_t" accessor="delay">
            Delay in 119MHz clks
            </attribute>

            <attribute name="_u32Width" type="uint32_t" accessor="width">
            Width in 119MHz clks
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>

        <!-- ========================================================================= -->
	
		<pstype name="EventCodeV3" pack="4">
		
		    <tag name="value-type"/>

            <attribute name="_u16Code" type="uint16_t" accessor="code">
            </attribute>

            <attribute name="_u16MaskEventAttr" type="uint16_t" accessor="_u16MaskEventAttr_value">
                <bitfield name="_bf_isReadout" size="1" type="uint8_t" accessor="isReadout"/>                
                <bitfield name="_bf_isTerminator" size="1" type="uint8_t" accessor="isTerminator"/>                
            </attribute>

            <attribute name="_u32MaskTrigger" type="uint32_t" accessor="maskTrigger">
            </attribute>

            <attribute name="_u32MaskSet" type="uint32_t" accessor="maskSet">
            </attribute>

            <attribute name="_u32MaskClear" type="uint32_t" accessor="maskClear">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>

        <!-- ========================================================================= -->
	
		<pstype name="EventCodeV4" pack="4">
		
		    <tag name="value-type"/>

            <attribute name="_u16Code" type="uint16_t" accessor="code">
            </attribute>

            <attribute name="_u16MaskEventAttr" type="uint16_t" accessor="_u16MaskEventAttr_value">
                <bitfield name="_bf_isReadout" size="1" type="uint8_t" accessor="isReadout"/>                
                <bitfield name="_bf_isTerminator" size="1" type="uint8_t" accessor="isTerminator"/>                
            </attribute>

            <attribute name="_u32ReportDelay" type="uint32_t" accessor="reportDelay">
            </attribute>

            <attribute name="_u32ReportWidth" type="uint32_t" accessor="reportWidth">
            </attribute>

            <attribute name="_u32MaskTrigger" type="uint32_t" accessor="maskTrigger">
            </attribute>

            <attribute name="_u32MaskSet" type="uint32_t" accessor="maskSet">
            </attribute>

            <attribute name="_u32MaskClear" type="uint32_t" accessor="maskClear">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>

        <!-- ========================================================================= -->
	
		<pstype name="EventCodeV5" pack="4">
				
		    <tag name="value-type"/>

			<const name="DescSize" value="16"/>
				
            <attribute name="_u16Code" type="uint16_t" accessor="code">
            </attribute>

            <attribute name="_u16MaskEventAttr" type="uint16_t" accessor="_u16MaskEventAttr_value">
                <bitfield name="_bf_isReadout" size="1" type="uint8_t" accessor="isReadout"/>                
                <bitfield name="_bf_isTerminator" size="1" type="uint8_t" accessor="isTerminator"/>                
                <bitfield name="_bf_isLatch" size="1" type="uint8_t" accessor="isLatch"/>                
            </attribute>

            <attribute name="_u32ReportDelay" type="uint32_t" accessor="reportDelay">
            </attribute>

            <attribute name="_u32ReportWidth" type="uint32_t" accessor="reportWidth">
            </attribute>

            <attribute name="_u32MaskTrigger" type="uint32_t" accessor="maskTrigger">
            </attribute>

            <attribute name="_u32MaskSet" type="uint32_t" accessor="maskSet">
            </attribute>

            <attribute name="_u32MaskClear" type="uint32_t" accessor="maskClear">
            </attribute>

            <attribute name="_desc" type="char" shape="DescSize" accessor="desc">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>

		<!-- ========================================================================= -->
		

		<pstype name="OutputMap">
		
            <tag name="value-type"/>
        
		    <enum name="Source">
		        <enum-const name="Pulse" />
		        <enum-const name="DBus" />
		        <enum-const name="Prescaler" />
		        <enum-const name="Force_High" />
		        <enum-const name="Force_Low" />
		    </enum>

            <enum name="Conn">
                <enum-const name="FrontPanel" />
                <enum-const name="UnivIO" />
            </enum>
		
            <attribute name="_v" type="uint32_t" accessor="value">
            </attribute>


            <method name="source" type="Source">
                <expr lang="C++" value="Source(_v &amp; 0xff)"/>
            </method>
            
            <method name="source_id" type="uint8_t">
                <expr lang="C++" value="(_v &gt;&gt; 8) &amp; 0xff"/>
            </method>
            
            <method name="conn" type="Conn">
                <expr lang="C++" value="Conn((_v &gt;&gt; 16) &amp; 0xff)"/>
            </method>

            <method name="conn_id" type="uint8_t">
                <expr lang="C++" value="_v &gt;&gt; 24"/>
            </method>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

		</pstype>
		
		<!-- ========================================================================= -->
		
		<pstype name="ConfigV1" version="1" type_id="Id_EvrConfig">
		
            <attribute name="_npulses" type="uint32_t" accessor="npulses">
            </attribute>

            <attribute name="_noutputs" type="uint32_t" accessor="noutputs">
            </attribute>

            <attribute name="_pulses" type="PulseConfig" shape="{self}._npulses" 
                    accessor="pulses" shape_method="pulses_shape">
            </attribute>

            <attribute name="_output_maps" type="OutputMap" shape="{self}._noutputs" 
                    accessor="output_maps" shape_method="output_maps_shape">
            </attribute>

        </pstype>
        
		<!-- ========================================================================= -->
		
		<pstype name="ConfigV2" version="2" type_id="Id_EvrConfig">
		
		    <const name="beamOn" value="100"/>
		    <const name="baseRate" value="40"/>
		    <const name="singleShot" value="150"/>
		
            <enum name="RateCode">
                <enum-const name="r120Hz" />
                <enum-const name="r60Hz" />
                <enum-const name="r30Hz" />
                <enum-const name="r10Hz" />
                <enum-const name="r5Hz" />
                <enum-const name="r1Hz" />
                <enum-const name="r0_5Hz" />
                <enum-const name="Single" />
                <enum-const name="NumberOfRates" />
            </enum>

            <enum name="BeamCode">
                <enum-const name="Off" />
                <enum-const name="On" />
            </enum>

            <attribute name="_opcode" type="uint32_t" accessor="opcode">
            </attribute>

            <attribute name="_npulses" type="uint32_t" accessor="npulses">
            </attribute>

            <attribute name="_noutputs" type="uint32_t" accessor="noutputs">
            </attribute>

            <attribute name="_pulses" type="PulseConfig" shape="{self}._npulses" 
                accessor="pulses" shape_method="pulses_shape">
            </attribute>

            <attribute name="_output_maps" type="OutputMap" shape="{self}._noutputs" accessor="output_maps">
            </attribute>


            <method name="beam" type="BeamCode">
                <expr lang="C++" value="({self}._opcode &gt; beamOn) ? On : Off"/>
            </method>
            
            <method name="rate" type="RateCode">
                <expr lang="C++" value="({self}._opcode &lt; beamOn) ? RateCode({self}._opcode-baseRate) : 
                (({self}._opcode &lt; singleShot) ? RateCode({self}._opcode-beamOn-baseRate) : Single)"/>
            </method>

        </pstype>
        
        
		<!-- ========================================================================= -->
		
		<pstype name="ConfigV3" version="3" type_id="Id_EvrConfig" pack="4">
		
            <attribute name="_neventcodes" type="uint32_t" accessor="neventcodes">
            </attribute>

            <attribute name="_npulses" type="uint32_t" accessor="npulses">
            </attribute>

            <attribute name="_noutputs" type="uint32_t" accessor="noutputs">
            </attribute>

            <attribute name="_eventcodes" type="EventCodeV3" shape="{self}._neventcodes" accessor="eventcodes">
            </attribute>

            <attribute name="_pulses" type="PulseConfigV3" shape="{self}._npulses" accessor="pulses">
            </attribute>

            <attribute name="_output_maps" type="OutputMap" shape="{self}._noutputs" accessor="output_maps">
            </attribute>

        </pstype>
        
        
		<!-- ========================================================================= -->
		
		<pstype name="ConfigV4" version="4" type_id="Id_EvrConfig" pack="4">
		
            <attribute name="_neventcodes" type="uint32_t" accessor="neventcodes">
            </attribute>

            <attribute name="_npulses" type="uint32_t" accessor="npulses">
            </attribute>

            <attribute name="_noutputs" type="uint32_t" accessor="noutputs">
            </attribute>

            <attribute name="_eventcodes" type="EventCodeV4" shape="{self}._neventcodes" accessor="eventcodes">
            </attribute>

            <attribute name="_pulses" type="PulseConfigV3" shape="{self}._npulses" accessor="pulses">
            </attribute>

            <attribute name="_output_maps" type="OutputMap" shape="{self}._noutputs" accessor="output_maps">
            </attribute>

        </pstype>
        
        
		<!-- ========================================================================= -->
		
		<pstype name="SequencerEntry">

		    <tag name="value-type"/>

            <attribute name="_value" type="uint32_t">
            
                <bitfield name="_bf_delay" size="24" type="uint32_t" accessor="delay">
                </bitfield>

                <bitfield name="_bf_eventcode" size="8" type="uint32_t" accessor="eventcode">
                </bitfield>
            
            </attribute>

            <ctor>
                Default constructor without arguments
                <tag name="inline"/>
            </ctor>
            <ctor>
                Standard constructor
                <tag name="inline"/>
                <arg name="eventcode" type="uint32_t" dest="_bf_eventcode"/>
                <arg name="delay" type="uint32_t" dest="_bf_delay"/>
            </ctor>

        </pstype>
		
		<!-- ========================================================================= -->
		
		<pstype name="SequencerConfigV1">

            <enum name="Source">
                <enum-const name="r120Hz" />
                <enum-const name="r60Hz" />
                <enum-const name="r30Hz" />
                <enum-const name="r10Hz" />
                <enum-const name="r5Hz" />
                <enum-const name="r1Hz" />
                <enum-const name="r0_5Hz" />
                <enum-const name="Disable" />
            </enum>

            <attribute name="_source" type="uint32_t">
            
                <bitfield name="_bf_sync_source" size="8" type="Source" accessor="sync_source">
                </bitfield>

                <bitfield name="_bf_beam_source" size="8" type="Source" accessor="beam_source">
                </bitfield>
            
            </attribute>

            <attribute name="_length" type="uint32_t" accessor="length"/>

            <attribute name="_cycles" type="uint32_t" accessor="cycles"/>

            <attribute name="_entries" type="SequencerEntry" shape="{self}._length" accessor="entries"/>

            <ctor>
                Default constructor without arguments
                <tag name="inline"/>
            </ctor>
            <ctor>
                Standard constructor
                <tag name="inline"/>
                <arg name="sync_source" type="Source" dest="_bf_sync_source"/>
                <arg name="beam_source" type="Source" dest="_bf_beam_source"/>
                <arg name="length" type="uint32_t" dest="_length"/>
                <arg name="cycles" type="uint32_t" dest="_cycles"/>
            </ctor>


        </pstype>
		
		<!-- ========================================================================= -->
		
		<pstype name="ConfigV5" version="5" type_id="Id_EvrConfig" pack="4">
		
            <attribute name="_neventcodes" type="uint32_t" accessor="neventcodes">
            </attribute>

            <attribute name="_npulses" type="uint32_t" accessor="npulses">
            </attribute>

            <attribute name="_noutputs" type="uint32_t" accessor="noutputs">
            </attribute>

            <attribute name="_eventcodes" type="EventCodeV5" shape="{self}._neventcodes" accessor="eventcodes">
            </attribute>

            <attribute name="_pulses" type="PulseConfigV3" shape="{self}._npulses" accessor="pulses">
            </attribute>

            <attribute name="_output_maps" type="OutputMap" shape="{self}._noutputs" accessor="output_maps">
            </attribute>

            <attribute name="_seq_config" type="SequencerConfigV1" accessor="seq_config">
            </attribute>

        </pstype>
        
        
		<!-- ========================================================================= -->
		
		<pstype name="FIFOEvent">
		
            <tag name="value-type"/>
        
            <attribute name="_timestampHigh" type="uint32_t" accessor="timestampHigh">
            </attribute>

            <attribute name="_timestampLow" type="uint32_t" accessor="timestampLow">
            </attribute>

            <attribute name="_eventCode" type="uint32_t" accessor="eventCode">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

        </pstype>
        
        
        <!-- ========================================================================= -->
        
        <pstype name="DataV3" version="3" type_id="Id_EvrData">
        
            <attribute name="_u32NumFifoEvents" type="uint32_t" accessor="numFifoEvents">
            </attribute>

            <attribute name="_fifoEvents" type="FIFOEvent" shape="{self}._u32NumFifoEvents" accessor="fifoEvents">
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="IOChannel">
        
            <const name="NameLength" value="12"/>
            <const name="MaxInfos" value="8"/>
        
            <attribute name="_name" type="char" shape="NameLength" accessor="name">
            </attribute>

            <attribute name="_ninfo" type="uint32_t" accessor="ninfo">
            </attribute>

            <attribute name="_info" type="Pds.DetInfo" shape="MaxInfos" accessor="infos">
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="IOConfigV1" version="1" type_id="Id_EvrIOConfig" pack="4">
        
            <attribute name="_conn" type="uint16_t">
            </attribute>

            <attribute name="_nchannels" type="uint16_t" accessor="nchannels">
            </attribute>

            <attribute name="_channels" type="IOChannel" shape="{self}._nchannels" accessor="channels">
            </attribute>

            <method name="conn" type="OutputMap.Conn">
                <expr lang="C++" value="OutputMap::Conn({self}._conn)"/>
            </method>

        </pstype>
        
        
	</package>
</psddl>
