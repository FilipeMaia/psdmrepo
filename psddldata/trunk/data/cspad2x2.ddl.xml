<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>
    <package name="CsPad2x2">

    Package containing definitions for CsPad2x2-produced data types.


        <!-- ========================================================================= -->

        <const name="QuadsPerSensor" value="1">
        Defines number of quadrants in a CsPad2x2 device.
        </const>
        <const name="ASICsPerQuad" value="4">
        Total number of ASICs in one quadrant.
        </const>
        <const name="RowsPerBank" value="26">
        Number of rows per readout bank?
        </const>
        <const name="FullBanksPerASIC" value="7">
        Number of full readout banks per one ASIC?
        </const>
        <const name="BanksPerASIC" value="8">
        Number of readout banks per one ASIC?
        </const>
        <const name="ColumnsPerASIC" value="185">
        Number of columns readout by single ASIC.
        </const>
        <const name="MaxRowsPerASIC" value="194">
        Maximum number of rows readout by single ASIC.
        </const>
        <const name="PotsPerQuad" value="80">
        Number of POTs? per single quadrant.
        </const>
        
        <const name="TwoByTwosPerQuad" value="1">
        Total number of 2x2s in single quadrant.
        </const>

        <const name="SectorsPerQuad" value="2">
        Total number of sectors (2x1) per single quadrant.
        </const>
        
        
        <enum name="RunModes">
            
            Enum specifying different running modes.
        
            <enum-const name="NoRunning" />
            <enum-const name="RunButDrop" />
            <enum-const name="RunAndSendToRCE" />
            <enum-const name="RunAndSendTriggeredByTTL" />
            <enum-const name="ExternalTriggerSendToRCE" />
            <enum-const name="ExternalTriggerDrop" />
            <enum-const name="NumberOfRunModes" />
        </enum>

        <enum name="DataModes">
            
            Enum specifying different data collection modes.
        
            <enum-const name="normal" value="0" />
            <enum-const name="shiftTest" value="1" />
            <enum-const name="testData" value="2" />
            <enum-const name="reserved" value="3" />
        </enum>


        <!-- ========================================================================= -->
    
        <pstype name="CsPad2x2DigitalPotsCfg">
        
            Class defining configuration for CsPad POTs?
        
            <attribute name="_pots" type="uint8_t" shape="PotsPerQuad" accessor="pots">
            </attribute>

        </pstype>
        
        
        <!-- ========================================================================= -->
        

        <pstype name="CsPad2x2ReadOnlyCfg">
        
            Class defining read-only configuration.

            <tag name="value-type"/>
        
            <attribute name="_shiftTest" type="uint32_t" accessor="shiftTest">
            </attribute>

            <attribute name="_version" type="uint32_t" accessor="version">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

        </pstype>
        
        <!-- ========================================================================= -->
        

        <pstype name="ProtectionSystemThreshold">
        
            <tag name="value-type"/>
        
            <attribute name="_adcThreshold" type="uint32_t" accessor="adcThreshold">
            </attribute>

            <attribute name="_pixelCountThreshold" type="uint32_t" accessor="pixelCountThreshold">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

        </pstype>
        
        <!-- ========================================================================= -->
        

        <pstype name="CsPad2x2GainMapCfg">

            Class defining ASIC gain map.
        
            <attribute name="_gainMap" type="uint16_t" shape="ColumnsPerASIC,MaxRowsPerASIC" 
                    accessor="gainMap">
            Array with the gain map for single ASIC.
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        

        <pstype name="ConfigV1QuadReg">
        
            Configuration data for single "quadrant" which for 2x2 means a single 2x2.
        
            <attribute name="_shiftSelect" type="uint32_t" accessor="shiftSelect">
            </attribute>

            <attribute name="_edgeSelect" type="uint32_t" accessor="edgeSelect">
            </attribute>

            <attribute name="_readClkSet" type="uint32_t" accessor="readClkSet">
            </attribute>

            <attribute name="_readClkHold" type="uint32_t" accessor="readClkHold">
            </attribute>

            <attribute name="_dataMode" type="uint32_t" accessor="dataMode">
            </attribute>

            <attribute name="_prstSel" type="uint32_t" accessor="prstSel">
            </attribute>

            <attribute name="_acqDelay" type="uint32_t" accessor="acqDelay">
            </attribute>

            <attribute name="_intTime" type="uint32_t" accessor="intTime">
            </attribute>

            <attribute name="_digDelay" type="uint32_t" accessor="digDelay">
            </attribute>

            <attribute name="_ampIdle" type="uint32_t" accessor="ampIdle">
            </attribute>

            <attribute name="_injTotal" type="uint32_t" accessor="injTotal">
            </attribute>

            <attribute name="_rowColShiftPer" type="uint32_t" accessor="rowColShiftPer">
            </attribute>

            <attribute name="_ampReset" type="uint32_t" accessor="ampReset">
            </attribute>

            <attribute name="_digCount" type="uint32_t" accessor="digCount">
            </attribute>

            <attribute name="_digPeriod" type="uint32_t" accessor="digPeriod">
            </attribute>

            <attribute name="_PeltierEnable" type="uint32_t" accessor="PeltierEnable">
            </attribute>

            <attribute name="_kpConstant" type="uint32_t" accessor="kpConstant">
            </attribute>

            <attribute name="_kiConstant" type="uint32_t" accessor="kiConstant">
            </attribute>

            <attribute name="_kdConstant" type="uint32_t" accessor="kdConstant">
            </attribute>

            <attribute name="_humidThold" type="uint32_t" accessor="humidThold">
            </attribute>

            <attribute name="_setPoint" type="uint32_t" accessor="setPoint">
            </attribute>

            <attribute name="_readOnly" type="CsPad2x2ReadOnlyCfg" accessor="ro">
            read-only configuration
            </attribute>

            <attribute name="_digitalPots" type="CsPad2x2DigitalPotsCfg" accessor="dp">
            </attribute>

            <attribute name="_gainMap" type="CsPad2x2GainMapCfg" accessor="gm">
            Gain map.
            </attribute>

            <ctor>
              Default constructor
              <tag name="inline"/>
            </ctor>
             
            <ctor>
              Constructor with values for each attribute
              <tag name="inline"/>
              <tag name="auto"/>
            </ctor>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="ConfigV1" version="1" type_id="Id_Cspad2x2Config">
        
            Configuration data for 2x2 CsPad device.
        
            <tag name="config-type"/>
        
            <attribute name="_concentratorVersion" type="uint32_t" accessor="concentratorVersion">
            </attribute>

            <attribute name="_protectionThreshold" type="ProtectionSystemThreshold" accessor="protectionThreshold">
            </attribute>

            <attribute name="_protectionEnable" type="uint32_t" accessor="protectionEnable">
            </attribute>

            <attribute name="_inactiveRunMode" type="uint32_t" accessor="inactiveRunMode">
            </attribute>

            <attribute name="_activeRunMode" type="uint32_t" accessor="activeRunMode">
            </attribute>

            <attribute name="_testDataIndex" type="uint32_t" accessor="tdi">
            </attribute>

            <attribute name="_payloadPerQuad" type="uint32_t" accessor="payloadSize">
            </attribute>

            <attribute name="_badAsicMask" type="uint32_t" accessor="badAsicMask">
            </attribute>

            <attribute name="_AsicMask" type="uint32_t" accessor="asicMask">
            </attribute>

            <attribute name="_roiMask" type="uint32_t" accessor="roiMask">
            </attribute>

            <attribute name="_quad" type="ConfigV1QuadReg" accessor="quad">
            </attribute>

            <ctor>
              Constructor with values for each attribute
              <tag name="inline"/>
              <tag name="auto"/>
            </ctor>

            <method name="numAsicsRead" type="uint32_t">
                <expr lang="C++" value="4"/>
            </method>
            
            <method name="numAsicsStored" type="uint32_t">
                Number of ASICs in given quadrant
                <expr lang="C++" value="__builtin_popcount({self}.roiMask())*2"/>
            </method>
            
        </pstype>
        
        <!-- ========================================================================= -->
        

        <pstype name="ConfigV2QuadReg">
        
            Configuration data for single "quadrant" which for 2x2 means a single 2x2.
        
            <attribute name="_shiftSelect" type="uint32_t" accessor="shiftSelect">
            </attribute>

            <attribute name="_edgeSelect" type="uint32_t" accessor="edgeSelect">
            </attribute>

            <attribute name="_readClkSet" type="uint32_t" accessor="readClkSet">
            </attribute>

            <attribute name="_readClkHold" type="uint32_t" accessor="readClkHold">
            </attribute>

            <attribute name="_dataMode" type="uint32_t" accessor="dataMode">
            </attribute>

            <attribute name="_prstSel" type="uint32_t" accessor="prstSel">
            </attribute>

            <attribute name="_acqDelay" type="uint32_t" accessor="acqDelay">
            </attribute>

            <attribute name="_intTime" type="uint32_t" accessor="intTime">
            </attribute>

            <attribute name="_digDelay" type="uint32_t" accessor="digDelay">
            </attribute>

            <attribute name="_ampIdle" type="uint32_t" accessor="ampIdle">
            </attribute>

            <attribute name="_injTotal" type="uint32_t" accessor="injTotal">
            </attribute>

            <attribute name="_rowColShiftPer" type="uint32_t" accessor="rowColShiftPer">
            </attribute>

            <attribute name="_ampReset" type="uint32_t" accessor="ampReset">
            </attribute>

            <attribute name="_digCount" type="uint32_t" accessor="digCount">
            </attribute>

            <attribute name="_digPeriod" type="uint32_t" accessor="digPeriod">
            </attribute>

            <attribute name="_PeltierEnable" type="uint32_t" accessor="PeltierEnable">
            </attribute>

            <attribute name="_kpConstant" type="uint32_t" accessor="kpConstant">
            </attribute>

            <attribute name="_kiConstant" type="uint32_t" accessor="kiConstant">
            </attribute>

            <attribute name="_kdConstant" type="uint32_t" accessor="kdConstant">
            </attribute>

            <attribute name="_humidThold" type="uint32_t" accessor="humidThold">
            </attribute>

            <attribute name="_setPoint" type="uint32_t" accessor="setPoint">
            </attribute>

            <attribute name="_biasTuning" type="uint32_t" accessor="biasTuning">
            bias tuning is used, but not written;
            2 bits per nibble, C2,C1,I5,I2;
            bit order rc00rc00rc00rc
            </attribute>

            <attribute name="_pdpmndnmBalance" type="uint32_t" accessor="pdpmndnmBalance">
            pMOS and nMOS Displacement and Main;
            used but not written and not in GUI yet;
            hard-wired to zero in GUI;
            2 bits per nibble, bit order pd00pm00nd00nm
            </attribute>

            <attribute name="_readOnly" type="CsPad2x2ReadOnlyCfg" accessor="ro">
            read-only configuration
            </attribute>

            <attribute name="_digitalPots" type="CsPad2x2DigitalPotsCfg" accessor="dp">
            </attribute>

            <attribute name="_gainMap" type="CsPad2x2GainMapCfg" accessor="gm">
            Gain map.
            </attribute>

            <ctor>
              Default constructor
              <tag name="inline"/>
            </ctor>
             
            <ctor>
              Constructor with values for each attribute
              <tag name="inline"/>
              <tag name="auto"/>
            </ctor>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="ConfigV2" version="2" type_id="Id_Cspad2x2Config">
        
            Configuration data for 2x2 CsPad device.
        
            <tag name="config-type"/>
        
            <attribute name="_concentratorVersion" type="uint32_t" accessor="concentratorVersion">
            </attribute>

            <attribute name="_protectionThreshold" type="ProtectionSystemThreshold" accessor="protectionThreshold">
            </attribute>

            <attribute name="_protectionEnable" type="uint32_t" accessor="protectionEnable">
            </attribute>

            <attribute name="_inactiveRunMode" type="uint32_t" accessor="inactiveRunMode">
            </attribute>

            <attribute name="_activeRunMode" type="uint32_t" accessor="activeRunMode">
            </attribute>

            <attribute name="_runTriggerDelay" type="uint32_t" accessor="runTriggerDelay">
            </attribute>

            <attribute name="_testDataIndex" type="uint32_t" accessor="tdi">
            </attribute>

            <attribute name="_payloadPerQuad" type="uint32_t" accessor="payloadSize">
            </attribute>

            <attribute name="_badAsicMask" type="uint32_t" accessor="badAsicMask">
            </attribute>

            <attribute name="_AsicMask" type="uint32_t" accessor="asicMask">
            </attribute>

            <attribute name="_roiMask" type="uint32_t" accessor="roiMask">
            </attribute>

            <attribute name="_quad" type="ConfigV2QuadReg" accessor="quad">
            </attribute>

            <ctor>
              Default constructor
              <tag name="inline"/>
            </ctor>
             
            <ctor>
              Constructor with values for each attribute
              <tag name="inline"/>
              <tag name="auto"/>
            </ctor>

            <method name="numAsicsRead" type="uint32_t">
                <expr lang="C++" value="4"/>
            </method>
            
            <method name="numAsicsStored" type="uint32_t">
                Number of ASICs in given quadrant
                <expr lang="C++" value="__builtin_popcount({self}.roiMask())*2"/>
            </method>
            
        </pstype>
        
        <!-- ========================================================================= -->
                
        <pstype name="ElementV1" version="1" type_id="Id_Cspad2x2Element">
        
            CsPad data from single 2x2 element.
        
            <const name="Nsbtemp" value="4">
            Number of the elements in _sbtemp array.
            </const>
        
            <attribute name="_word0" type="uint32_t" accessor="">
            
                <bitfield name="_bf_virtual_channel" size="2" type="uint32_t" accessor="virtual_channel">
                Virtual channel number.
                </bitfield>

                <bitfield name="_bf_pad" size="4">
                </bitfield>
            
                <bitfield name="_bf_lane" size="2" type="uint32_t" accessor="lane">
                Lane number.
                </bitfield>
            
                <bitfield name="_bf_tid" size="24" type="uint32_t" accessor="tid">
                </bitfield>
            
            </attribute>

            <attribute name="_word1" type="uint32_t" accessor="">

                <bitfield name="_bf_acq_count" size="16" type="uint32_t" accessor="acq_count">
                </bitfield>

                <bitfield name="_bf_op_code" size="8" type="uint32_t" accessor="op_code">
                </bitfield>

                <bitfield name="_bf_quad" size="2" type="uint32_t" accessor="quad">
                Quadrant number.
                </bitfield>

            </attribute>

            <attribute name="_seq_count" type="uint32_t" accessor="seq_count">
            </attribute>

            <attribute name="_ticks" type="uint32_t" accessor="ticks">
            </attribute>

            <attribute name="_fiducials" type="uint32_t" accessor="fiducials">
            </attribute>

            <attribute name="_sbtemp" type="uint16_t" shape="Nsbtemp" accessor="sb_temp">
            </attribute>

            <attribute name="_frame_type" type="uint32_t" accessor="frame_type">
            </attribute>

            <attribute name="_data" type="int16_t" shape="ColumnsPerASIC, MaxRowsPerASIC*2, 2" accessor="data">
            </attribute>


            <method name="common_mode" type="float">
                Common mode value for a given section, section number can be 0 or 1.
                Will return 0 for data read from XTC, may be non-zero after calibration.
                <arg name="section" type="uint32_t"/>
                <expr lang="C++" value="0"/>
            </method>

        </pstype>
        
        
    </package>
</psddl>
