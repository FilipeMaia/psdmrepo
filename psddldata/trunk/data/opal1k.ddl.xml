<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>

    <use file="psddldata/camera.ddl.xml" />

    <package name="Opal1k">

    Package containing definitions for Opal Camera data types.

        <!-- ========================================================================= -->
    
        
        <pstype name="ConfigV1" version="1" type_id="Id_Opal1kConfig">
        
            <tag name="config-type"/>
        
            <enum name="Depth" base="uint8_t">
            Image bit depth modes.
                <enum-const name="Eight_bit" />
                <enum-const name="Ten_bit" />
                <enum-const name="Twelve_bit" />
            </enum>

            <enum name="Binning" base="uint8_t">
                <enum-const name="x1" />
                <enum-const name="x2" />
                <enum-const name="x4" />
                <enum-const name="x8" />
            </enum>

            <enum name="Mirroring" base="uint8_t">
                <enum-const name="None" />
                <enum-const name="HFlip" />
                <enum-const name="VFlip" />
                <enum-const name="HVFlip" />
            </enum>

            <const name="LUT_Size" value="4096" />
            <const name="Row_Pixels" value="1024" />
            <const name="Column_Pixels" value="1024" />
            <const name="Output_LUT_Size" value="4096" />
            
            

            <attribute name="_offsetAndGain" type="uint32_t">
            offset and gain
            
                <bitfield name="_bf_offset" size="16" type="uint16_t" accessor="black_level">
                offset/pedestal setting for camera (before gain)
                </bitfield>
                
                <bitfield name="_bf_gain" size="16" type="uint16_t" accessor="gain_percent">
                camera gain setting in percentile [100-3200] = [1x-32x]
                </bitfield>
            
            </attribute>

            <attribute name="_outputOptions" type="uint32_t">
            bit mask of output formatting options

                <bitfield name="_bf_resol" size="4" type="Depth" accessor="output_resolution">
                bit-depth of pixel counts
                </bitfield>
                
                <bitfield name="_bf_vbin" size="4" type="Binning" accessor="vertical_binning">
                vertical re-binning of output (consecutive rows summed)
                </bitfield>
                
                <bitfield name="_bf_mirr" size="4" type="Mirroring" accessor="output_mirroring">
                geometric transformation of the image
                </bitfield>
                
                <bitfield name="_bf_vremap" size="1" type="uint8_t" accessor="vertical_remapping">
                1: remap the pixels to appear in natural geometric order 
                      (left->right, top->bottom);
                0: pixels appear on dual taps from different rows
                      (left->right, top->bottom) alternated with
                      (left->right, bottom->top) pixel by pixel
                </bitfield>
                
                <bitfield name="_bf_corr" size="1" type="uint8_t" accessor="defect_pixel_correction_enabled">
                correct defective pixels internally
                </bitfield>
                
                <bitfield name="_bf_lookup" size="1" type="uint8_t" accessor="output_lookup_table_enabled">
                apply output lookup table corrections
                </bitfield>
                
            </attribute>

            <attribute name="_defectPixelCount" type="uint32_t" accessor="number_of_defect_pixels">
            </attribute>
            
            <attribute name="_lookup_table" type="uint16_t" 
                      shape="Output_LUT_Size*{self}.output_lookup_table_enabled()" 
                      accessor="output_lookup_table">
            </attribute>
            
            <attribute name="_defectPixels" type="Camera.FrameCoord" 
                      shape="{self}.number_of_defect_pixels()" accessor="defect_pixel_coordinates">
            </attribute>
            
            <method name="output_offset" type="uint16_t">
            offset/pedestal value in pixel counts
                <expr lang="C++" value="(uint32_t({self}.black_level())*uint32_t({self}.gain_percent()))/100"/>
            </method>

            <method name="output_resolution_bits" type="uint32_t">
            bit-depth of pixel counts
                <expr lang="C++" value="{self}.output_resolution()*2+8"/>
            </method>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="auto"/>
            </ctor>

        </pstype>
        
        
        
    </package>
</psddl>
