<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>
	<package name="OceanOptics">

    Package containing definitions for oceanOptics data types.

        <!-- ========================================================================= -->
	
		
		<pstype name="ConfigV1" version="1" type_id="Id_OceanOpticsConfig" pack="4">
		
			<tag name="config-type"/>
		
            <attribute name="_f32ExposureTime" type="float" accessor="exposureTime">
            </attribute>

            <attribute name="_lfWaveLenCalibCoeff" type="double" shape="4" accessor="waveLenCalib">
            </attribute>

            <attribute name="_lfNonlinCorrectCoeff" type="double" shape="8" accessor="nonlinCorrect">
            </attribute>

            <attribute name="_fStrayLightConstant" type="double" accessor="strayLightConstant">
            </attribute>

        </pstype>
        
		<!-- ========================================================================= -->
		
        
        <pstype name="timespec64" pack="4">
        
        	<tag name="value-type"/>
        
            <attribute name="_tv_sec" type="uint64_t" accessor="tv_sec">
            </attribute>

            <attribute name="_tv_nsec" type="uint64_t" accessor="tv_nsec">
            </attribute>

            <ctor>
                Default constructor
                <tag name="inline"/>
            </ctor>
            <ctor>
                Constructor which takes values for every attribute
                <tag name="inline"/>
                <tag name="auto"/>
            </ctor>

        </pstype>
        
		<!-- ========================================================================= -->
		
        
        <pstype name="DataV1" version="1" type_id="Id_OceanOpticsData" pack="4">
        
            <xtc-config name="ConfigV1" />
        
			<const name="iDataReadSize" value="8192"/>
			<const name="iNumPixels" value="3840"/>
			<const name="iActivePixelIndex" value="22"/>


            <attribute name="lu16Spetra" type="uint16_t" shape="iNumPixels" accessor="data">
            </attribute>

            <attribute name="_u64FrameCounter" type="uint64_t" accessor="frameCounter">
            </attribute>

            <attribute name="_u64NumDelayedFrames" type="uint64_t" accessor="numDelayedFrames">
            </attribute>

            <attribute name="_u64NumDiscardFrames" type="uint64_t" accessor="numDiscardFrames">
            </attribute>

            <attribute name="_tsTimeFrameStart" type="timespec64" accessor="timeFrameStart">
            </attribute>

            <attribute name="_tsTimeFrameFirstData" type="timespec64" accessor="timeFrameFirstData">
            </attribute>

            <attribute name="_tsTimeFrameEnd" type="timespec64" accessor="timeFrameEnd">
            </attribute>

            <attribute name="_i32Version" type="int32_t" accessor="version">
            </attribute>

            <attribute name="_i8NumSpectraInData" type="int8_t" accessor="numSpectraInData">
            </attribute>

            <attribute name="_i8NumSpectraInQueue" type="int8_t" accessor="numSpectraInQueue">
            </attribute>

            <attribute name="_i8NumSpectraUnused" type="int8_t" accessor="numSpectraUnused">
            </attribute>

            <attribute name="_iReserved1" type="int8_t" accessor="">
            </attribute>

			<method name="durationOfFrame" type="double">
				<tag name="inline"/>
				<expr lang="C++" value="{self}._tsTimeFrameEnd.tv_sec() - {self}._tsTimeFrameStart.tv_sec() + ({self}._tsTimeFrameEnd.tv_nsec() - {self}._tsTimeFrameStart.tv_nsec()) * 1e-9"/>
			</method>

			<method name="nonlinerCorrected" type="double">
				<arg name="iPixel" type="uint32_t"/>
				<code lang="C++" body="double fRawValue = (double) ({self}.lu16Spetra[iPixel] ^ 0x2000); 
					ndarray&lt;double, 1&gt; corr = {xtc-config}.nonlinCorrect();
					return fRawValue / (
				     corr[0] + fRawValue * 
				    (corr[1] + fRawValue * 
				    (corr[2] + fRawValue * 
				    (corr[3] + fRawValue * 
				    (corr[4] + fRawValue * 
				    (corr[5] + fRawValue * 
				    (corr[6] + fRawValue * 
				     corr[7])))))));" />
			</method>

        </pstype>
        
        
	</package>
</psddl>
