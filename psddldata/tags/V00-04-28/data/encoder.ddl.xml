<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE psddl SYSTEM "psddl.dtd">

<psddl>
    <package name="Encoder">

        Package containing definitions for Encoder data types.


        <!-- ========================================================================= -->
        
        <pstype name="ConfigV1" version="1" type_id="Id_EncoderConfig">
        
            <tag name="config-type"/>
        
            <enum name="count_mode_type" base="uint32_t">
                <enum-const name="WRAP_FULL"/>
                <enum-const name="LIMIT"/>
                <enum-const name="HALT"/>
                <enum-const name="WRAP_PRESET"/>
                <enum-const name="COUNT_END"/>
            </enum>
        
            <enum name="quad_mode" base="uint32_t">
                <enum-const name="CLOCK_DIR"/>
                <enum-const name="X1"/>
                <enum-const name="X2"/>
                <enum-const name="X4"/>
                <enum-const name="QUAD_END"/>
            </enum>
        
            <attribute name="_chan_num" type="uint32_t" accessor="chan_num">
            </attribute>

            <attribute name="_count_mode" type="count_mode_type" accessor="count_mode">
            </attribute>

            <attribute name="_quadrature_mode" type="quad_mode" accessor="quadrature_mode">
            </attribute>

            <attribute name="_input_num" type="uint32_t" accessor="input_num">
            </attribute>

            <attribute name="_input_rising" type="uint32_t" accessor="input_rising">
            </attribute>

            <attribute name="_ticks_per_sec" type="uint32_t" accessor="ticks_per_sec">
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="ConfigV2" version="2" type_id="Id_EncoderConfig">
        
            <tag name="config-type"/>
        
            <enum name="count_mode_type" base="uint32_t">
                <enum-const name="WRAP_FULL"/>
                <enum-const name="LIMIT"/>
                <enum-const name="HALT"/>
                <enum-const name="WRAP_PRESET"/>
                <enum-const name="COUNT_END"/>
            </enum>
        
            <enum name="quad_mode" base="uint32_t">
                <enum-const name="CLOCK_DIR"/>
                <enum-const name="X1"/>
                <enum-const name="X2"/>
                <enum-const name="X4"/>
                <enum-const name="QUAD_END"/>
            </enum>
        
            <attribute name="_chan_mask" type="uint32_t" accessor="chan_mask">
            </attribute>

            <attribute name="_count_mode" type="count_mode_type" accessor="count_mode">
            </attribute>

            <attribute name="_quadrature_mode" type="quad_mode" accessor="quadrature_mode">
            </attribute>

            <attribute name="_input_num" type="uint32_t" accessor="input_num">
            </attribute>

            <attribute name="_input_rising" type="uint32_t" accessor="input_rising">
            </attribute>

            <attribute name="_ticks_per_sec" type="uint32_t" accessor="ticks_per_sec">
            </attribute>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="DataV1" version="1" type_id="Id_EncoderData">
        
            <attribute name="_33mhz_timestamp" type="uint32_t" accessor="timestamp">
            </attribute>

            <attribute name="_encoder_count" type="uint32_t" accessor="encoder_count">
            </attribute>

            <method name="value" type="int32_t">
                Lower 24 bits of encoder_count as signed integer value.
                <expr lang="C++" value="int({self}.encoder_count() &lt;&lt; 8)/256;"/>
            </method>

        </pstype>
        
        <!-- ========================================================================= -->
        
        <pstype name="DataV2" version="2" type_id="Id_EncoderData">
        
            <const name="NEncoders" value="3">
            Number of encoders.
            </const>
        
            <attribute name="_33mhz_timestamp" type="uint32_t" accessor="timestamp">
            </attribute>

            <attribute name="_encoder_count" type="uint32_t" shape="NEncoders" 
                    accessor="encoder_count" shape_method="encoder_count_shape">
            </attribute>

            <method name="value" type="int32_t">
                Lower 24 bits of encoder_count as signed integer value.
                <arg name="i" type="uint32_t"/>
                <expr lang="C++" value="int({self}.encoder_count()[i] &lt;&lt; 8)/256;"/>
            </method>

        </pstype>
        
    </package>
</psddl>
