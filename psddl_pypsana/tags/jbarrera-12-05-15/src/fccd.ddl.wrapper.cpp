
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/fccd.ddl.h" // inc_psana
#include "psddl_pypsana/fccd.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace FCCD {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n) class_<n>("Psana::FCCD::FccdConfigV1", no_init)\
    .def("outputMode", &FccdConfigV1_Wrapper::outputMode)\
    .def("width", &FccdConfigV1_Wrapper::width)\
    .def("height", &FccdConfigV1_Wrapper::height)\
    .def("trimmedWidth", &FccdConfigV1_Wrapper::trimmedWidth)\
    .def("trimmedHeight", &FccdConfigV1_Wrapper::trimmedHeight)\

  _CLASS(FccdConfigV1_Wrapper);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::FCCD::FccdConfigV2", no_init)\
    .def("outputMode", &FccdConfigV2_Wrapper::outputMode)\
    .def("ccdEnable", &FccdConfigV2_Wrapper::ccdEnable)\
    .def("focusMode", &FccdConfigV2_Wrapper::focusMode)\
    .def("exposureTime", &FccdConfigV2_Wrapper::exposureTime)\
    .def("dacVoltages", &FccdConfigV2_Wrapper::dacVoltages)\
    .def("waveforms", &FccdConfigV2_Wrapper::waveforms)\
    .def("width", &FccdConfigV2_Wrapper::width)\
    .def("height", &FccdConfigV2_Wrapper::height)\
    .def("trimmedWidth", &FccdConfigV2_Wrapper::trimmedWidth)\
    .def("trimmedHeight", &FccdConfigV2_Wrapper::trimmedHeight)\

  _CLASS(FccdConfigV2_Wrapper);
#undef _CLASS

}
} // namespace FCCD
} // namespace Psana
