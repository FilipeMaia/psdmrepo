
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/acqiris.ddl.h" // inc_psana
#include "psddl_pypsana/acqiris.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace Acqiris {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n) class_<n>("Psana::Acqiris::VertV1", no_init)\
    .def("fullScale", &VertV1_Wrapper::fullScale)\
    .def("offset", &VertV1_Wrapper::offset)\
    .def("coupling", &VertV1_Wrapper::coupling)\
    .def("bandwidth", &VertV1_Wrapper::bandwidth)\
    .def("slope", &VertV1_Wrapper::slope)\
    .def("_sizeof", &VertV1_Wrapper::_sizeof)\

  _CLASS(VertV1_Wrapper);
  _CLASS(VertV1);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::HorizV1", no_init)\
    .def("sampInterval", &HorizV1_Wrapper::sampInterval)\
    .def("delayTime", &HorizV1_Wrapper::delayTime)\
    .def("nbrSamples", &HorizV1_Wrapper::nbrSamples)\
    .def("nbrSegments", &HorizV1_Wrapper::nbrSegments)\
    .def("_sizeof", &HorizV1_Wrapper::_sizeof)\

  _CLASS(HorizV1_Wrapper);
  _CLASS(HorizV1);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TrigV1", no_init)\
    .def("coupling", &TrigV1_Wrapper::coupling)\
    .def("input", &TrigV1_Wrapper::input)\
    .def("slope", &TrigV1_Wrapper::slope)\
    .def("level", &TrigV1_Wrapper::level)\
    .def("_sizeof", &TrigV1_Wrapper::_sizeof)\

  _CLASS(TrigV1_Wrapper);
  _CLASS(TrigV1);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::ConfigV1", no_init)\
    .def("nbrConvertersPerChannel", &ConfigV1_Wrapper::nbrConvertersPerChannel)\
    .def("channelMask", &ConfigV1_Wrapper::channelMask)\
    .def("nbrBanks", &ConfigV1_Wrapper::nbrBanks)\
    .def("trig", &ConfigV1_Wrapper::trig)\
    .def("horiz", &ConfigV1_Wrapper::horiz)\
    .def("vert", &ConfigV1_Wrapper::vert)\
    .def("nbrChannels", &ConfigV1_Wrapper::nbrChannels)\

  _CLASS(ConfigV1_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV1);


#define _CLASS(n) class_<n>("Psana::Acqiris::TimestampV1", no_init)\
    .def("pos", &TimestampV1_Wrapper::pos)\
    .def("timeStampLo", &TimestampV1_Wrapper::timeStampLo)\
    .def("timeStampHi", &TimestampV1_Wrapper::timeStampHi)\
    .def("value", &TimestampV1_Wrapper::value)\
    .def("_sizeof", &TimestampV1_Wrapper::_sizeof)\

  _CLASS(TimestampV1_Wrapper);
  _CLASS(TimestampV1);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::DataDescV1Elem", no_init)\
    .def("nbrSamplesInSeg", &DataDescV1Elem_Wrapper::nbrSamplesInSeg)\
    .def("indexFirstPoint", &DataDescV1Elem_Wrapper::indexFirstPoint)\
    .def("nbrSegments", &DataDescV1Elem_Wrapper::nbrSegments)\
    .def("timestamp", &DataDescV1Elem_Wrapper::timestamp)\
    .def("waveforms", &DataDescV1Elem_Wrapper::waveforms)\

  _CLASS(DataDescV1Elem_Wrapper);
#undef _CLASS
  EVT_GETTER(DataDescV1Elem);


#define _CLASS(n) class_<n>("Psana::Acqiris::DataDescV1", no_init)\
    .def("data", &DataDescV1_Wrapper::data)\
    .def("data_shape", &DataDescV1_Wrapper::data_shape)\

  _CLASS(DataDescV1_Wrapper);
#undef _CLASS
  EVT_GETTER(DataDescV1);


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcChannel", no_init)\
    .def("_channel_int", &TdcChannel_Wrapper::_channel_int)\
    .def("_mode_int", &TdcChannel_Wrapper::_mode_int)\
    .def("slope", &TdcChannel_Wrapper::slope)\
    .def("mode", &TdcChannel_Wrapper::mode)\
    .def("level", &TdcChannel_Wrapper::level)\
    .def("channel", &TdcChannel_Wrapper::channel)\
    .def("_sizeof", &TdcChannel_Wrapper::_sizeof)\

  _CLASS(TdcChannel_Wrapper);
  _CLASS(TdcChannel);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcAuxIO", no_init)\
    .def("channel_int", &TdcAuxIO_Wrapper::channel_int)\
    .def("signal_int", &TdcAuxIO_Wrapper::signal_int)\
    .def("qualifier_int", &TdcAuxIO_Wrapper::qualifier_int)\
    .def("channel", &TdcAuxIO_Wrapper::channel)\
    .def("mode", &TdcAuxIO_Wrapper::mode)\
    .def("term", &TdcAuxIO_Wrapper::term)\
    .def("_sizeof", &TdcAuxIO_Wrapper::_sizeof)\

  _CLASS(TdcAuxIO_Wrapper);
  _CLASS(TdcAuxIO);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcVetoIO", no_init)\
    .def("signal_int", &TdcVetoIO_Wrapper::signal_int)\
    .def("qualifier_int", &TdcVetoIO_Wrapper::qualifier_int)\
    .def("channel", &TdcVetoIO_Wrapper::channel)\
    .def("mode", &TdcVetoIO_Wrapper::mode)\
    .def("term", &TdcVetoIO_Wrapper::term)\
    .def("_sizeof", &TdcVetoIO_Wrapper::_sizeof)\

  _CLASS(TdcVetoIO_Wrapper);
  _CLASS(TdcVetoIO);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcConfigV1", no_init)\
    .def("channels", &TdcConfigV1_Wrapper::channels)\
    .def("auxio", &TdcConfigV1_Wrapper::auxio)\
    .def("veto", &TdcConfigV1_Wrapper::veto)\

  _CLASS(TdcConfigV1_Wrapper);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcDataV1_Item", no_init)\
    .def("value", &TdcDataV1_Item_Wrapper::value)\
    .def("bf_val_", &TdcDataV1_Item_Wrapper::bf_val_)\
    .def("source", &TdcDataV1_Item_Wrapper::source)\
    .def("bf_ofv_", &TdcDataV1_Item_Wrapper::bf_ofv_)\
    .def("_sizeof", &TdcDataV1_Item_Wrapper::_sizeof)\

  _CLASS(TdcDataV1_Item_Wrapper);
  _CLASS(TdcDataV1_Item);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcDataV1Common", no_init)\
    .def("nhits", &TdcDataV1Common_Wrapper::nhits)\
    .def("overflow", &TdcDataV1Common_Wrapper::overflow)\
    .def("_sizeof", &TdcDataV1Common_Wrapper::_sizeof)\

  _CLASS(TdcDataV1Common_Wrapper);
  _CLASS(TdcDataV1Common);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcDataV1Channel", no_init)\
    .def("ticks", &TdcDataV1Channel_Wrapper::ticks)\
    .def("overflow", &TdcDataV1Channel_Wrapper::overflow)\
    .def("time", &TdcDataV1Channel_Wrapper::time)\
    .def("_sizeof", &TdcDataV1Channel_Wrapper::_sizeof)\

  _CLASS(TdcDataV1Channel_Wrapper);
  _CLASS(TdcDataV1Channel);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcDataV1Marker", no_init)\
    .def("type", &TdcDataV1Marker_Wrapper::type)\
    .def("_sizeof", &TdcDataV1Marker_Wrapper::_sizeof)\

  _CLASS(TdcDataV1Marker_Wrapper);
  _CLASS(TdcDataV1Marker);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::Acqiris::TdcDataV1", no_init)\
    .def("data", &TdcDataV1_Wrapper::data)\

  _CLASS(TdcDataV1_Wrapper);
#undef _CLASS

}
} // namespace Acqiris
} // namespace Psana
