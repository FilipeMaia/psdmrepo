
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/pnccd.ddl.h" // inc_psana
#include "psddl_pypsana/pnccd.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace PNCCD {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n, policy) class_<n>("Psana::PNCCD::ConfigV1", no_init)\
    .def("numLinks", &n::numLinks)\
    .def("payloadSizePerLink", &n::payloadSizePerLink)\

  _CLASS(ConfigV1_Wrapper, return_value_policy<return_by_value>());
  std_vector_class_(ConfigV1_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV1);


#define _CLASS(n, policy) class_<n>("Psana::PNCCD::ConfigV2", no_init)\
    .def("numLinks", &n::numLinks)\
    .def("payloadSizePerLink", &n::payloadSizePerLink)\
    .def("numChannels", &n::numChannels)\
    .def("numRows", &n::numRows)\
    .def("numSubmoduleChannels", &n::numSubmoduleChannels)\
    .def("numSubmoduleRows", &n::numSubmoduleRows)\
    .def("numSubmodules", &n::numSubmodules)\
    .def("camexMagic", &n::camexMagic)\
    .def("info", &n::info)\
    .def("timingFName", &n::timingFName)\
    .def("info_shape", &n::info_shape)\
    .def("timingFName_shape", &n::timingFName_shape)\

  _CLASS(ConfigV2_Wrapper, return_value_policy<return_by_value>());
  std_vector_class_(ConfigV2_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV2);


#define _CLASS(n, policy) class_<n>("Psana::PNCCD::FrameV1", no_init)\
    .def("specialWord", &n::specialWord)\
    .def("frameNumber", &n::frameNumber)\
    .def("timeStampHi", &n::timeStampHi)\
    .def("timeStampLo", &n::timeStampLo)\
    .def("data", &n::data)\

  _CLASS(FrameV1_Wrapper, return_value_policy<return_by_value>());
  std_vector_class_(FrameV1_Wrapper);
#undef _CLASS

}
} // namespace PNCCD
} // namespace Psana
