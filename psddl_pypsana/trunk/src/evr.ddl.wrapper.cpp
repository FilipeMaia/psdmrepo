
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/evr.ddl.h" // inc_psana
#include "psddl_pypsana/evr.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace EvrData {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n) class_<n>("Psana::EvrData::PulseConfig", no_init)\
    .def("pulse", &PulseConfig_Wrapper::pulse)\
    .def("_input_control_value", &PulseConfig_Wrapper::_input_control_value)\
    .def("bf_trigger", &PulseConfig_Wrapper::bf_trigger)\
    .def("bf_set", &PulseConfig_Wrapper::bf_set)\
    .def("bf_clear", &PulseConfig_Wrapper::bf_clear)\
    .def("_output_control_value", &PulseConfig_Wrapper::_output_control_value)\
    .def("polarity", &PulseConfig_Wrapper::polarity)\
    .def("map_set_enable", &PulseConfig_Wrapper::map_set_enable)\
    .def("map_reset_enable", &PulseConfig_Wrapper::map_reset_enable)\
    .def("map_trigger_enable", &PulseConfig_Wrapper::map_trigger_enable)\
    .def("prescale", &PulseConfig_Wrapper::prescale)\
    .def("delay", &PulseConfig_Wrapper::delay)\
    .def("width", &PulseConfig_Wrapper::width)\
    .def("trigger", &PulseConfig_Wrapper::trigger)\
    .def("set", &PulseConfig_Wrapper::set)\
    .def("clear", &PulseConfig_Wrapper::clear)\
    .def("_sizeof", &PulseConfig_Wrapper::_sizeof)\

  _CLASS(PulseConfig_Wrapper);
  _CLASS(PulseConfig);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::PulseConfigV3", no_init)\
    .def("pulseId", &PulseConfigV3_Wrapper::pulseId)\
    .def("polarity", &PulseConfigV3_Wrapper::polarity)\
    .def("prescale", &PulseConfigV3_Wrapper::prescale)\
    .def("delay", &PulseConfigV3_Wrapper::delay)\
    .def("width", &PulseConfigV3_Wrapper::width)\
    .def("_sizeof", &PulseConfigV3_Wrapper::_sizeof)\

  _CLASS(PulseConfigV3_Wrapper);
  _CLASS(PulseConfigV3);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::EventCodeV3", no_init)\
    .def("code", &EventCodeV3_Wrapper::code)\
    .def("_u16MaskEventAttr_value", &EventCodeV3_Wrapper::_u16MaskEventAttr_value)\
    .def("isReadout", &EventCodeV3_Wrapper::isReadout)\
    .def("isTerminator", &EventCodeV3_Wrapper::isTerminator)\
    .def("maskTrigger", &EventCodeV3_Wrapper::maskTrigger)\
    .def("maskSet", &EventCodeV3_Wrapper::maskSet)\
    .def("maskClear", &EventCodeV3_Wrapper::maskClear)\
    .def("_sizeof", &EventCodeV3_Wrapper::_sizeof)\

  _CLASS(EventCodeV3_Wrapper);
  _CLASS(EventCodeV3);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::EventCodeV4", no_init)\
    .def("code", &EventCodeV4_Wrapper::code)\
    .def("_u16MaskEventAttr_value", &EventCodeV4_Wrapper::_u16MaskEventAttr_value)\
    .def("isReadout", &EventCodeV4_Wrapper::isReadout)\
    .def("isTerminator", &EventCodeV4_Wrapper::isTerminator)\
    .def("reportDelay", &EventCodeV4_Wrapper::reportDelay)\
    .def("reportWidth", &EventCodeV4_Wrapper::reportWidth)\
    .def("maskTrigger", &EventCodeV4_Wrapper::maskTrigger)\
    .def("maskSet", &EventCodeV4_Wrapper::maskSet)\
    .def("maskClear", &EventCodeV4_Wrapper::maskClear)\
    .def("_sizeof", &EventCodeV4_Wrapper::_sizeof)\

  _CLASS(EventCodeV4_Wrapper);
  _CLASS(EventCodeV4);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::EventCodeV5", no_init)\
    .def("code", &EventCodeV5_Wrapper::code)\
    .def("isReadout", &EventCodeV5_Wrapper::isReadout)\
    .def("isTerminator", &EventCodeV5_Wrapper::isTerminator)\
    .def("isLatch", &EventCodeV5_Wrapper::isLatch)\
    .def("reportDelay", &EventCodeV5_Wrapper::reportDelay)\
    .def("reportWidth", &EventCodeV5_Wrapper::reportWidth)\
    .def("maskTrigger", &EventCodeV5_Wrapper::maskTrigger)\
    .def("maskSet", &EventCodeV5_Wrapper::maskSet)\
    .def("maskClear", &EventCodeV5_Wrapper::maskClear)\
    .def("desc", &EventCodeV5_Wrapper::desc)\
    .def("_sizeof", &EventCodeV5_Wrapper::_sizeof)\
    .def("desc_shape", &EventCodeV5_Wrapper::desc_shape)\

  _CLASS(EventCodeV5_Wrapper);
  _CLASS(EventCodeV5);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::OutputMap", no_init)\
    .def("value", &OutputMap_Wrapper::value)\
    .def("source", &OutputMap_Wrapper::source)\
    .def("source_id", &OutputMap_Wrapper::source_id)\
    .def("conn", &OutputMap_Wrapper::conn)\
    .def("conn_id", &OutputMap_Wrapper::conn_id)\
    .def("_sizeof", &OutputMap_Wrapper::_sizeof)\

  _CLASS(OutputMap_Wrapper);
  _CLASS(OutputMap);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::OutputMapV2", no_init)\
    .def("value", &OutputMapV2_Wrapper::value)\
    .def("source", &OutputMapV2_Wrapper::source)\
    .def("source_id", &OutputMapV2_Wrapper::source_id)\
    .def("conn", &OutputMapV2_Wrapper::conn)\
    .def("conn_id", &OutputMapV2_Wrapper::conn_id)\
    .def("module", &OutputMapV2_Wrapper::module)\
    .def("_sizeof", &OutputMapV2_Wrapper::_sizeof)\

  _CLASS(OutputMapV2_Wrapper);
  _CLASS(OutputMapV2);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV1", no_init)\
    .def("npulses", &ConfigV1_Wrapper::npulses)\
    .def("noutputs", &ConfigV1_Wrapper::noutputs)\
    .def("pulses", &ConfigV1_Wrapper::pulses)\
    .def("output_maps", &ConfigV1_Wrapper::output_maps)\

  _CLASS(ConfigV1_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV1);


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV2", no_init)\
    .def("opcode", &ConfigV2_Wrapper::opcode)\
    .def("npulses", &ConfigV2_Wrapper::npulses)\
    .def("noutputs", &ConfigV2_Wrapper::noutputs)\
    .def("pulses", &ConfigV2_Wrapper::pulses)\
    .def("output_maps", &ConfigV2_Wrapper::output_maps)\
    .def("beam", &ConfigV2_Wrapper::beam)\
    .def("rate", &ConfigV2_Wrapper::rate)\

  _CLASS(ConfigV2_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV2);


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV3", no_init)\
    .def("neventcodes", &ConfigV3_Wrapper::neventcodes)\
    .def("npulses", &ConfigV3_Wrapper::npulses)\
    .def("noutputs", &ConfigV3_Wrapper::noutputs)\
    .def("eventcodes", &ConfigV3_Wrapper::eventcodes)\
    .def("pulses", &ConfigV3_Wrapper::pulses)\
    .def("output_maps", &ConfigV3_Wrapper::output_maps)\

  _CLASS(ConfigV3_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV3);


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV4", no_init)\
    .def("neventcodes", &ConfigV4_Wrapper::neventcodes)\
    .def("npulses", &ConfigV4_Wrapper::npulses)\
    .def("noutputs", &ConfigV4_Wrapper::noutputs)\
    .def("eventcodes", &ConfigV4_Wrapper::eventcodes)\
    .def("pulses", &ConfigV4_Wrapper::pulses)\
    .def("output_maps", &ConfigV4_Wrapper::output_maps)\

  _CLASS(ConfigV4_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV4);


#define _CLASS(n) class_<n>("Psana::EvrData::SequencerEntry", no_init)\
    .def("delay", &SequencerEntry_Wrapper::delay)\
    .def("eventcode", &SequencerEntry_Wrapper::eventcode)\
    .def("_sizeof", &SequencerEntry_Wrapper::_sizeof)\

  _CLASS(SequencerEntry_Wrapper);
  _CLASS(SequencerEntry);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::SequencerConfigV1", no_init)\
    .def("sync_source", &SequencerConfigV1_Wrapper::sync_source)\
    .def("beam_source", &SequencerConfigV1_Wrapper::beam_source)\
    .def("length", &SequencerConfigV1_Wrapper::length)\
    .def("cycles", &SequencerConfigV1_Wrapper::cycles)\
    .def("entries", &SequencerConfigV1_Wrapper::entries)\

  _CLASS(SequencerConfigV1_Wrapper);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV5", no_init)\
    .def("neventcodes", &ConfigV5_Wrapper::neventcodes)\
    .def("npulses", &ConfigV5_Wrapper::npulses)\
    .def("noutputs", &ConfigV5_Wrapper::noutputs)\
    .def("eventcodes", &ConfigV5_Wrapper::eventcodes)\
    .def("pulses", &ConfigV5_Wrapper::pulses)\
    .def("output_maps", &ConfigV5_Wrapper::output_maps)\
    .def("seq_config", &ConfigV5_Wrapper::seq_config)\

  _CLASS(ConfigV5_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV5);


#define _CLASS(n) class_<n>("Psana::EvrData::ConfigV6", no_init)\
    .def("neventcodes", &ConfigV6_Wrapper::neventcodes)\
    .def("npulses", &ConfigV6_Wrapper::npulses)\
    .def("noutputs", &ConfigV6_Wrapper::noutputs)\
    .def("eventcodes", &ConfigV6_Wrapper::eventcodes)\
    .def("pulses", &ConfigV6_Wrapper::pulses)\
    .def("output_maps", &ConfigV6_Wrapper::output_maps)\
    .def("seq_config", &ConfigV6_Wrapper::seq_config)\

  _CLASS(ConfigV6_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV6);


#define _CLASS(n) class_<n>("Psana::EvrData::FIFOEvent", no_init)\
    .def("timestampHigh", &FIFOEvent_Wrapper::timestampHigh)\
    .def("timestampLow", &FIFOEvent_Wrapper::timestampLow)\
    .def("eventCode", &FIFOEvent_Wrapper::eventCode)\
    .def("_sizeof", &FIFOEvent_Wrapper::_sizeof)\

  _CLASS(FIFOEvent_Wrapper);
  _CLASS(FIFOEvent);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::DataV3", no_init)\
    .def("numFifoEvents", &DataV3_Wrapper::numFifoEvents)\
    .def("fifoEvents", &DataV3_Wrapper::fifoEvents)\

  _CLASS(DataV3_Wrapper);
#undef _CLASS
  EVT_GETTER(DataV3);


#define _CLASS(n) class_<n>("Psana::EvrData::IOChannel", no_init)\
    .def("name", &IOChannel_Wrapper::name)\
    .def("ninfo", &IOChannel_Wrapper::ninfo)\
    .def("infos", &IOChannel_Wrapper::infos)\
    .def("_sizeof", &IOChannel_Wrapper::_sizeof)\
    .def("name_shape", &IOChannel_Wrapper::name_shape)\

  _CLASS(IOChannel_Wrapper);
  _CLASS(IOChannel);
#undef _CLASS


#define _CLASS(n) class_<n>("Psana::EvrData::IOConfigV1", no_init)\
    .def("nchannels", &IOConfigV1_Wrapper::nchannels)\
    .def("channels", &IOConfigV1_Wrapper::channels)\
    .def("conn", &IOConfigV1_Wrapper::conn)\

  _CLASS(IOConfigV1_Wrapper);
#undef _CLASS

}
} // namespace EvrData
} // namespace Psana
