
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/timepix.ddl.h" // inc_psana
#include "psddl_pypsana/timepix.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace Timepix {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n) class_<n>("Psana::Timepix::ConfigV1", no_init)\
    .def("readoutSpeed", &ConfigV1_Wrapper::readoutSpeed)\
    .def("triggerMode", &ConfigV1_Wrapper::triggerMode)\
    .def("shutterTimeout", &ConfigV1_Wrapper::shutterTimeout)\
    .def("dac0Ikrum", &ConfigV1_Wrapper::dac0Ikrum)\
    .def("dac0Disc", &ConfigV1_Wrapper::dac0Disc)\
    .def("dac0Preamp", &ConfigV1_Wrapper::dac0Preamp)\
    .def("dac0BufAnalogA", &ConfigV1_Wrapper::dac0BufAnalogA)\
    .def("dac0BufAnalogB", &ConfigV1_Wrapper::dac0BufAnalogB)\
    .def("dac0Hist", &ConfigV1_Wrapper::dac0Hist)\
    .def("dac0ThlFine", &ConfigV1_Wrapper::dac0ThlFine)\
    .def("dac0ThlCourse", &ConfigV1_Wrapper::dac0ThlCourse)\
    .def("dac0Vcas", &ConfigV1_Wrapper::dac0Vcas)\
    .def("dac0Fbk", &ConfigV1_Wrapper::dac0Fbk)\
    .def("dac0Gnd", &ConfigV1_Wrapper::dac0Gnd)\
    .def("dac0Ths", &ConfigV1_Wrapper::dac0Ths)\
    .def("dac0BiasLvds", &ConfigV1_Wrapper::dac0BiasLvds)\
    .def("dac0RefLvds", &ConfigV1_Wrapper::dac0RefLvds)\
    .def("dac1Ikrum", &ConfigV1_Wrapper::dac1Ikrum)\
    .def("dac1Disc", &ConfigV1_Wrapper::dac1Disc)\
    .def("dac1Preamp", &ConfigV1_Wrapper::dac1Preamp)\
    .def("dac1BufAnalogA", &ConfigV1_Wrapper::dac1BufAnalogA)\
    .def("dac1BufAnalogB", &ConfigV1_Wrapper::dac1BufAnalogB)\
    .def("dac1Hist", &ConfigV1_Wrapper::dac1Hist)\
    .def("dac1ThlFine", &ConfigV1_Wrapper::dac1ThlFine)\
    .def("dac1ThlCourse", &ConfigV1_Wrapper::dac1ThlCourse)\
    .def("dac1Vcas", &ConfigV1_Wrapper::dac1Vcas)\
    .def("dac1Fbk", &ConfigV1_Wrapper::dac1Fbk)\
    .def("dac1Gnd", &ConfigV1_Wrapper::dac1Gnd)\
    .def("dac1Ths", &ConfigV1_Wrapper::dac1Ths)\
    .def("dac1BiasLvds", &ConfigV1_Wrapper::dac1BiasLvds)\
    .def("dac1RefLvds", &ConfigV1_Wrapper::dac1RefLvds)\
    .def("dac2Ikrum", &ConfigV1_Wrapper::dac2Ikrum)\
    .def("dac2Disc", &ConfigV1_Wrapper::dac2Disc)\
    .def("dac2Preamp", &ConfigV1_Wrapper::dac2Preamp)\
    .def("dac2BufAnalogA", &ConfigV1_Wrapper::dac2BufAnalogA)\
    .def("dac2BufAnalogB", &ConfigV1_Wrapper::dac2BufAnalogB)\
    .def("dac2Hist", &ConfigV1_Wrapper::dac2Hist)\
    .def("dac2ThlFine", &ConfigV1_Wrapper::dac2ThlFine)\
    .def("dac2ThlCourse", &ConfigV1_Wrapper::dac2ThlCourse)\
    .def("dac2Vcas", &ConfigV1_Wrapper::dac2Vcas)\
    .def("dac2Fbk", &ConfigV1_Wrapper::dac2Fbk)\
    .def("dac2Gnd", &ConfigV1_Wrapper::dac2Gnd)\
    .def("dac2Ths", &ConfigV1_Wrapper::dac2Ths)\
    .def("dac2BiasLvds", &ConfigV1_Wrapper::dac2BiasLvds)\
    .def("dac2RefLvds", &ConfigV1_Wrapper::dac2RefLvds)\
    .def("dac3Ikrum", &ConfigV1_Wrapper::dac3Ikrum)\
    .def("dac3Disc", &ConfigV1_Wrapper::dac3Disc)\
    .def("dac3Preamp", &ConfigV1_Wrapper::dac3Preamp)\
    .def("dac3BufAnalogA", &ConfigV1_Wrapper::dac3BufAnalogA)\
    .def("dac3BufAnalogB", &ConfigV1_Wrapper::dac3BufAnalogB)\
    .def("dac3Hist", &ConfigV1_Wrapper::dac3Hist)\
    .def("dac3ThlFine", &ConfigV1_Wrapper::dac3ThlFine)\
    .def("dac3ThlCourse", &ConfigV1_Wrapper::dac3ThlCourse)\
    .def("dac3Vcas", &ConfigV1_Wrapper::dac3Vcas)\
    .def("dac3Fbk", &ConfigV1_Wrapper::dac3Fbk)\
    .def("dac3Gnd", &ConfigV1_Wrapper::dac3Gnd)\
    .def("dac3Ths", &ConfigV1_Wrapper::dac3Ths)\
    .def("dac3BiasLvds", &ConfigV1_Wrapper::dac3BiasLvds)\
    .def("dac3RefLvds", &ConfigV1_Wrapper::dac3RefLvds)\

  _CLASS(ConfigV1_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV1);


#define _CLASS(n) class_<n>("Psana::Timepix::ConfigV2", no_init)\
    .def("readoutSpeed", &ConfigV2_Wrapper::readoutSpeed)\
    .def("triggerMode", &ConfigV2_Wrapper::triggerMode)\
    .def("timepixSpeed", &ConfigV2_Wrapper::timepixSpeed)\
    .def("dac0Ikrum", &ConfigV2_Wrapper::dac0Ikrum)\
    .def("dac0Disc", &ConfigV2_Wrapper::dac0Disc)\
    .def("dac0Preamp", &ConfigV2_Wrapper::dac0Preamp)\
    .def("dac0BufAnalogA", &ConfigV2_Wrapper::dac0BufAnalogA)\
    .def("dac0BufAnalogB", &ConfigV2_Wrapper::dac0BufAnalogB)\
    .def("dac0Hist", &ConfigV2_Wrapper::dac0Hist)\
    .def("dac0ThlFine", &ConfigV2_Wrapper::dac0ThlFine)\
    .def("dac0ThlCourse", &ConfigV2_Wrapper::dac0ThlCourse)\
    .def("dac0Vcas", &ConfigV2_Wrapper::dac0Vcas)\
    .def("dac0Fbk", &ConfigV2_Wrapper::dac0Fbk)\
    .def("dac0Gnd", &ConfigV2_Wrapper::dac0Gnd)\
    .def("dac0Ths", &ConfigV2_Wrapper::dac0Ths)\
    .def("dac0BiasLvds", &ConfigV2_Wrapper::dac0BiasLvds)\
    .def("dac0RefLvds", &ConfigV2_Wrapper::dac0RefLvds)\
    .def("dac1Ikrum", &ConfigV2_Wrapper::dac1Ikrum)\
    .def("dac1Disc", &ConfigV2_Wrapper::dac1Disc)\
    .def("dac1Preamp", &ConfigV2_Wrapper::dac1Preamp)\
    .def("dac1BufAnalogA", &ConfigV2_Wrapper::dac1BufAnalogA)\
    .def("dac1BufAnalogB", &ConfigV2_Wrapper::dac1BufAnalogB)\
    .def("dac1Hist", &ConfigV2_Wrapper::dac1Hist)\
    .def("dac1ThlFine", &ConfigV2_Wrapper::dac1ThlFine)\
    .def("dac1ThlCourse", &ConfigV2_Wrapper::dac1ThlCourse)\
    .def("dac1Vcas", &ConfigV2_Wrapper::dac1Vcas)\
    .def("dac1Fbk", &ConfigV2_Wrapper::dac1Fbk)\
    .def("dac1Gnd", &ConfigV2_Wrapper::dac1Gnd)\
    .def("dac1Ths", &ConfigV2_Wrapper::dac1Ths)\
    .def("dac1BiasLvds", &ConfigV2_Wrapper::dac1BiasLvds)\
    .def("dac1RefLvds", &ConfigV2_Wrapper::dac1RefLvds)\
    .def("dac2Ikrum", &ConfigV2_Wrapper::dac2Ikrum)\
    .def("dac2Disc", &ConfigV2_Wrapper::dac2Disc)\
    .def("dac2Preamp", &ConfigV2_Wrapper::dac2Preamp)\
    .def("dac2BufAnalogA", &ConfigV2_Wrapper::dac2BufAnalogA)\
    .def("dac2BufAnalogB", &ConfigV2_Wrapper::dac2BufAnalogB)\
    .def("dac2Hist", &ConfigV2_Wrapper::dac2Hist)\
    .def("dac2ThlFine", &ConfigV2_Wrapper::dac2ThlFine)\
    .def("dac2ThlCourse", &ConfigV2_Wrapper::dac2ThlCourse)\
    .def("dac2Vcas", &ConfigV2_Wrapper::dac2Vcas)\
    .def("dac2Fbk", &ConfigV2_Wrapper::dac2Fbk)\
    .def("dac2Gnd", &ConfigV2_Wrapper::dac2Gnd)\
    .def("dac2Ths", &ConfigV2_Wrapper::dac2Ths)\
    .def("dac2BiasLvds", &ConfigV2_Wrapper::dac2BiasLvds)\
    .def("dac2RefLvds", &ConfigV2_Wrapper::dac2RefLvds)\
    .def("dac3Ikrum", &ConfigV2_Wrapper::dac3Ikrum)\
    .def("dac3Disc", &ConfigV2_Wrapper::dac3Disc)\
    .def("dac3Preamp", &ConfigV2_Wrapper::dac3Preamp)\
    .def("dac3BufAnalogA", &ConfigV2_Wrapper::dac3BufAnalogA)\
    .def("dac3BufAnalogB", &ConfigV2_Wrapper::dac3BufAnalogB)\
    .def("dac3Hist", &ConfigV2_Wrapper::dac3Hist)\
    .def("dac3ThlFine", &ConfigV2_Wrapper::dac3ThlFine)\
    .def("dac3ThlCourse", &ConfigV2_Wrapper::dac3ThlCourse)\
    .def("dac3Vcas", &ConfigV2_Wrapper::dac3Vcas)\
    .def("dac3Fbk", &ConfigV2_Wrapper::dac3Fbk)\
    .def("dac3Gnd", &ConfigV2_Wrapper::dac3Gnd)\
    .def("dac3Ths", &ConfigV2_Wrapper::dac3Ths)\
    .def("dac3BiasLvds", &ConfigV2_Wrapper::dac3BiasLvds)\
    .def("dac3RefLvds", &ConfigV2_Wrapper::dac3RefLvds)\
    .def("driverVersion", &ConfigV2_Wrapper::driverVersion)\
    .def("firmwareVersion", &ConfigV2_Wrapper::firmwareVersion)\
    .def("pixelThreshSize", &ConfigV2_Wrapper::pixelThreshSize)\
    .def("pixelThresh", &ConfigV2_Wrapper::pixelThresh)\
    .def("chip0Name", &ConfigV2_Wrapper::chip0Name)\
    .def("chip1Name", &ConfigV2_Wrapper::chip1Name)\
    .def("chip2Name", &ConfigV2_Wrapper::chip2Name)\
    .def("chip3Name", &ConfigV2_Wrapper::chip3Name)\
    .def("chip0ID", &ConfigV2_Wrapper::chip0ID)\
    .def("chip1ID", &ConfigV2_Wrapper::chip1ID)\
    .def("chip2ID", &ConfigV2_Wrapper::chip2ID)\
    .def("chip3ID", &ConfigV2_Wrapper::chip3ID)\
    .def("chipCount", &ConfigV2_Wrapper::chipCount)\

  _CLASS(ConfigV2_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV2);


#define _CLASS(n) class_<n>("Psana::Timepix::DataV1", no_init)\
    .def("timestamp", &DataV1_Wrapper::timestamp)\
    .def("frameCounter", &DataV1_Wrapper::frameCounter)\
    .def("lostRows", &DataV1_Wrapper::lostRows)\
    .def("data", &DataV1_Wrapper::data)\
    .def("width", &DataV1_Wrapper::width)\
    .def("height", &DataV1_Wrapper::height)\
    .def("depth", &DataV1_Wrapper::depth)\
    .def("depth_bytes", &DataV1_Wrapper::depth_bytes)\

  _CLASS(DataV1_Wrapper);
#undef _CLASS
  EVT_GETTER(DataV1);


#define _CLASS(n) class_<n>("Psana::Timepix::DataV2", no_init)\
    .def("width", &DataV2_Wrapper::width)\
    .def("height", &DataV2_Wrapper::height)\
    .def("timestamp", &DataV2_Wrapper::timestamp)\
    .def("frameCounter", &DataV2_Wrapper::frameCounter)\
    .def("lostRows", &DataV2_Wrapper::lostRows)\
    .def("data", &DataV2_Wrapper::data)\
    .def("depth", &DataV2_Wrapper::depth)\
    .def("depth_bytes", &DataV2_Wrapper::depth_bytes)\

  _CLASS(DataV2_Wrapper);
#undef _CLASS
  EVT_GETTER(DataV2);

}
} // namespace Timepix
} // namespace Psana
