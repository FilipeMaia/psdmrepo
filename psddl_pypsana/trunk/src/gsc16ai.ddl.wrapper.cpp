
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/gsc16ai.ddl.h" // inc_psana
#include "psddl_pypsana/gsc16ai.ddl.wrapper.h" // inc_pypsana
namespace Psana {
namespace Gsc16ai {
using namespace boost::python;

void createWrappers() {

#define _CLASS(n) class_<n>("Psana::Gsc16ai::ConfigV1", no_init)\
    .def("voltageRange", &ConfigV1_Wrapper::voltageRange)\
    .def("firstChan", &ConfigV1_Wrapper::firstChan)\
    .def("lastChan", &ConfigV1_Wrapper::lastChan)\
    .def("inputMode", &ConfigV1_Wrapper::inputMode)\
    .def("triggerMode", &ConfigV1_Wrapper::triggerMode)\
    .def("dataFormat", &ConfigV1_Wrapper::dataFormat)\
    .def("fps", &ConfigV1_Wrapper::fps)\
    .def("autocalibEnable", &ConfigV1_Wrapper::autocalibEnable)\
    .def("timeTagEnable", &ConfigV1_Wrapper::timeTagEnable)\
    .def("numChannels", &ConfigV1_Wrapper::numChannels)\

  _CLASS(ConfigV1_Wrapper);
#undef _CLASS
  ENV_GETTER(ConfigV1);


#define _CLASS(n) class_<n>("Psana::Gsc16ai::DataV1", no_init)\
    .def("timestamp", &DataV1_Wrapper::timestamp)\
    .def("channelValue", &DataV1_Wrapper::channelValue)\

  _CLASS(DataV1_Wrapper);
#undef _CLASS
  EVT_GETTER(DataV1);

}
} // namespace Gsc16ai
} // namespace Psana
