/* Do not edit this file, as it is auto-generated */

#include <psddl_python/andor.ddl.wrapper.h> // inc_python
#include <cstddef>

namespace psddl_python {
namespace Andor {

void createWrappers(PyObject* module) {
  _import_array();
  PyObject* submodule = Py_InitModule3( "psana.Andor", 0, "The Python wrapper module for Andor types");
  Py_INCREF(submodule);
  PyModule_AddObject(module, "Andor", submodule);
  scope mod = object(handle<>(borrowed(submodule)));

#define _CLASS(n, NAME, policy) class_<n>(NAME, no_init)\
    .def("width", &n::width)\
    .def("height", &n::height)\
    .def("orgX", &n::orgX)\
    .def("orgY", &n::orgY)\
    .def("binX", &n::binX)\
    .def("binY", &n::binY)\
    .def("exposureTime", &n::exposureTime)\
    .def("coolingTemp", &n::coolingTemp)\
    .def("fanMode", &n::fanMode)\
    .def("baselineClamp", &n::baselineClamp)\
    .def("highCapacity", &n::highCapacity)\
    .def("gainIndex", &n::gainIndex)\
    .def("readoutSpeedIndex", &n::readoutSpeedIndex)\
    .def("exposureEventCode", &n::exposureEventCode)\
    .def("numDelayShots", &n::numDelayShots)\
    .def("frameSize", &n::frameSize)\
    .def("numPixelsX", &n::numPixelsX)\
    .def("numPixelsY", &n::numPixelsY)\
    .def("numPixels", &n::numPixels)\

  _CLASS(psddl_python::Andor::ConfigV1_Wrapper, "ConfigV1", return_value_policy<return_by_value>());
  std_vector_class_(ConfigV1_Wrapper);
#undef _CLASS
  ADD_GETTER(ConfigV1);


#define _CLASS(n, NAME, policy) class_<n>(NAME, no_init)\
    .def("shotIdStart", &n::shotIdStart)\
    .def("readoutTime", &n::readoutTime)\
    .def("temperature", &n::temperature)\
    .def("data", &n::data)\

  _CLASS(psddl_python::Andor::FrameV1_Wrapper, "FrameV1", return_value_policy<return_by_value>());
  std_vector_class_(FrameV1_Wrapper);
#undef _CLASS
  ADD_GETTER(FrameV1);


} // createWrappers()
} // namespace Andor
} // namespace psddl_python
