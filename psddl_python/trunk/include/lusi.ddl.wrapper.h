/* Do not edit this file, as it is auto-generated */

#ifndef PSDDL_PYTHON_LUSI_DDL_WRAPPER_H
#define PSDDL_PYTHON_LUSI_DDL_WRAPPER_H 1

#include <vector>
#include "psddl_python/DdlWrapper.h"
#include "psddl_python/Converter.h"
#include "ndarray/ndarray.h"
#include "pdsdata/xtc/TypeId.hh"
#include "psddl_psana/lusi.ddl.h" // inc_psana

namespace psddl_python {
namespace Lusi {

using namespace boost::python;
using boost::python::api::object;
using boost::shared_ptr;
using std::vector;

void createWrappers(PyObject* module);

class IpmFexConfigV1_Wrapper {
  shared_ptr<const Psana::Lusi::IpmFexConfigV1> m_obj;
public:
  enum { TypeId = Pds::TypeId::Id_IpmFexConfig };
  enum { Version = 1 };
  IpmFexConfigV1_Wrapper(const shared_ptr<const Psana::Lusi::IpmFexConfigV1>& obj) : m_obj(obj) {}
  boost::python::list diode() const { return detail::ndToList(m_obj->diode()); }
  float xscale() const { return m_obj->xscale(); }
  float yscale() const { return m_obj->yscale(); }
};

class IpmFexConfigV2_Wrapper {
  shared_ptr<const Psana::Lusi::IpmFexConfigV2> m_obj;
public:
  enum { TypeId = Pds::TypeId::Id_IpmFexConfig };
  enum { Version = 2 };
  IpmFexConfigV2_Wrapper(const shared_ptr<const Psana::Lusi::IpmFexConfigV2>& obj) : m_obj(obj) {}
  boost::python::list diode() const { return detail::ndToList(m_obj->diode()); }
  float xscale() const { return m_obj->xscale(); }
  float yscale() const { return m_obj->yscale(); }
};
} // namespace Lusi
} // namespace psddl_python
#endif // PSDDL_PYTHON_LUSI_DDL_WRAPPER_H
