/* Do not edit this file, as it is auto-generated */

#ifndef PSDDL_PYTHON_LUSI_DDL_WRAPPER_H
#define PSDDL_PYTHON_LUSI_DDL_WRAPPER_H 1

#include <vector>
#include "psddl_python/DdlWrapper.h"
#include "psddl_python/Converter.h"
#include "ndarray/ndarray.h"
#include "pdsdata/xtc/TypeId.hh"
#include "psddl_psana/lusi.ddl.h" // inc_psana

namespace psddl_python {
namespace Lusi {

using namespace boost::python;
using boost::python::api::object;
using boost::shared_ptr;
using std::vector;

void createWrappers(PyObject* module);

class IpmFexConfigV1_Wrapper {
  shared_ptr<const Psana::Lusi::IpmFexConfigV1> m_obj;
public:
  enum { TypeId = Pds::TypeId::Id_IpmFexConfig };
  enum { Version = 1 };
  IpmFexConfigV1_Wrapper(const shared_ptr<const Psana::Lusi::IpmFexConfigV1>& obj) : m_obj(obj) {}
  boost::python::list diode() const { return detail::ndToList(m_obj->diode()); }
  float xscale() const { return m_obj->xscale(); }
  float yscale() const { return m_obj->yscale(); }
};

class IpmFexConfigV2_Wrapper {
  shared_ptr<const Psana::Lusi::IpmFexConfigV2> m_obj;
public:
  enum { TypeId = Pds::TypeId::Id_IpmFexConfig };
  enum { Version = 2 };
  IpmFexConfigV2_Wrapper(const shared_ptr<const Psana::Lusi::IpmFexConfigV2>& obj) : m_obj(obj) {}
  boost::python::list diode() const { return detail::ndToList(m_obj->diode()); }
  float xscale() const { return m_obj->xscale(); }
  float yscale() const { return m_obj->yscale(); }
};

  class DiodeFexConfigV1_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::DiodeFexConfigV1);}
    const char* getTypeName() const { return "Psana::Lusi::DiodeFexConfigV1";}
    int getVersion() const { return Psana::Lusi::DiodeFexConfigV1::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_DiodeFexConfig; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::DiodeFexConfigV1> result = boost::static_pointer_cast<Psana::Lusi::DiodeFexConfigV1>(vdata);
      return result.get() ? object(*result) : object();
    }
  };

  class DiodeFexConfigV2_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::DiodeFexConfigV2);}
    const char* getTypeName() const { return "Psana::Lusi::DiodeFexConfigV2";}
    int getVersion() const { return Psana::Lusi::DiodeFexConfigV2::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_DiodeFexConfig; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::DiodeFexConfigV2> result = boost::static_pointer_cast<Psana::Lusi::DiodeFexConfigV2>(vdata);
      return result.get() ? object(*result) : object();
    }
  };

  class DiodeFexV1_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::DiodeFexV1);}
    const char* getTypeName() const { return "Psana::Lusi::DiodeFexV1";}
    int getVersion() const { return Psana::Lusi::DiodeFexV1::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_DiodeFex; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::DiodeFexV1> result = boost::static_pointer_cast<Psana::Lusi::DiodeFexV1>(vdata);
      return result.get() ? object(*result) : object();
    }
  };

  class IpmFexConfigV1_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::IpmFexConfigV1);}
    const char* getTypeName() const { return "Psana::Lusi::IpmFexConfigV1";}
    int getVersion() const { return Psana::Lusi::IpmFexConfigV1::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_IpmFexConfig; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::IpmFexConfigV1> result = boost::static_pointer_cast<Psana::Lusi::IpmFexConfigV1>(vdata);
      return result.get() ? object(IpmFexConfigV1_Wrapper(result)) : object();
    }
  };

  class IpmFexConfigV2_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::IpmFexConfigV2);}
    const char* getTypeName() const { return "Psana::Lusi::IpmFexConfigV2";}
    int getVersion() const { return Psana::Lusi::IpmFexConfigV2::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_IpmFexConfig; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::IpmFexConfigV2> result = boost::static_pointer_cast<Psana::Lusi::IpmFexConfigV2>(vdata);
      return result.get() ? object(IpmFexConfigV2_Wrapper(result)) : object();
    }
  };

  class IpmFexV1_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::IpmFexV1);}
    const char* getTypeName() const { return "Psana::Lusi::IpmFexV1";}
    int getVersion() const { return Psana::Lusi::IpmFexV1::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_IpmFex; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::IpmFexV1> result = boost::static_pointer_cast<Psana::Lusi::IpmFexV1>(vdata);
      return result.get() ? object(*result) : object();
    }
  };

  class PimImageConfigV1_Converter : public psddl_python::Converter {
  public:
    const std::type_info* typeinfo() const { return &typeid(Psana::Lusi::PimImageConfigV1);}
    const char* getTypeName() const { return "Psana::Lusi::PimImageConfigV1";}
    int getVersion() const { return Psana::Lusi::PimImageConfigV1::Version; }
    int pdsTypeId() const { return Pds::TypeId::Id_PimImageConfig; }
    object convert(const boost::shared_ptr<void>& vdata) const {
      shared_ptr<Psana::Lusi::PimImageConfigV1> result = boost::static_pointer_cast<Psana::Lusi::PimImageConfigV1>(vdata);
      return result.get() ? object(*result) : object();
    }
  };
} // namespace Lusi
} // namespace psddl_python
#endif // PSDDL_PYTHON_LUSI_DDL_WRAPPER_H
