/* Do not edit this file, as it is auto-generated */

#include <psddl_python/orca.ddl.wrapper.h> // inc_python
#include <cstddef>

namespace psddl_python {
namespace Orca {

void createWrappers(PyObject* module) {
  _import_array();
  PyObject* submodule = Py_InitModule3( "psana.Orca", 0, "The Python wrapper module for Orca types");
  Py_INCREF(submodule);
  PyModule_AddObject(module, "Orca", submodule);
  scope mod = object(handle<>(borrowed(submodule)));

#define _CLASS(n, NAME, policy) class_<n>(NAME, no_init)\
    .def("mode", &n::mode)\
    .def("cooling", &n::cooling)\
    .def("defect_pixel_correction_enabled", &n::defect_pixel_correction_enabled)\
    .def("rows", &n::rows)\

  _CLASS(psddl_python::Orca::ConfigV1_Wrapper, "ConfigV1", return_value_policy<return_by_value>());
  std_vector_class_(ConfigV1_Wrapper);
#undef _CLASS
  ADD_GETTER(ConfigV1);


} // createWrappers()
} // namespace Orca
} // namespace psddl_python
