/* Do not edit this file, as it is auto-generated */

#include <boost/make_shared.hpp>
#include "psddl_python/evr.ddl.wrapper.h" // inc_python
#include "psddl_python/ConverterMap.h"
#include "psddl_python/ConverterBoostDef.h"
#include "psddl_python/ConverterBoostDefWrap.h"

namespace psddl_python {
namespace EvrData {

namespace {
template <typename T>
PyObject* method_typeid() {
  static PyObject* ptypeid = PyCObject_FromVoidPtr((void*)&typeid(T), 0);
  Py_INCREF(ptypeid);
  return ptypeid;
}
} // namespace

void createWrappers(PyObject* module) {
  PyObject* submodule = Py_InitModule3( "psana.EvrData", 0, "The Python wrapper module for EvrData types");
  Py_INCREF(submodule);
  PyModule_AddObject(module, "EvrData", submodule);
  scope mod = object(handle<>(borrowed(submodule)));
  class_<Psana::EvrData::PulseConfig>("PulseConfig", no_init)
    .def("pulse", &Psana::EvrData::PulseConfig::pulse)
    .def("_input_control_value", &Psana::EvrData::PulseConfig::_input_control_value)
    .def("bf_trigger", &Psana::EvrData::PulseConfig::bf_trigger)
    .def("bf_set", &Psana::EvrData::PulseConfig::bf_set)
    .def("bf_clear", &Psana::EvrData::PulseConfig::bf_clear)
    .def("_output_control_value", &Psana::EvrData::PulseConfig::_output_control_value)
    .def("polarity", &Psana::EvrData::PulseConfig::polarity)
    .def("map_set_enable", &Psana::EvrData::PulseConfig::map_set_enable)
    .def("map_reset_enable", &Psana::EvrData::PulseConfig::map_reset_enable)
    .def("map_trigger_enable", &Psana::EvrData::PulseConfig::map_trigger_enable)
    .def("prescale", &Psana::EvrData::PulseConfig::prescale)
    .def("delay", &Psana::EvrData::PulseConfig::delay)
    .def("width", &Psana::EvrData::PulseConfig::width)
    .def("trigger", &Psana::EvrData::PulseConfig::trigger)
    .def("set", &Psana::EvrData::PulseConfig::set)
    .def("clear", &Psana::EvrData::PulseConfig::clear)
    .def("__typeid__", &method_typeid<Psana::EvrData::PulseConfig>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::PulseConfig> >(-1, -1));

  class_<Psana::EvrData::PulseConfigV3>("PulseConfigV3", no_init)
    .def("pulseId", &Psana::EvrData::PulseConfigV3::pulseId)
    .def("polarity", &Psana::EvrData::PulseConfigV3::polarity)
    .def("prescale", &Psana::EvrData::PulseConfigV3::prescale)
    .def("delay", &Psana::EvrData::PulseConfigV3::delay)
    .def("width", &Psana::EvrData::PulseConfigV3::width)
    .def("__typeid__", &method_typeid<Psana::EvrData::PulseConfigV3>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::PulseConfigV3> >(-1, -1));

  class_<Psana::EvrData::EventCodeV3>("EventCodeV3", no_init)
    .def("code", &Psana::EvrData::EventCodeV3::code)
    .def("_u16MaskEventAttr_value", &Psana::EvrData::EventCodeV3::_u16MaskEventAttr_value)
    .def("isReadout", &Psana::EvrData::EventCodeV3::isReadout)
    .def("isTerminator", &Psana::EvrData::EventCodeV3::isTerminator)
    .def("maskTrigger", &Psana::EvrData::EventCodeV3::maskTrigger)
    .def("maskSet", &Psana::EvrData::EventCodeV3::maskSet)
    .def("maskClear", &Psana::EvrData::EventCodeV3::maskClear)
    .def("__typeid__", &method_typeid<Psana::EvrData::EventCodeV3>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::EventCodeV3> >(-1, -1));

  class_<Psana::EvrData::EventCodeV4>("EventCodeV4", no_init)
    .def("code", &Psana::EvrData::EventCodeV4::code)
    .def("_u16MaskEventAttr_value", &Psana::EvrData::EventCodeV4::_u16MaskEventAttr_value)
    .def("isReadout", &Psana::EvrData::EventCodeV4::isReadout)
    .def("isTerminator", &Psana::EvrData::EventCodeV4::isTerminator)
    .def("reportDelay", &Psana::EvrData::EventCodeV4::reportDelay)
    .def("reportWidth", &Psana::EvrData::EventCodeV4::reportWidth)
    .def("maskTrigger", &Psana::EvrData::EventCodeV4::maskTrigger)
    .def("maskSet", &Psana::EvrData::EventCodeV4::maskSet)
    .def("maskClear", &Psana::EvrData::EventCodeV4::maskClear)
    .def("__typeid__", &method_typeid<Psana::EvrData::EventCodeV4>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::EventCodeV4> >(-1, -1));

  class_<Psana::EvrData::EventCodeV5>("EventCodeV5", no_init)
    .def("code", &Psana::EvrData::EventCodeV5::code)
    .def("isReadout", &Psana::EvrData::EventCodeV5::isReadout)
    .def("isCommand", &Psana::EvrData::EventCodeV5::isCommand)
    .def("isLatch", &Psana::EvrData::EventCodeV5::isLatch)
    .def("reportDelay", &Psana::EvrData::EventCodeV5::reportDelay)
    .def("reportWidth", &Psana::EvrData::EventCodeV5::reportWidth)
    .def("maskTrigger", &Psana::EvrData::EventCodeV5::maskTrigger)
    .def("maskSet", &Psana::EvrData::EventCodeV5::maskSet)
    .def("maskClear", &Psana::EvrData::EventCodeV5::maskClear)
    .def("desc", &Psana::EvrData::EventCodeV5::desc)
    .def("desc_shape", &Psana::EvrData::EventCodeV5::desc_shape)
    .def("__typeid__", &method_typeid<Psana::EvrData::EventCodeV5>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::EventCodeV5> >(-1, -1));

  class_<Psana::EvrData::EventCodeV6>("EventCodeV6", no_init)
    .def("code", &Psana::EvrData::EventCodeV6::code)
    .def("isReadout", &Psana::EvrData::EventCodeV6::isReadout)
    .def("isCommand", &Psana::EvrData::EventCodeV6::isCommand)
    .def("isLatch", &Psana::EvrData::EventCodeV6::isLatch)
    .def("reportDelay", &Psana::EvrData::EventCodeV6::reportDelay)
    .def("reportWidth", &Psana::EvrData::EventCodeV6::reportWidth)
    .def("maskTrigger", &Psana::EvrData::EventCodeV6::maskTrigger)
    .def("maskSet", &Psana::EvrData::EventCodeV6::maskSet)
    .def("maskClear", &Psana::EvrData::EventCodeV6::maskClear)
    .def("desc", &Psana::EvrData::EventCodeV6::desc)
    .def("readoutGroup", &Psana::EvrData::EventCodeV6::readoutGroup)
    .def("desc_shape", &Psana::EvrData::EventCodeV6::desc_shape)
    .def("__typeid__", &method_typeid<Psana::EvrData::EventCodeV6>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::EventCodeV6> >(-1, -1));

  class_<Psana::EvrData::OutputMap>("OutputMap", no_init)
    .def("value", &Psana::EvrData::OutputMap::value)
    .def("source", &Psana::EvrData::OutputMap::source)
    .def("source_id", &Psana::EvrData::OutputMap::source_id)
    .def("conn", &Psana::EvrData::OutputMap::conn)
    .def("conn_id", &Psana::EvrData::OutputMap::conn_id)
    .def("__typeid__", &method_typeid<Psana::EvrData::OutputMap>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::OutputMap> >(-1, -1));

  class_<Psana::EvrData::OutputMapV2>("OutputMapV2", no_init)
    .def("value", &Psana::EvrData::OutputMapV2::value)
    .def("source", &Psana::EvrData::OutputMapV2::source)
    .def("source_id", &Psana::EvrData::OutputMapV2::source_id)
    .def("conn", &Psana::EvrData::OutputMapV2::conn)
    .def("conn_id", &Psana::EvrData::OutputMapV2::conn_id)
    .def("module", &Psana::EvrData::OutputMapV2::module)
    .def("__typeid__", &method_typeid<Psana::EvrData::OutputMapV2>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::OutputMapV2> >(-1, -1));

  class_<psddl_python::EvrData::ConfigV1_Wrapper>("ConfigV1", no_init)
    .def("npulses", &psddl_python::EvrData::ConfigV1_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV1_Wrapper::noutputs)
    .def("pulses", &psddl_python::EvrData::ConfigV1_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV1_Wrapper::output_maps)
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV1>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV1, psddl_python::EvrData::ConfigV1_Wrapper> >(Pds::TypeId::Id_EvrConfig, 1));

  class_<psddl_python::EvrData::ConfigV2_Wrapper>("ConfigV2", no_init)
    .def("opcode", &psddl_python::EvrData::ConfigV2_Wrapper::opcode)
    .def("npulses", &psddl_python::EvrData::ConfigV2_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV2_Wrapper::noutputs)
    .def("pulses", &psddl_python::EvrData::ConfigV2_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV2_Wrapper::output_maps)
    .def("beam", &psddl_python::EvrData::ConfigV2_Wrapper::beam)
    .def("rate", &psddl_python::EvrData::ConfigV2_Wrapper::rate)
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV2>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV2, psddl_python::EvrData::ConfigV2_Wrapper> >(Pds::TypeId::Id_EvrConfig, 2));

  class_<psddl_python::EvrData::ConfigV3_Wrapper>("ConfigV3", no_init)
    .def("neventcodes", &psddl_python::EvrData::ConfigV3_Wrapper::neventcodes)
    .def("npulses", &psddl_python::EvrData::ConfigV3_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV3_Wrapper::noutputs)
    .def("eventcodes", &psddl_python::EvrData::ConfigV3_Wrapper::eventcodes)
    .def("pulses", &psddl_python::EvrData::ConfigV3_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV3_Wrapper::output_maps)
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV3>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV3, psddl_python::EvrData::ConfigV3_Wrapper> >(Pds::TypeId::Id_EvrConfig, 3));

  class_<psddl_python::EvrData::ConfigV4_Wrapper>("ConfigV4", no_init)
    .def("neventcodes", &psddl_python::EvrData::ConfigV4_Wrapper::neventcodes)
    .def("npulses", &psddl_python::EvrData::ConfigV4_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV4_Wrapper::noutputs)
    .def("eventcodes", &psddl_python::EvrData::ConfigV4_Wrapper::eventcodes)
    .def("pulses", &psddl_python::EvrData::ConfigV4_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV4_Wrapper::output_maps)
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV4>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV4, psddl_python::EvrData::ConfigV4_Wrapper> >(Pds::TypeId::Id_EvrConfig, 4));

  class_<Psana::EvrData::SequencerEntry>("SequencerEntry", no_init)
    .def("delay", &Psana::EvrData::SequencerEntry::delay)
    .def("eventcode", &Psana::EvrData::SequencerEntry::eventcode)
    .def("__typeid__", &method_typeid<Psana::EvrData::SequencerEntry>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::SequencerEntry> >(-1, -1));

  class_<psddl_python::EvrData::SequencerConfigV1_Wrapper>("SequencerConfigV1", no_init)
    .def("sync_source", &psddl_python::EvrData::SequencerConfigV1_Wrapper::sync_source)
    .def("beam_source", &psddl_python::EvrData::SequencerConfigV1_Wrapper::beam_source)
    .def("length", &psddl_python::EvrData::SequencerConfigV1_Wrapper::length)
    .def("cycles", &psddl_python::EvrData::SequencerConfigV1_Wrapper::cycles)
    .def("entries", &psddl_python::EvrData::SequencerConfigV1_Wrapper::entries)
    .def("__typeid__", &method_typeid<Psana::EvrData::SequencerConfigV1>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::SequencerConfigV1, psddl_python::EvrData::SequencerConfigV1_Wrapper> >(-1, -1));

  class_<psddl_python::EvrData::ConfigV5_Wrapper>("ConfigV5", no_init)
    .def("neventcodes", &psddl_python::EvrData::ConfigV5_Wrapper::neventcodes)
    .def("npulses", &psddl_python::EvrData::ConfigV5_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV5_Wrapper::noutputs)
    .def("eventcodes", &psddl_python::EvrData::ConfigV5_Wrapper::eventcodes)
    .def("pulses", &psddl_python::EvrData::ConfigV5_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV5_Wrapper::output_maps)
    .def("seq_config", &psddl_python::EvrData::ConfigV5_Wrapper::seq_config, return_value_policy<copy_const_reference>())
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV5>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV5, psddl_python::EvrData::ConfigV5_Wrapper> >(Pds::TypeId::Id_EvrConfig, 5));

  class_<psddl_python::EvrData::ConfigV6_Wrapper>("ConfigV6", no_init)
    .def("neventcodes", &psddl_python::EvrData::ConfigV6_Wrapper::neventcodes)
    .def("npulses", &psddl_python::EvrData::ConfigV6_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV6_Wrapper::noutputs)
    .def("eventcodes", &psddl_python::EvrData::ConfigV6_Wrapper::eventcodes)
    .def("pulses", &psddl_python::EvrData::ConfigV6_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV6_Wrapper::output_maps)
    .def("seq_config", &psddl_python::EvrData::ConfigV6_Wrapper::seq_config, return_value_policy<copy_const_reference>())
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV6>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV6, psddl_python::EvrData::ConfigV6_Wrapper> >(Pds::TypeId::Id_EvrConfig, 6));

  class_<psddl_python::EvrData::ConfigV7_Wrapper>("ConfigV7", no_init)
    .def("neventcodes", &psddl_python::EvrData::ConfigV7_Wrapper::neventcodes)
    .def("npulses", &psddl_python::EvrData::ConfigV7_Wrapper::npulses)
    .def("noutputs", &psddl_python::EvrData::ConfigV7_Wrapper::noutputs)
    .def("eventcodes", &psddl_python::EvrData::ConfigV7_Wrapper::eventcodes)
    .def("pulses", &psddl_python::EvrData::ConfigV7_Wrapper::pulses)
    .def("output_maps", &psddl_python::EvrData::ConfigV7_Wrapper::output_maps)
    .def("seq_config", &psddl_python::EvrData::ConfigV7_Wrapper::seq_config, return_value_policy<copy_const_reference>())
    .def("__typeid__", &method_typeid<Psana::EvrData::ConfigV7>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::ConfigV7, psddl_python::EvrData::ConfigV7_Wrapper> >(Pds::TypeId::Id_EvrConfig, 7));

  class_<Psana::EvrData::FIFOEvent>("FIFOEvent", no_init)
    .def("timestampHigh", &Psana::EvrData::FIFOEvent::timestampHigh)
    .def("timestampLow", &Psana::EvrData::FIFOEvent::timestampLow)
    .def("eventCode", &Psana::EvrData::FIFOEvent::eventCode)
    .def("__typeid__", &method_typeid<Psana::EvrData::FIFOEvent>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::FIFOEvent> >(-1, -1));

  class_<psddl_python::EvrData::DataV3_Wrapper>("DataV3", no_init)
    .def("numFifoEvents", &psddl_python::EvrData::DataV3_Wrapper::numFifoEvents)
    .def("fifoEvents", &psddl_python::EvrData::DataV3_Wrapper::fifoEvents)
    .def("__typeid__", &method_typeid<Psana::EvrData::DataV3>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::DataV3, psddl_python::EvrData::DataV3_Wrapper> >(Pds::TypeId::Id_EvrData, 3));

  class_<Psana::EvrData::IOChannel>("IOChannel", no_init)
    .def("name", &Psana::EvrData::IOChannel::name)
    .def("ninfo", &Psana::EvrData::IOChannel::ninfo)
    .def("infos", &Psana::EvrData::IOChannel::infos)
    .def("name_shape", &Psana::EvrData::IOChannel::name_shape)
    .def("__typeid__", &method_typeid<Psana::EvrData::IOChannel>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDef<Psana::EvrData::IOChannel> >(-1, -1));

  class_<psddl_python::EvrData::IOConfigV1_Wrapper>("IOConfigV1", no_init)
    .def("nchannels", &psddl_python::EvrData::IOConfigV1_Wrapper::nchannels)
    .def("channels", &psddl_python::EvrData::IOConfigV1_Wrapper::channels)
    .def("conn", &psddl_python::EvrData::IOConfigV1_Wrapper::conn)
    .def("__typeid__", &method_typeid<Psana::EvrData::IOConfigV1>)
    .staticmethod("__typeid__")
  ;
  ConverterMap::instance().addConverter(boost::make_shared<ConverterBoostDefWrap<Psana::EvrData::IOConfigV1, psddl_python::EvrData::IOConfigV1_Wrapper> >(Pds::TypeId::Id_EvrIOConfig, 1));

  {
    PyObject* unvlist = PyList_New(1);
    PyList_SET_ITEM(unvlist, 0, PyObject_GetAttrString(submodule, "DataV3"));
    PyObject_SetAttrString(submodule, "Data", unvlist);
    Py_CLEAR(unvlist);
  }
  {
    PyObject* unvlist = PyList_New(7);
    PyList_SET_ITEM(unvlist, 0, PyObject_GetAttrString(submodule, "ConfigV1"));
    PyList_SET_ITEM(unvlist, 1, PyObject_GetAttrString(submodule, "ConfigV2"));
    PyList_SET_ITEM(unvlist, 2, PyObject_GetAttrString(submodule, "ConfigV3"));
    PyList_SET_ITEM(unvlist, 3, PyObject_GetAttrString(submodule, "ConfigV4"));
    PyList_SET_ITEM(unvlist, 4, PyObject_GetAttrString(submodule, "ConfigV5"));
    PyList_SET_ITEM(unvlist, 5, PyObject_GetAttrString(submodule, "ConfigV6"));
    PyList_SET_ITEM(unvlist, 6, PyObject_GetAttrString(submodule, "ConfigV7"));
    PyObject_SetAttrString(submodule, "Config", unvlist);
    Py_CLEAR(unvlist);
  }
  {
    PyObject* unvlist = PyList_New(1);
    PyList_SET_ITEM(unvlist, 0, PyObject_GetAttrString(submodule, "IOConfigV1"));
    PyObject_SetAttrString(submodule, "IOConfig", unvlist);
    Py_CLEAR(unvlist);
  }

} // createWrappers()
} // namespace EvrData
} // namespace psddl_python
