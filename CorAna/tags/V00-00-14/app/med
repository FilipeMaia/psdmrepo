#!@PYTHON@
#--------------------------------------------------------------------------
# File and Version Information:
#  $Id$
#
# Description:
#  Script tcdpe...
#
#------------------------------------------------------------------------

"""This script starts stand alone version of the MaskEditor.

This software was developed for the LCLS project.  If you use all or 
part of it, please give an appropriate acknowledgement.

@see RelatedModule

@version $Id$ 

@author Mikhail S. Dubrovin
"""

#------------------------------
#  Module's version from CVS --
#------------------------------
__version__ = "$Revision: 8 $"
# $Source$

#--------------------------------
#  Imports of standard modules --
#--------------------------------
import sys
import os
#import time

import matplotlib
matplotlib.use('Qt4Agg') # forse Agg rendering to a Qt4 canvas (backend)

#-----------------------------
# Imports for other modules --
#-----------------------------

from CorAna.MaskEditor import MaskEditor
from optparse import OptionParser
from PyQt4 import QtGui, QtCore

#------------------------------

def input_options_parser() :

    parser = OptionParser(description='Optional input parameters.', usage ='usage: %prog [options] args')
    parser.add_option('-i', '--fname_img',   dest='ifname',  default='',           action='store', type='string', help='input image file name')
    parser.add_option('-o', '--fname_fig',   dest='ofname',  default='./fig.png',  action='store', type='string', help='output png file name for current canvas')
    parser.add_option('-m', '--path_mask',   dest='mfname',  default='./mask-roi', action='store', type='string', help='common path to I/O files with mask')
    parser.add_option('-t', '--title',       dest='title',   default='Mask editor',action='store', type='string', help='initial title of the garphical window')
    parser.add_option('-x', '--xc',          dest='xc',      default=None,         action='store', type='float',  help='x coordinate of the center for Wedges')
    parser.add_option('-y', '--yc',          dest='yc',      default=None,         action='store', type='float',  help='y coordinate of the center for Wedges')
    parser.add_option('-p', '--picker',      dest='picker',  default=8,            action='store', type='int',    help='distance in pix, where object line can be reaced by mouse')
    parser.add_option('-w', '--lw',          dest='lw',      default=1,            action='store', type='int',    help='object line width')
    parser.add_option('-c', '--color',       dest='col',     default='b',          action='store', type='string', help='color of the form lines "b"-blue, "k"-black, etc.')
    parser.add_option('-v', '--verbose',     dest='verb',    default=True,         action='store_true',           help='allows print on console')
    parser.add_option('-q', '--quiet',       dest='verb',                          action='store_false',          help='supress print on console')

    (opts, args) = parser.parse_args()
    return (opts, args)
 
#---------------------------------
#
# run application when launched as a main module
#

if __name__ == "__main__" :

    (opts, args) = input_options_parser()
    #print 'opts:\n', opts
    #print 'args:\n', args

    if opts.xc==None or opts.yc==None : xyc=None
    else                              : xyc=(opts.xc,opts.yc)

    pars = {'parent' : None, 
            'arr'    : None, 
            'xyc'    : xyc,
            'ifname' : opts.ifname, 
            'ofname' : opts.ofname, 
            'mfname' : opts.mfname,
            'title'  : opts.title, 
            'lw'     : opts.lw, 
            'col'    : opts.col,
            'picker' : opts.picker,
            'verb'   : opts.verb}

    print 'Start MaskEditor with input parameters:'
    for k,v in pars.items():
	print '%9s : %s' % (k,v)

    app = QtGui.QApplication(sys.argv)
    w = MaskEditor(**pars)
    w.move(QtCore.QPoint(300,10))
    w.show()
    app.exec_()
    sys.exit('End of application maskeditor')

#---------------------------------
